

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
<<<<<<< Updated upstream
                                                                                               Sun Feb 09 22:35:51 2020
=======
                                                                                               Sun Feb 09 12:34:22 2020
>>>>>>> Stashed changes

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
<<<<<<< Updated upstream
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452                           
   453                           	psect	strings
   454  040C                     __pstrings:	
   455  040C                     stringtab:	
   456  040C                     __stringtab:	
   457                           
   458                           ;	String table - string pointers are 1 byte each
   459  040C  1BFF               	btfsc	btemp+1,7
   460  040D  2C16               	ljmp	stringcode
   461  040E  1383               	bcf	3,7
   462  040F  187F               	btfsc	btemp+1,0
   463  0410  1783               	bsf	3,7
   464  0411  0800               	movf	0,w
   465  0412  0A84               	incf	4,f
   466  0413  1903               	skipnz
   467  0414  0AFF               	incf	btemp+1,f
   468  0415  0008               	return
   469  0416                     stringcode:	
   470  0416                     stringdir:	
   471  0416  3004               	movlw	high stringdir
   472  0417  008A               	movwf	10
   473  0418  0804               	movf	4,w
   474  0419  0A84               	incf	4,f
   475  041A  0782               	addwf	2,f
   476  041B                     __stringbase:	
   477  041B  3400               	retlw	0
   478  041C                     __end_of__stringtab:	
   479  041C                     _dpowers:	
   480  041C  3401               	retlw	1
   481  041D  3400               	retlw	0
   482  041E  340A               	retlw	10
   483  041F  3400               	retlw	0
   484  0420  3464               	retlw	100
   485  0421  3400               	retlw	0
   486  0422  34E8               	retlw	232
   487  0423  3403               	retlw	3
   488  0424  3410               	retlw	16
   489  0425  3427               	retlw	39
   490  0426                     __end_of_dpowers:	
   491  001A                     _RCREG	set	26
   492  0019                     _TXREG	set	25
   493  001E                     _ADRESH	set	30
   494  001F                     _ADCON0bits	set	31
   495  000C                     _PIR1bits	set	12
   496  000B                     _INTCONbits	set	11
   497  0009                     _PORTE	set	9
   498  0006                     _PORTB	set	6
   499  0005                     _PORTA	set	5
   500  0008                     _PORTD	set	8
   501  00C4                     _CREN	set	196
   502  00C7                     _SPEN	set	199
   503  0065                     _RCIF	set	101
   504  0037                     _RB7	set	55
   505  0036                     _RB6	set	54
   506  0035                     _RB5	set	53
   507  0034                     _RB4	set	52
   508  0033                     _RB3	set	51
   509  0032                     _RB2	set	50
   510  0031                     _RB1	set	49
   511  0030                     _RB0	set	48
   512  0049                     _RE1	set	73
   513  0048                     _RE0	set	72
   514  0099                     _SPBRG	set	153
   515  0086                     _TRISBbits	set	134
   516  0089                     _TRISEbits	set	137
   517  0085                     _TRISAbits	set	133
   518  009F                     _ADCON1	set	159
   519  008C                     _PIE1bits	set	140
   520  0085                     _TRISA	set	133
   521  0088                     _TRISD	set	136
   522  0089                     _TRISE	set	137
   523  0086                     _TRISB	set	134
   524  04C1                     _TRMT	set	1217
   525  04C5                     _TXEN	set	1221
   526  043E                     _TRISC6	set	1086
   527  043F                     _TRISC7	set	1087
   528  04C4                     _SYNC	set	1220
   529  04C2                     _BRGH	set	1218
   530  0189                     _ANSELHbits	set	393
   531  0188                     _ANSELbits	set	392
   532  0189                     _ANSELH	set	393
   533  0188                     _ANSEL	set	392
   534  0426                     STR_2:	
   535  0426  3456               	retlw	86	;'V'
   536  0427  3431               	retlw	49	;'1'
   537  0428  3420               	retlw	32	;' '
   538  0429  3420               	retlw	32	;' '
   539  042A  3420               	retlw	32	;' '
   540  042B  3420               	retlw	32	;' '
   541  042C  3420               	retlw	32	;' '
   542  042D  3420               	retlw	32	;' '
   543  042E  3456               	retlw	86	;'V'
   544  042F  3432               	retlw	50	;'2'
   545  0430  3420               	retlw	32	;' '
   546  0431  3420               	retlw	32	;' '
   547  0432  3420               	retlw	32	;' '
   548  0433  3420               	retlw	32	;' '
   549  0434  3420               	retlw	32	;' '
   550  0435  3420               	retlw	32	;' '
   551  0436  3463               	retlw	99	;'c'
   552  0437  346F               	retlw	111	;'o'
   553  0438  346E               	retlw	110	;'n'
   554  0439  3474               	retlw	116	;'t'
   555  043A  3461               	retlw	97	;'a'
   556  043B  3464               	retlw	100	;'d'
   557  043C  346F               	retlw	111	;'o'
   558  043D  3472               	retlw	114	;'r'
   559  043E  3420               	retlw	32	;' '
   560  043F  3400               	retlw	0
   561  0440                     STR_1:	
   562  0440  3425               	retlw	37	;'%'
   563  0441  3464               	retlw	100	;'d'
   564  0442  3400               	retlw	0
   565                           
   566                           ; #config settings
   567  0000                     
   568                           	psect	cinit
   569  000F                     start_initialization:	
   570  000F                     __initialization:	
   571                           
   572                           ; Clear objects allocated to BANK0
   573  000F  1283               	bcf	3,5	;RP0=0, select bank0
   574  0010  1303               	bcf	3,6	;RP1=0, select bank0
   575  0011  01BC               	clrf	__pbssBANK0& (0+127)
   576  0012  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   577  0013  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   578  0014  01BF               	clrf	(__pbssBANK0+3)& (0+127)
   579  0015  01C0               	clrf	(__pbssBANK0+4)& (0+127)
   580  0016  01C1               	clrf	(__pbssBANK0+5)& (0+127)
   581  0017  01C2               	clrf	(__pbssBANK0+6)& (0+127)
   582  0018  01C3               	clrf	(__pbssBANK0+7)& (0+127)
   583  0019  01C4               	clrf	(__pbssBANK0+8)& (0+127)
   584  001A  01C5               	clrf	(__pbssBANK0+9)& (0+127)
   585  001B                     end_of_initialization:	
   586                           ;End of C runtime variable initialization code
   587                           
   588  001B                     __end_of__initialization:	
   589  001B  0183               	clrf	3
   590  001C  120A  118A  2A83   	ljmp	_main	;jump to C main() function
   591                           
   592                           	psect	bssBANK0
   593  003C                     __pbssBANK0:	
   594  003C                     _contador:	
   595  003C                     	ds	1
   596  003D                     _lecturaUSART:	
   597  003D                     	ds	1
   598  003E                     _valor:	
   599  003E                     	ds	8
   600                           
   601                           	psect	cstackCOMMON
   602  0070                     __pcstackCOMMON:	
   603  0070                     ?_PUERTO:	
   604  0070                     ?_Read_USART:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ??_Read_USART:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_configIO:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_configADC:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_Write_USART:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_comandosLCD:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_LCD_clear:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_LCD_Init:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_ISR:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ??_ISR:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_main:	
   635                           ; 1 bytes @ 0x0
   636                           
   637                           
   638                           ; 1 bytes @ 0x0
   639  0070                     	ds	3
   640  0073                     ??_PUERTO:	
   641  0073                     ??_configIO:	
   642                           ; 1 bytes @ 0x3
=======
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  001E                     _ADRESH	set	30
   366  001F                     _ADCON0bits	set	31
   367  0009                     _PORTE	set	9
   368  0006                     _PORTB	set	6
   369  0005                     _PORTA	set	5
   370  0037                     _RB7	set	55
   371  0036                     _RB6	set	54
   372  0035                     _RB5	set	53
   373  0034                     _RB4	set	52
   374  0033                     _RB3	set	51
   375  0032                     _RB2	set	50
   376  0031                     _RB1	set	49
   377  0030                     _RB0	set	48
   378  0049                     _RE1	set	73
   379  0048                     _RE0	set	72
   380  0086                     _TRISBbits	set	134
   381  0089                     _TRISEbits	set	137
   382  0085                     _TRISAbits	set	133
   383  009F                     _ADCON1	set	159
   384  0085                     _TRISA	set	133
   385  0089                     _TRISE	set	137
   386  0086                     _TRISB	set	134
   387  0189                     _ANSELHbits	set	393
   388  0188                     _ANSELbits	set	392
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391                           
   392                           	psect	strings
   393  0003                     __pstrings:	
   394  0003                     stringtab:	
   395  0003                     __stringtab:	
   396  0003                     stringcode:	
   397                           ;	String table - string pointers are 1 byte each
   398                           
   399  0003                     stringdir:	
   400  0003  3000               	movlw	high stringdir
   401  0004  008A               	movwf	10
   402  0005  0804               	movf	4,w
   403  0006  0A84               	incf	4,f
   404  0007  0782               	addwf	2,f
   405  0008                     __stringbase:	
   406  0008  3400               	retlw	0
   407  0009                     __end_of__stringtab:	
   408  0009                     STR_1:	
   409  0009  3468               	retlw	104	;'h'
   410  000A  346F               	retlw	111	;'o'
   411  000B  346C               	retlw	108	;'l'
   412  000C  3461               	retlw	97	;'a'
   413  000D  3400               	retlw	0
   414                           
   415                           ; #config settings
   416  0000                     
   417                           	psect	cinit
   418  07FC                     start_initialization:	
   419  07FC                     __initialization:	
   420  07FC                     end_of_initialization:	
   421                           ;End of C runtime variable initialization code
   422                           
   423  07FC                     __end_of__initialization:	
   424  07FC  0183               	clrf	3
   425  07FD  120A  118A  2F11   	ljmp	_main	;jump to C main() function
   426                           
   427                           	psect	cstackCOMMON
   428  0070                     __pcstackCOMMON:	
   429  0070                     ?_PUERTO:	
   430  0070                     ??_PUERTO:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_configIO:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ??_configIO:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_configADC:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ??_configADC:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_print_LCD_Char:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_comandosLCD:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_LCD_clear:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_LCD_Init:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_print_LCD_String:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_main:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     PUERTO@x:	
   464                           ; 1 bytes @ 0x0
   465                           
   466                           
   467                           ; 1 bytes @ 0x0
   468  0070                     	ds	1
   469  0071                     ??_print_LCD_Char:	
   470  0071                     ??_comandosLCD:	
   471                           ; 1 bytes @ 0x1
   472                           
   473  0071                     ??_LCD_Init:	
   474                           ; 1 bytes @ 0x1
   475                           
   476                           
   477                           ; 1 bytes @ 0x1
   478  0071                     	ds	1
   479  0072                     print_LCD_Char@temp:	
   480                           
   481                           ; 1 bytes @ 0x2
   482  0072                     	ds	1
   483  0073                     print_LCD_Char@y:	
   484  0073                     comandosLCD@x:	
   485                           ; 1 bytes @ 0x3
   486                           
   487                           
   488                           ; 1 bytes @ 0x3
   489  0073                     	ds	1
   490  0074                     ??_LCD_clear:	
   491  0074                     ?_LCD_Set_Cursor:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0074                     print_LCD_Char@caracter:	
   495                           ; 1 bytes @ 0x4
   496                           
   497  0074                     LCD_Set_Cursor@y:	
   498                           ; 1 bytes @ 0x4
   499                           
   500                           
   501                           ; 1 bytes @ 0x4
   502  0074                     	ds	1
   503  0075                     ??_LCD_Set_Cursor:	
   504  0075                     ??_print_LCD_String:	
   505                           ; 1 bytes @ 0x5
   506                           
   507  0075                     print_LCD_String@i:	
   508                           ; 1 bytes @ 0x5
   509                           
   510                           
   511                           ; 2 bytes @ 0x5
   512  0075                     	ds	1
   513  0076                     LCD_Set_Cursor@x:	
   514                           
   515                           ; 1 bytes @ 0x6
   516  0076                     	ds	1
   517  0077                     LCD_Set_Cursor@a:	
   518  0077                     print_LCD_String@a:	
   519                           ; 1 bytes @ 0x7
   520                           
   521                           
   522                           ; 1 bytes @ 0x7
   523  0077                     	ds	1
   524  0078                     ??_main:	
   525                           
   526                           	psect	maintext
   527  0711                     __pmaintext:	
   528                           ; 1 bytes @ 0x8
   529 ;;
   530 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   531 ;;
   532 ;; *************** function _main *****************
   533 ;; Defined at:
   534 ;;		line 41 in file "LAB3.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : B00/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels required when called:    3
   554 ;; This function calls:
   555 ;;		_LCD_Init
   556 ;;		_LCD_Set_Cursor
   557 ;;		_LCD_clear
   558 ;;		_configADC
   559 ;;		_configIO
   560 ;;		_print_LCD_String
   561 ;; This function is called by:
   562 ;;		Startup code after reset
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           
   567                           ;psect for function _main
   568  0711                     _main:	
   569  0711                     l922:	
   570                           ;incstack = 0
   571                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   572                           
   573                           
   574                           ;LAB3.c: 42:     configIO();
   575  0711  120A  118A  26A2  120A  118A  	fcall	_configIO
   576  0716                     l924:	
   577                           
   578                           ;LAB3.c: 43:     configADC();
   579  0716  120A  118A  2698  120A  118A  	fcall	_configADC
   580  071B                     l926:	
   581                           
   582                           ;LAB3.c: 44:     LCD_Init();
   583  071B  120A  118A  27B1  120A  118A  	fcall	_LCD_Init
   584  0720                     l928:	
   585                           
   586                           ;LAB3.c: 45:     LCD_clear();
   587  0720  120A  118A  2691  120A  118A  	fcall	_LCD_clear
   588  0725                     l930:	
   589                           
   590                           ;LAB3.c: 47:         LCD_clear();
   591  0725  120A  118A  2691  120A  118A  	fcall	_LCD_clear
   592  072A                     l932:	
   593                           
   594                           ;LAB3.c: 48:         LCD_Set_Cursor(1,1);
   595  072A  01F4               	clrf	LCD_Set_Cursor@y
   596  072B  0AF4               	incf	LCD_Set_Cursor@y,f
   597  072C  3001               	movlw	1
   598  072D  120A  118A  26C8  120A  118A  	fcall	_LCD_Set_Cursor
   599  0732                     l934:	
   600                           
   601                           ;LAB3.c: 49:         print_LCD_String("hola");
   602  0732  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   603  0733  120A  118A  26EC  120A  118A  	fcall	_print_LCD_String
   604  0738  2F25               	goto	l930
   605  0739  120A  118A  2800   	ljmp	start
   606  073C                     __end_of_main:	
   607                           
   608                           	psect	text1
   609  06EC                     __ptext1:	
   610 ;; *************** function _print_LCD_String *****************
   611 ;; Defined at:
   612 ;;		line 78 in file "LCD.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  a               1    wreg     PTR unsigned char 
   615 ;;		 -> STR_1(5), 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  a               1    7[COMMON] PTR unsigned char 
   618 ;;		 -> STR_1(5), 
   619 ;;  i               2    5[COMMON] int 
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         3       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0
   632 ;;      Totals:         3       0       0       0       0
   633 ;;Total ram usage:        3 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; Hardware stack levels required when called:    2
   636 ;; This function calls:
   637 ;;		_print_LCD_Char
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
>>>>>>> Stashed changes
   643                           
   644  0073                     ??_configADC:	
   645                           ; 1 bytes @ 0x3
   646                           
   647  0073                     ??_Write_USART:	
   648                           ; 1 bytes @ 0x3
   649                           
   650  0073                     ?___lwdiv:	
   651                           ; 1 bytes @ 0x3
   652                           
   653  0073                     ?___aldiv:	
   654                           ; 2 bytes @ 0x3
   655                           
   656  0073                     PUERTO@x:	
   657                           ; 4 bytes @ 0x3
   658                           
   659  0073                     Write_USART@a:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0073                     ___lwdiv@divisor:	
   663                           ; 1 bytes @ 0x3
   664                           
   665  0073                     ___aldiv@divisor:	
   666                           ; 2 bytes @ 0x3
   667                           
   668                           
   669                           ; 4 bytes @ 0x3
   670  0073                     	ds	1
   671  0074                     ?_Write_USART_String:	
   672  0074                     ??_comandosLCD:	
   673                           ; 1 bytes @ 0x4
   674                           
   675  0074                     ??_LCD_Init:	
   676                           ; 1 bytes @ 0x4
   677                           
   678  0074                     Write_USART_String@a:	
   679                           ; 1 bytes @ 0x4
   680                           
   681                           
   682                           ; 2 bytes @ 0x4
   683  0074                     	ds	1
   684  0075                     ___lwdiv@dividend:	
   685                           
   686                           ; 2 bytes @ 0x5
   687  0075                     	ds	1
   688  0076                     ??_Write_USART_String:	
   689  0076                     comandosLCD@x:	
   690                           ; 1 bytes @ 0x6
   691                           
   692                           
   693                           ; 1 bytes @ 0x6
   694  0076                     	ds	1
   695  0077                     ??_LCD_clear:	
   696  0077                     ??___lwdiv:	
   697                           ; 1 bytes @ 0x7
   698                           
   699  0077                     Write_USART_String@i:	
   700                           ; 1 bytes @ 0x7
   701                           
   702  0077                     ___aldiv@dividend:	
   703                           ; 1 bytes @ 0x7
   704                           
   705                           
   706                           ; 4 bytes @ 0x7
   707  0077                     	ds	1
   708  0078                     ___lwdiv@quotient:	
   709                           
   710                           ; 2 bytes @ 0x8
   711  0078                     	ds	2
   712  007A                     ___lwdiv@counter:	
   713                           
   714                           ; 1 bytes @ 0xA
   715  007A                     	ds	1
   716                           
   717                           	psect	cstackBANK0
   718  0020                     __pcstackBANK0:	
   719  0020                     ??___aldiv:	
   720  0020                     ?___lwmod:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0020                     ___lwmod@divisor:	
   724                           ; 2 bytes @ 0x0
   725                           
   726                           
   727                           ; 2 bytes @ 0x0
   728  0020                     	ds	1
   729  0021                     ___aldiv@counter:	
   730                           
   731                           ; 1 bytes @ 0x1
   732  0021                     	ds	1
   733  0022                     ___aldiv@sign:	
   734  0022                     ___lwmod@dividend:	
   735                           ; 1 bytes @ 0x2
   736                           
   737                           
   738                           ; 2 bytes @ 0x2
   739  0022                     	ds	1
   740  0023                     ___aldiv@quotient:	
   741                           
   742                           ; 4 bytes @ 0x3
   743  0023                     	ds	1
   744  0024                     ??___lwmod:	
   745                           
   746                           ; 1 bytes @ 0x4
   747  0024                     	ds	1
   748  0025                     ___lwmod@counter:	
   749                           
   750                           ; 1 bytes @ 0x5
   751  0025                     	ds	1
   752  0026                     ?_sprintf:	
   753  0026                     sprintf@f:	
   754                           ; 2 bytes @ 0x6
   755                           
   756                           
   757                           ; 1 bytes @ 0x6
   758  0026                     	ds	1
   759  0027                     ?_USART_Init:	
   760  0027                     USART_Init@baudrate:	
   761                           ; 1 bytes @ 0x7
   762                           
   763                           
   764                           ; 4 bytes @ 0x7
   765  0027                     	ds	2
   766  0029                     ??_sprintf:	
   767                           
   768                           ; 1 bytes @ 0x9
   769  0029                     	ds	2
   770  002B                     ??_USART_Init:	
   771                           
   772                           ; 1 bytes @ 0xB
   773  002B                     	ds	1
   774  002C                     sprintf@ap:	
   775                           
   776                           ; 1 bytes @ 0xC
   777  002C                     	ds	1
   778  002D                     sprintf@flag:	
   779                           
   780                           ; 1 bytes @ 0xD
   781  002D                     	ds	1
   782  002E                     sprintf@prec:	
   783                           
   784                           ; 1 bytes @ 0xE
   785  002E                     	ds	1
   786  002F                     sprintf@val:	
   787                           
   788                           ; 2 bytes @ 0xF
   789  002F                     	ds	2
   790  0031                     sprintf@sp:	
   791                           
<<<<<<< Updated upstream
   792                           ; 1 bytes @ 0x11
   793  0031                     	ds	1
   794  0032                     sprintf@c:	
   795                           
   796                           ; 1 bytes @ 0x12
   797  0032                     	ds	5
   798  0037                     USART_Init@x:	
   799                           
   800                           ; 2 bytes @ 0x17
   801  0037                     	ds	2
   802  0039                     ??_main:	
   803                           
   804                           ; 1 bytes @ 0x19
   805  0039                     	ds	3
   806                           
   807                           	psect	maintext
   808  0283                     __pmaintext:	
   809 ;;
   810 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   811 ;;
   812 ;; *************** function _main *****************
   813 ;; Defined at:
   814 ;;		line 55 in file "LAB3.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : B00/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          0       3       0       0       0
   831 ;;      Totals:         0       3       0       0       0
   832 ;;Total ram usage:        3 bytes
   833 ;; Hardware stack levels required when called:    5
   834 ;; This function calls:
   835 ;;		_LCD_Init
   836 ;;		_LCD_clear
   837 ;;		_USART_Init
   838 ;;		_Write_USART
   839 ;;		_Write_USART_String
   840 ;;		_configADC
   841 ;;		_configIO
   842 ;;		_sprintf
   843 ;; This function is called by:
   844 ;;		Startup code after reset
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _main
   850  0283                     _main:	
   851  0283                     l1586:	
   852                           ;incstack = 0
   853                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   854                           
   855                           
   856                           ;LAB3.c: 56:     configIO();
   857  0283  120A  118A  249B  120A  118A  	fcall	_configIO
   858  0288                     l1588:	
   859                           
   860                           ;LAB3.c: 57:     configADC();
   861  0288  120A  118A  24D7  120A  118A  	fcall	_configADC
   862  028D                     l1590:	
   863                           
   864                           ;LAB3.c: 58:     USART_Init(9600);
   865  028D  3000               	movlw	0
   866  028E  1283               	bcf	3,5	;RP0=0, select bank0
   867  028F  1303               	bcf	3,6	;RP1=0, select bank0
   868  0290  00AA               	movwf	USART_Init@baudrate+3
   869  0291  3000               	movlw	0
   870  0292  00A9               	movwf	USART_Init@baudrate+2
   871  0293  3025               	movlw	37
   872  0294  00A8               	movwf	USART_Init@baudrate+1
   873  0295  3080               	movlw	128
   874  0296  00A7               	movwf	USART_Init@baudrate
   875  0297  120A  118A  2109  120A  118A  	fcall	_USART_Init
   876  029C                     l1592:	
   877                           
   878                           ;LAB3.c: 59:     LCD_Init();
   879  029C  120A  118A  2303  120A  118A  	fcall	_LCD_Init
   880  02A1                     l1594:	
   881                           
   882                           ;LAB3.c: 60:     LCD_clear();
   883  02A1  120A  118A  24E9  120A  118A  	fcall	_LCD_clear
   884  02A6                     l1596:	
=======
   792                           ;LCD.c: 20:     RE1 = 1;
   793  0768  1283               	bcf	3,5	;RP0=0, select bank0
   794  0769  1303               	bcf	3,6	;RP1=0, select bank0
   795  076A  1489               	bsf	9,1	;volatile
   796  076B                     l782:	
   797                           
   798                           ;LCD.c: 21:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   799  076B  300D               	movlw	13
   800  076C  00F1               	movwf	??_print_LCD_Char
   801  076D                     u187:	
   802  076D  0BF1               	decfsz	??_print_LCD_Char,f
   803  076E  2F6D               	goto	u187
   804  076F                     l784:	
   805                           
   806                           ;LCD.c: 22:     RE1 = 0;
   807  076F  1283               	bcf	3,5	;RP0=0, select bank0
   808  0770  1303               	bcf	3,6	;RP1=0, select bank0
   809  0771  1089               	bcf	9,1	;volatile
   810  0772                     l27:	
   811  0772  0008               	return
   812  0773                     __end_of_print_LCD_Char:	
   813                           
   814                           	psect	text3
   815  06A2                     __ptext3:	
   816 ;; *************** function _configIO *****************
   817 ;; Defined at:
   818 ;;		line 53 in file "LAB3.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		status,2
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0
   834 ;;      Temps:          0       0       0       0       0
   835 ;;      Totals:         0       0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _configIO
   847  06A2                     _configIO:	
   848  06A2                     l826:	
   849                           ;incstack = 0
   850                           ; Regs used in _configIO: [status,2]
   851                           
   852                           
   853                           ;LAB3.c: 54:     TRISB=0;
   854  06A2  1683               	bsf	3,5	;RP0=1, select bank1
   855  06A3  1303               	bcf	3,6	;RP1=0, select bank1
   856  06A4  0186               	clrf	6	;volatile
   857                           
   858                           ;LAB3.c: 55:     TRISE=0;
   859  06A5  0189               	clrf	9	;volatile
   860                           
   861                           ;LAB3.c: 56:     TRISA=0;
   862  06A6  0185               	clrf	5	;volatile
   863                           
   864                           ;LAB3.c: 57:     ANSEL=0;
   865  06A7  1683               	bsf	3,5	;RP0=1, select bank3
   866  06A8  1703               	bsf	3,6	;RP1=1, select bank3
   867  06A9  0188               	clrf	8	;volatile
   868                           
   869                           ;LAB3.c: 58:     ANSELH=0;
   870  06AA  0189               	clrf	9	;volatile
   871                           
   872                           ;LAB3.c: 59:     PORTA=0;
   873  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   874  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   875  06AD  0185               	clrf	5	;volatile
   876                           
   877                           ;LAB3.c: 60:     PORTB=0;
   878  06AE  0186               	clrf	6	;volatile
   879                           
   880                           ;LAB3.c: 61:     PORTE=0;
   881  06AF  0189               	clrf	9	;volatile
   882  06B0                     l112:	
   883  06B0  0008               	return
   884  06B1                     __end_of_configIO:	
>>>>>>> Stashed changes
   885                           
   886                           ;LAB3.c: 63:         sprintf(valor,"%d", contador);
   887  02A6  3025               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   888  02A7  1283               	bcf	3,5	;RP0=0, select bank0
   889  02A8  1303               	bcf	3,6	;RP1=0, select bank0
   890  02A9  00B9               	movwf	??_main
   891  02AA  0839               	movf	??_main,w
   892  02AB  00A6               	movwf	sprintf@f
   893  02AC  083C               	movf	_contador,w
   894  02AD  00BA               	movwf	??_main+1
   895  02AE  01BB               	clrf	??_main+2
   896  02AF  083A               	movf	??_main+1,w
   897  02B0  00A7               	movwf	?_sprintf+1
   898  02B1  083B               	movf	??_main+2,w
   899  02B2  00A8               	movwf	?_sprintf+2
   900  02B3  303E               	movlw	(low (_valor| 0))& (0+255)
   901  02B4  120A  118A  201F  120A  118A  	fcall	_sprintf
   902  02B9                     l1598:	
   903                           
   904                           ;LAB3.c: 64:         Write_USART_String("V1      V2      contador ");
   905  02B9  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   906  02BA  00F4               	movwf	Write_USART_String@a
   907  02BB  3080               	movlw	128
   908  02BC  00F5               	movwf	Write_USART_String@a+1
   909  02BD  120A  118A  2470  120A  118A  	fcall	_Write_USART_String
   910  02C2                     l1600:	
   911                           
   912                           ;LAB3.c: 65:         Write_USART(13);
   913  02C2  300D               	movlw	13
   914  02C3  120A  118A  24CB  120A  118A  	fcall	_Write_USART
   915  02C8                     l1602:	
   916                           
   917                           ;LAB3.c: 66:         Write_USART(10);
   918  02C8  300A               	movlw	10
   919  02C9  120A  118A  24CB  120A  118A  	fcall	_Write_USART
   920  02CE                     l1604:	
   921                           
   922                           ;LAB3.c: 67:         Write_USART_String(valor);
   923  02CE  303E               	movlw	(low (_valor| 0))& (0+255)
   924  02CF  00F4               	movwf	Write_USART_String@a
   925  02D0  3000               	movlw	0
   926  02D1  00F5               	movwf	Write_USART_String@a+1
   927  02D2  120A  118A  2470  120A  118A  	fcall	_Write_USART_String
   928  02D7                     l1606:	
   929                           
   930                           ;LAB3.c: 68:         Write_USART(9);
   931  02D7  3009               	movlw	9
   932  02D8  120A  118A  24CB  120A  118A  	fcall	_Write_USART
   933  02DD                     l1608:	
   934                           
   935                           ;LAB3.c: 69:         Write_USART(lecturaUSART);
   936  02DD  1283               	bcf	3,5	;RP0=0, select bank0
   937  02DE  1303               	bcf	3,6	;RP1=0, select bank0
   938  02DF  083D               	movf	_lecturaUSART,w
   939  02E0  120A  118A  24CB  120A  118A  	fcall	_Write_USART
   940  02E5                     l1610:	
   941                           
   942                           ;LAB3.c: 70:         Write_USART(13);
   943  02E5  300D               	movlw	13
   944  02E6  120A  118A  24CB  120A  118A  	fcall	_Write_USART
   945  02EB                     l1612:	
   946                           
   947                           ;LAB3.c: 71:         Write_USART(10);
   948  02EB  300A               	movlw	10
   949  02EC  120A  118A  24CB  120A  118A  	fcall	_Write_USART
   950  02F1                     l1614:	
   951                           
   952                           ;LAB3.c: 72:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   953  02F1  3006               	movlw	6
   954  02F2  1283               	bcf	3,5	;RP0=0, select bank0
   955  02F3  1303               	bcf	3,6	;RP1=0, select bank0
   956  02F4  00BB               	movwf	??_main+2
   957  02F5  3013               	movlw	19
   958  02F6  00BA               	movwf	??_main+1
   959  02F7  30AD               	movlw	173
   960  02F8  00B9               	movwf	??_main
   961  02F9                     u1167:	
   962  02F9  0BB9               	decfsz	??_main,f
   963  02FA  2AF9               	goto	u1167
   964  02FB  0BBA               	decfsz	??_main+1,f
   965  02FC  2AF9               	goto	u1167
   966  02FD  0BBB               	decfsz	??_main+2,f
   967  02FE  2AF9               	goto	u1167
   968  02FF  2AA6               	goto	l1596
   969  0300  120A  118A  280C   	ljmp	start
   970  0303                     __end_of_main:	
   971                           
   972                           	psect	text1
   973  001F                     __ptext1:	
   974 ;; *************** function _sprintf *****************
   975 ;; Defined at:
   976 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;  sp              1    wreg     PTR unsigned char 
   979 ;;		 -> valor(8), 
   980 ;;  f               1    6[BANK0 ] PTR const unsigned char 
   981 ;;		 -> STR_1(3), 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  sp              1   17[BANK0 ] PTR unsigned char 
   984 ;;		 -> valor(8), 
   985 ;;  tmpval          4    0        struct .
   986 ;;  val             2   15[BANK0 ] unsigned int 
   987 ;;  cp              2    0        PTR const unsigned char 
   988 ;;  len             2    0        unsigned int 
   989 ;;  c               1   18[BANK0 ] unsigned char 
   990 ;;  prec            1   14[BANK0 ] char 
   991 ;;  flag            1   13[BANK0 ] unsigned char 
   992 ;;  ap              1   12[BANK0 ] PTR void [1]
   993 ;;		 -> ?_sprintf(2), 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  2    6[BANK0 ] int 
   996 ;; Registers used:
   997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         0       3       0       0       0
  1004 ;;      Locals:         0       7       0       0       0
  1005 ;;      Temps:          0       3       0       0       0
  1006 ;;      Totals:         0      13       0       0       0
  1007 ;;Total ram usage:       13 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    3
  1010 ;; This function calls:
  1011 ;;		___lwdiv
  1012 ;;		___lwmod
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _sprintf
  1020  001F                     _sprintf:	
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1024                           ;sprintf@sp stored from wreg
  1025  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0021  00B1               	movwf	sprintf@sp
  1028  0022                     l1476:	
  1029                           
  1030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  1031  0022  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1032  0023  00A9               	movwf	??_sprintf
  1033  0024  0829               	movf	??_sprintf,w
  1034  0025  00AC               	movwf	sprintf@ap
  1035                           
  1036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1037  0026  28F2               	goto	l1528
  1038  0027                     l1478:	
  1039                           
  1040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1041  0027  3025               	movlw	37
  1042  0028  0632               	xorwf	sprintf@c,w
  1043  0029  1903               	btfsc	3,2
  1044  002A  282C               	goto	u1011
  1045  002B  282D               	goto	u1010
  1046  002C                     u1011:	
  1047  002C  2839               	goto	l1484
  1048  002D                     u1010:	
  1049  002D                     l1480:	
  1050                           
  1051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1052  002D  0832               	movf	sprintf@c,w
  1053  002E  00A9               	movwf	??_sprintf
  1054  002F  0831               	movf	sprintf@sp,w
  1055  0030  0084               	movwf	4
  1056  0031  0829               	movf	??_sprintf,w
  1057  0032  1383               	bcf	3,7	;select IRP bank0
  1058  0033  0080               	movwf	0
  1059  0034                     l1482:	
  1060  0034  3001               	movlw	1
  1061  0035  00A9               	movwf	??_sprintf
  1062  0036  0829               	movf	??_sprintf,w
  1063  0037  07B1               	addwf	sprintf@sp,f
  1064                           
  1065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1066  0038  28F2               	goto	l1528
  1067  0039                     l1484:	
  1068                           
  1069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1070  0039  01AD               	clrf	sprintf@flag
  1071  003A                     l1488:	
  1072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  1073                           
  1074  003A  3001               	movlw	1
  1075  003B  07A6               	addwf	sprintf@f,f
  1076  003C  30FF               	movlw	-1
  1077  003D  0726               	addwf	sprintf@f,w
  1078  003E  0084               	movwf	4
  1079  003F  120A  118A  2416  120A  118A  	fcall	stringdir
  1080  0044  00B2               	movwf	sprintf@c
  1081  0045  00A9               	movwf	??_sprintf
  1082  0046  01AA               	clrf	??_sprintf+1
  1083                           
  1084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1085                           ; Switch size 1, requested type "simple"
  1086                           ; Number of cases is 1, Range of values is 0 to 0
  1087                           ; switch strategies available:
  1088                           ; Name         Instructions Cycles
  1089                           ; simple_byte            4     3 (average)
  1090                           ; direct_byte           11     8 (fixed)
  1091                           ; jumptable            260     6 (fixed)
  1092                           ;	Chosen strategy is simple_byte
  1093  0047  082A               	movf	??_sprintf+1,w
  1094  0048  3A00               	xorlw	0	; case 0
  1095  0049  1903               	skipnz
  1096  004A  284C               	goto	l1644
  1097  004B  28F2               	goto	l1528
  1098  004C                     l1644:	
  1099                           
  1100                           ; Switch size 1, requested type "simple"
  1101                           ; Number of cases is 3, Range of values is 0 to 105
  1102                           ; switch strategies available:
  1103                           ; Name         Instructions Cycles
  1104                           ; simple_byte           10     6 (average)
  1105                           ; jumptable            260     6 (fixed)
  1106                           ;	Chosen strategy is simple_byte
  1107  004C  0829               	movf	??_sprintf,w
  1108  004D  3A00               	xorlw	0	; case 0
  1109  004E  1903               	skipnz
  1110  004F  2904               	goto	l1530
  1111  0050  3A64               	xorlw	100	; case 100
  1112  0051  1903               	skipnz
  1113  0052  2857               	goto	l1490
  1114  0053  3A0D               	xorlw	13	; case 105
  1115  0054  1903               	skipnz
  1116  0055  2857               	goto	l1490
  1117  0056  28F2               	goto	l1528
  1118  0057                     l1490:	
  1119                           
  1120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1121  0057  082C               	movf	sprintf@ap,w
  1122  0058  0084               	movwf	4
  1123  0059  1383               	bcf	3,7	;select IRP bank0
  1124  005A  0800               	movf	0,w
  1125  005B  00AF               	movwf	sprintf@val
  1126  005C  0A84               	incf	4,f
  1127  005D  0800               	movf	0,w
  1128  005E  00B0               	movwf	sprintf@val+1
  1129  005F                     l1492:	
  1130  005F  3002               	movlw	2
  1131  0060  00A9               	movwf	??_sprintf
  1132  0061  0829               	movf	??_sprintf,w
  1133  0062  07AC               	addwf	sprintf@ap,f
  1134  0063                     l1494:	
  1135                           
  1136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  1137  0063  1FB0               	btfss	sprintf@val+1,7
  1138  0064  2866               	goto	u1021
  1139  0065  2867               	goto	u1020
  1140  0066                     u1021:	
  1141  0066  2870               	goto	l1500
  1142  0067                     u1020:	
  1143  0067                     l1496:	
  1144                           
  1145                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  1146  0067  3003               	movlw	3
  1147  0068  00A9               	movwf	??_sprintf
  1148  0069  0829               	movf	??_sprintf,w
  1149  006A  04AD               	iorwf	sprintf@flag,f
  1150  006B                     l1498:	
  1151                           
  1152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  1153  006B  09AF               	comf	sprintf@val,f
  1154  006C  09B0               	comf	sprintf@val+1,f
  1155  006D  0AAF               	incf	sprintf@val,f
  1156  006E  1903               	skipnz
  1157  006F  0AB0               	incf	sprintf@val+1,f
  1158  0070                     l1500:	
  1159                           
  1160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1161  0070  01B2               	clrf	sprintf@c
  1162  0071  0AB2               	incf	sprintf@c,f
  1163  0072                     l1506:	
  1164                           
  1165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  1166  0072  0832               	movf	sprintf@c,w
  1167  0073  00A9               	movwf	??_sprintf
  1168  0074  0729               	addwf	??_sprintf,w
  1169  0075  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1170  0076  0084               	movwf	4
  1171  0077  120A  118A  2416  120A  118A  	fcall	stringdir
  1172  007C  00AA               	movwf	??_sprintf+1
  1173  007D  120A  118A  2416  120A  118A  	fcall	stringdir
  1174  0082  00AB               	movwf	??_sprintf+2
  1175  0083  082B               	movf	??_sprintf+2,w
  1176  0084  0230               	subwf	sprintf@val+1,w
  1177  0085  1D03               	skipz
  1178  0086  2889               	goto	u1035
  1179  0087  082A               	movf	??_sprintf+1,w
  1180  0088  022F               	subwf	sprintf@val,w
  1181  0089                     u1035:	
  1182  0089  1803               	skipnc
  1183  008A  288C               	goto	u1031
  1184  008B  288D               	goto	u1030
  1185  008C                     u1031:	
  1186  008C  288E               	goto	l1510
  1187  008D                     u1030:	
  1188  008D  2898               	goto	l1512
  1189  008E                     l1510:	
  1190  008E  3001               	movlw	1
  1191  008F  00A9               	movwf	??_sprintf
  1192  0090  0829               	movf	??_sprintf,w
  1193  0091  07B2               	addwf	sprintf@c,f
  1194  0092  3005               	movlw	5
  1195  0093  0632               	xorwf	sprintf@c,w
  1196  0094  1D03               	btfss	3,2
  1197  0095  2897               	goto	u1041
  1198  0096  2898               	goto	u1040
  1199  0097                     u1041:	
  1200  0097  2872               	goto	l1506
  1201  0098                     u1040:	
  1202  0098                     l1512:	
  1203                           
  1204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  1205  0098  082D               	movf	sprintf@flag,w
  1206  0099  3903               	andlw	3
  1207  009A  1903               	btfsc	3,2
  1208  009B  289D               	goto	u1051
  1209  009C  289E               	goto	u1050
  1210  009D                     u1051:	
  1211  009D  28A9               	goto	l1518
  1212  009E                     u1050:	
  1213  009E                     l1514:	
  1214                           
  1215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  1216  009E  302D               	movlw	45
  1217  009F  00A9               	movwf	??_sprintf
  1218  00A0  0831               	movf	sprintf@sp,w
  1219  00A1  0084               	movwf	4
  1220  00A2  0829               	movf	??_sprintf,w
  1221  00A3  1383               	bcf	3,7	;select IRP bank0
  1222  00A4  0080               	movwf	0
  1223  00A5                     l1516:	
  1224  00A5  3001               	movlw	1
  1225  00A6  00A9               	movwf	??_sprintf
  1226  00A7  0829               	movf	??_sprintf,w
  1227  00A8  07B1               	addwf	sprintf@sp,f
  1228  00A9                     l1518:	
  1229                           
  1230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  1231  00A9  0832               	movf	sprintf@c,w
  1232  00AA  00A9               	movwf	??_sprintf
  1233  00AB  0829               	movf	??_sprintf,w
  1234  00AC  00AE               	movwf	sprintf@prec
  1235                           
  1236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  1237  00AD  28E9               	goto	l1526
  1238  00AE                     l1520:	
  1239                           
  1240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1241  00AE  300A               	movlw	10
  1242  00AF  00A0               	movwf	___lwmod@divisor
  1243  00B0  3000               	movlw	0
  1244  00B1  00A1               	movwf	___lwmod@divisor+1
  1245  00B2  082E               	movf	sprintf@prec,w
  1246  00B3  00A9               	movwf	??_sprintf
  1247  00B4  0729               	addwf	??_sprintf,w
  1248  00B5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1249  00B6  0084               	movwf	4
  1250  00B7  120A  118A  2416  120A  118A  	fcall	stringdir
  1251  00BC  00F3               	movwf	___lwdiv@divisor
  1252  00BD  120A  118A  2416  120A  118A  	fcall	stringdir
  1253  00C2  00F4               	movwf	___lwdiv@divisor+1
  1254  00C3  0830               	movf	sprintf@val+1,w
  1255  00C4  00F6               	movwf	___lwdiv@dividend+1
  1256  00C5  082F               	movf	sprintf@val,w
  1257  00C6  00F5               	movwf	___lwdiv@dividend
  1258  00C7  120A  118A  234E  120A  118A  	fcall	___lwdiv
  1259  00CC  0874               	movf	?___lwdiv+1,w
  1260  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1261  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1262  00CF  00A3               	movwf	___lwmod@dividend+1
  1263  00D0  0873               	movf	?___lwdiv,w
  1264  00D1  00A2               	movwf	___lwmod@dividend
  1265  00D2  120A  118A  23D0  120A  118A  	fcall	___lwmod
  1266  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1267  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1268  00D9  0820               	movf	?___lwmod,w
  1269  00DA  3E30               	addlw	48
  1270  00DB  00AA               	movwf	??_sprintf+1
  1271  00DC  082A               	movf	??_sprintf+1,w
  1272  00DD  00B2               	movwf	sprintf@c
  1273  00DE                     l1522:	
  1274                           
  1275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  1276  00DE  0832               	movf	sprintf@c,w
  1277  00DF  00A9               	movwf	??_sprintf
  1278  00E0  0831               	movf	sprintf@sp,w
  1279  00E1  0084               	movwf	4
  1280  00E2  0829               	movf	??_sprintf,w
  1281  00E3  1383               	bcf	3,7	;select IRP bank0
  1282  00E4  0080               	movwf	0
  1283  00E5                     l1524:	
  1284  00E5  3001               	movlw	1
  1285  00E6  00A9               	movwf	??_sprintf
  1286  00E7  0829               	movf	??_sprintf,w
  1287  00E8  07B1               	addwf	sprintf@sp,f
  1288  00E9                     l1526:	
  1289                           
  1290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  1291  00E9  30FF               	movlw	255
  1292  00EA  00A9               	movwf	??_sprintf
  1293  00EB  0829               	movf	??_sprintf,w
  1294  00EC  07AE               	addwf	sprintf@prec,f
  1295  00ED  0A2E               	incf	sprintf@prec,w
  1296  00EE  1D03               	btfss	3,2
  1297  00EF  28F1               	goto	u1061
  1298  00F0  28F2               	goto	u1060
  1299  00F1                     u1061:	
  1300  00F1  28AE               	goto	l1520
  1301  00F2                     u1060:	
  1302  00F2                     l1528:	
  1303                           
  1304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1305  00F2  3001               	movlw	1
  1306  00F3  07A6               	addwf	sprintf@f,f
  1307  00F4  30FF               	movlw	-1
  1308  00F5  0726               	addwf	sprintf@f,w
  1309  00F6  0084               	movwf	4
  1310  00F7  120A  118A  2416  120A  118A  	fcall	stringdir
  1311  00FC  00A9               	movwf	??_sprintf
  1312  00FD  0829               	movf	??_sprintf,w
  1313  00FE  00B2               	movwf	sprintf@c
  1314  00FF  0832               	movf	sprintf@c,w
  1315  0100  1D03               	btfss	3,2
  1316  0101  2903               	goto	u1071
  1317  0102  2904               	goto	u1070
  1318  0103                     u1071:	
  1319  0103  2827               	goto	l1478
  1320  0104                     u1070:	
  1321  0104                     l1530:	
  1322                           
  1323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  1324  0104  0831               	movf	sprintf@sp,w
  1325  0105  0084               	movwf	4
  1326  0106  1383               	bcf	3,7	;select IRP bank0
  1327  0107  0180               	clrf	0
  1328  0108                     l354:	
  1329  0108  0008               	return
  1330  0109                     __end_of_sprintf:	
  1331                           
  1332                           	psect	text2
  1333  03D0                     __ptext2:	
  1334 ;; *************** function ___lwmod *****************
  1335 ;; Defined at:
  1336 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  divisor         2    0[BANK0 ] unsigned int 
  1339 ;;  dividend        2    2[BANK0 ] unsigned int 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  counter         1    5[BANK0 ] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  2    0[BANK0 ] unsigned int 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       4       0       0       0
  1352 ;;      Locals:         0       1       0       0       0
  1353 ;;      Temps:          0       1       0       0       0
  1354 ;;      Totals:         0       6       0       0       0
  1355 ;;Total ram usage:        6 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    2
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_sprintf
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function ___lwmod
  1367  03D0                     ___lwmod:	
  1368  03D0                     l1376:	
  1369                           ;incstack = 0
  1370                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1371                           
  1372  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  1373  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  1374  03D2  0820               	movf	___lwmod@divisor,w
  1375  03D3  0421               	iorwf	___lwmod@divisor+1,w
  1376  03D4  1903               	btfsc	3,2
  1377  03D5  2BD7               	goto	u851
  1378  03D6  2BD8               	goto	u850
  1379  03D7                     u851:	
  1380  03D7  2C07               	goto	l1394
  1381  03D8                     u850:	
  1382  03D8                     l1378:	
  1383  03D8  01A5               	clrf	___lwmod@counter
  1384  03D9  0AA5               	incf	___lwmod@counter,f
  1385  03DA  2BE6               	goto	l1384
  1386  03DB                     l1380:	
  1387  03DB  3001               	movlw	1
  1388  03DC                     u865:	
  1389  03DC  1003               	clrc
  1390  03DD  0DA0               	rlf	___lwmod@divisor,f
  1391  03DE  0DA1               	rlf	___lwmod@divisor+1,f
  1392  03DF  3EFF               	addlw	-1
  1393  03E0  1D03               	skipz
  1394  03E1  2BDC               	goto	u865
  1395  03E2                     l1382:	
  1396  03E2  3001               	movlw	1
  1397  03E3  00A4               	movwf	??___lwmod
  1398  03E4  0824               	movf	??___lwmod,w
  1399  03E5  07A5               	addwf	___lwmod@counter,f
  1400  03E6                     l1384:	
  1401  03E6  1FA1               	btfss	___lwmod@divisor+1,7
  1402  03E7  2BE9               	goto	u871
  1403  03E8  2BEA               	goto	u870
  1404  03E9                     u871:	
  1405  03E9  2BDB               	goto	l1380
  1406  03EA                     u870:	
  1407  03EA                     l1386:	
  1408  03EA  0821               	movf	___lwmod@divisor+1,w
  1409  03EB  0223               	subwf	___lwmod@dividend+1,w
  1410  03EC  1D03               	skipz
  1411  03ED  2BF0               	goto	u885
  1412  03EE  0820               	movf	___lwmod@divisor,w
  1413  03EF  0222               	subwf	___lwmod@dividend,w
  1414  03F0                     u885:	
  1415  03F0  1C03               	skipc
  1416  03F1  2BF3               	goto	u881
  1417  03F2  2BF4               	goto	u880
  1418  03F3                     u881:	
  1419  03F3  2BFA               	goto	l1390
  1420  03F4                     u880:	
  1421  03F4                     l1388:	
  1422  03F4  0820               	movf	___lwmod@divisor,w
  1423  03F5  02A2               	subwf	___lwmod@dividend,f
  1424  03F6  0821               	movf	___lwmod@divisor+1,w
  1425  03F7  1C03               	skipc
  1426  03F8  03A3               	decf	___lwmod@dividend+1,f
  1427  03F9  02A3               	subwf	___lwmod@dividend+1,f
  1428  03FA                     l1390:	
  1429  03FA  3001               	movlw	1
  1430  03FB                     u895:	
  1431  03FB  1003               	clrc
  1432  03FC  0CA1               	rrf	___lwmod@divisor+1,f
  1433  03FD  0CA0               	rrf	___lwmod@divisor,f
  1434  03FE  3EFF               	addlw	-1
  1435  03FF  1D03               	skipz
  1436  0400  2BFB               	goto	u895
  1437  0401                     l1392:	
  1438  0401  3001               	movlw	1
  1439  0402  02A5               	subwf	___lwmod@counter,f
  1440  0403  1D03               	btfss	3,2
  1441  0404  2C06               	goto	u901
  1442  0405  2C07               	goto	u900
  1443  0406                     u901:	
  1444  0406  2BEA               	goto	l1386
  1445  0407                     u900:	
  1446  0407                     l1394:	
  1447  0407  0823               	movf	___lwmod@dividend+1,w
  1448  0408  00A1               	movwf	?___lwmod+1
  1449  0409  0822               	movf	___lwmod@dividend,w
  1450  040A  00A0               	movwf	?___lwmod
  1451  040B                     l640:	
  1452  040B  0008               	return
  1453  040C                     __end_of___lwmod:	
  1454                           
  1455                           	psect	text3
  1456  034E                     __ptext3:	
  1457 ;; *************** function ___lwdiv *****************
  1458 ;; Defined at:
  1459 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  divisor         2    3[COMMON] unsigned int 
  1462 ;;  dividend        2    5[COMMON] unsigned int 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  quotient        2    8[COMMON] unsigned int 
  1465 ;;  counter         1   10[COMMON] unsigned char 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  2    3[COMMON] unsigned int 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         4       0       0       0       0
  1476 ;;      Locals:         3       0       0       0       0
  1477 ;;      Temps:          1       0       0       0       0
  1478 ;;      Totals:         8       0       0       0       0
  1479 ;;Total ram usage:        8 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    2
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_sprintf
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           
  1490                           ;psect for function ___lwdiv
  1491  034E                     ___lwdiv:	
  1492  034E                     l1350:	
  1493                           ;incstack = 0
  1494                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1495                           
  1496  034E  01F8               	clrf	___lwdiv@quotient
  1497  034F  01F9               	clrf	___lwdiv@quotient+1
  1498  0350                     l1352:	
  1499  0350  0873               	movf	___lwdiv@divisor,w
  1500  0351  0474               	iorwf	___lwdiv@divisor+1,w
  1501  0352  1903               	btfsc	3,2
  1502  0353  2B55               	goto	u781
  1503  0354  2B56               	goto	u780
  1504  0355                     u781:	
  1505  0355  2B8D               	goto	l1372
  1506  0356                     u780:	
  1507  0356                     l1354:	
  1508  0356  01FA               	clrf	___lwdiv@counter
  1509  0357  0AFA               	incf	___lwdiv@counter,f
  1510  0358  2B64               	goto	l1360
  1511  0359                     l1356:	
  1512  0359  3001               	movlw	1
  1513  035A                     u795:	
  1514  035A  1003               	clrc
  1515  035B  0DF3               	rlf	___lwdiv@divisor,f
  1516  035C  0DF4               	rlf	___lwdiv@divisor+1,f
  1517  035D  3EFF               	addlw	-1
  1518  035E  1D03               	skipz
  1519  035F  2B5A               	goto	u795
  1520  0360                     l1358:	
  1521  0360  3001               	movlw	1
  1522  0361  00F7               	movwf	??___lwdiv
  1523  0362  0877               	movf	??___lwdiv,w
  1524  0363  07FA               	addwf	___lwdiv@counter,f
  1525  0364                     l1360:	
  1526  0364  1FF4               	btfss	___lwdiv@divisor+1,7
  1527  0365  2B67               	goto	u801
  1528  0366  2B68               	goto	u800
  1529  0367                     u801:	
  1530  0367  2B59               	goto	l1356
  1531  0368                     u800:	
  1532  0368                     l1362:	
  1533  0368  3001               	movlw	1
  1534  0369                     u815:	
  1535  0369  1003               	clrc
  1536  036A  0DF8               	rlf	___lwdiv@quotient,f
  1537  036B  0DF9               	rlf	___lwdiv@quotient+1,f
  1538  036C  3EFF               	addlw	-1
  1539  036D  1D03               	skipz
  1540  036E  2B69               	goto	u815
  1541  036F  0874               	movf	___lwdiv@divisor+1,w
  1542  0370  0276               	subwf	___lwdiv@dividend+1,w
  1543  0371  1D03               	skipz
  1544  0372  2B75               	goto	u825
  1545  0373  0873               	movf	___lwdiv@divisor,w
  1546  0374  0275               	subwf	___lwdiv@dividend,w
  1547  0375                     u825:	
  1548  0375  1C03               	skipc
  1549  0376  2B78               	goto	u821
  1550  0377  2B79               	goto	u820
  1551  0378                     u821:	
  1552  0378  2B80               	goto	l1368
  1553  0379                     u820:	
  1554  0379                     l1364:	
  1555  0379  0873               	movf	___lwdiv@divisor,w
  1556  037A  02F5               	subwf	___lwdiv@dividend,f
  1557  037B  0874               	movf	___lwdiv@divisor+1,w
  1558  037C  1C03               	skipc
  1559  037D  03F6               	decf	___lwdiv@dividend+1,f
  1560  037E  02F6               	subwf	___lwdiv@dividend+1,f
  1561  037F                     l1366:	
  1562  037F  1478               	bsf	___lwdiv@quotient,0
  1563  0380                     l1368:	
  1564  0380  3001               	movlw	1
  1565  0381                     u835:	
  1566  0381  1003               	clrc
  1567  0382  0CF4               	rrf	___lwdiv@divisor+1,f
  1568  0383  0CF3               	rrf	___lwdiv@divisor,f
  1569  0384  3EFF               	addlw	-1
  1570  0385  1D03               	skipz
  1571  0386  2B81               	goto	u835
  1572  0387                     l1370:	
  1573  0387  3001               	movlw	1
  1574  0388  02FA               	subwf	___lwdiv@counter,f
  1575  0389  1D03               	btfss	3,2
  1576  038A  2B8C               	goto	u841
  1577  038B  2B8D               	goto	u840
  1578  038C                     u841:	
  1579  038C  2B68               	goto	l1362
  1580  038D                     u840:	
  1581  038D                     l1372:	
  1582  038D  0879               	movf	___lwdiv@quotient+1,w
  1583  038E  00F4               	movwf	?___lwdiv+1
  1584  038F  0878               	movf	___lwdiv@quotient,w
  1585  0390  00F3               	movwf	?___lwdiv
  1586  0391                     l630:	
  1587  0391  0008               	return
  1588  0392                     __end_of___lwdiv:	
  1589                           
  1590                           	psect	text4
  1591  049B                     __ptext4:	
  1592 ;; *************** function _configIO *****************
  1593 ;; Defined at:
  1594 ;;		line 76 in file "LAB3.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		status,2
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0
  1611 ;;      Totals:         0       0       0       0       0
  1612 ;;Total ram usage:        0 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    2
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function _configIO
  1624  049B                     _configIO:	
  1625  049B                     l1436:	
  1626                           ;incstack = 0
  1627                           ; Regs used in _configIO: [status,2]
  1628                           
  1629                           
  1630                           ;LAB3.c: 77:     TRISB=0;
  1631  049B  1683               	bsf	3,5	;RP0=1, select bank1
  1632  049C  1303               	bcf	3,6	;RP1=0, select bank1
  1633  049D  0186               	clrf	6	;volatile
  1634                           
  1635                           ;LAB3.c: 78:     TRISE=0;
  1636  049E  0189               	clrf	9	;volatile
  1637                           
  1638                           ;LAB3.c: 79:     TRISD=0;
  1639  049F  0188               	clrf	8	;volatile
  1640                           
  1641                           ;LAB3.c: 80:     TRISA=0;
  1642  04A0  0185               	clrf	5	;volatile
  1643                           
  1644                           ;LAB3.c: 81:     ANSEL=0;
  1645  04A1  1683               	bsf	3,5	;RP0=1, select bank3
  1646  04A2  1703               	bsf	3,6	;RP1=1, select bank3
  1647  04A3  0188               	clrf	8	;volatile
  1648                           
  1649                           ;LAB3.c: 82:     ANSELH=0;
  1650  04A4  0189               	clrf	9	;volatile
  1651                           
  1652                           ;LAB3.c: 83:     PORTA=0;
  1653  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  1654  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  1655  04A7  0185               	clrf	5	;volatile
  1656                           
  1657                           ;LAB3.c: 84:     PORTB=0;
  1658  04A8  0186               	clrf	6	;volatile
  1659                           
  1660                           ;LAB3.c: 85:     PORTD=0;
  1661  04A9  0188               	clrf	8	;volatile
  1662                           
  1663                           ;LAB3.c: 86:     PORTE=0;
  1664  04AA  0189               	clrf	9	;volatile
  1665  04AB                     l1438:	
  1666                           
  1667                           ;LAB3.c: 87:     INTCONbits.PEIE=1;
  1668  04AB  170B               	bsf	11,6	;volatile
  1669  04AC                     l1440:	
  1670                           
  1671                           ;LAB3.c: 88:     PIE1bits.RCIE=1;
  1672  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  1673  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  1674  04AE  168C               	bsf	12,5	;volatile
  1675  04AF                     l1442:	
  1676                           
  1677                           ;LAB3.c: 89:     PIR1bits.RCIF=0;
  1678  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  1679  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  1680  04B1  128C               	bcf	12,5	;volatile
  1681  04B2                     l1444:	
  1682                           
  1683                           ;LAB3.c: 90:     INTCONbits.GIE=1;
  1684  04B2  178B               	bsf	11,7	;volatile
  1685  04B3                     l147:	
  1686  04B3  0008               	return
  1687  04B4                     __end_of_configIO:	
  1688                           
  1689                           	psect	text5
  1690  04D7                     __ptext5:	
  1691 ;; *************** function _configADC *****************
  1692 ;; Defined at:
  1693 ;;		line 8 in file "../../IE3027-LAB2/LAB2.X/ADC.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1707 ;;      Params:         0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0
  1710 ;;      Totals:         0       0       0       0       0
  1711 ;;Total ram usage:        0 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    2
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           
  1722                           ;psect for function _configADC
  1723  04D7                     _configADC:	
  1724  04D7                     l1446:	
  1725                           ;incstack = 0
  1726                           ; Regs used in _configADC: [wreg+status,2+status,0]
  1727                           
  1728                           
  1729                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 9:     ADCON0bits.ADCS=1;
  1730  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1731  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1732  04D9  081F               	movf	31,w	;volatile
  1733  04DA  393F               	andlw	-193
  1734  04DB  3840               	iorlw	64
  1735  04DC  009F               	movwf	31	;volatile
  1736  04DD                     l1448:	
  1737                           
  1738                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 10:     ADCON1=0;
  1739  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  1740  04DE  1303               	bcf	3,6	;RP1=0, select bank1
  1741  04DF  019F               	clrf	31	;volatile
  1742  04E0                     l168:	
  1743  04E0  0008               	return
  1744  04E1                     __end_of_configADC:	
  1745                           
  1746                           	psect	text6
  1747  0470                     __ptext6:	
  1748 ;; *************** function _Write_USART_String *****************
  1749 ;; Defined at:
  1750 ;;		line 34 in file "USART.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  a               2    4[COMMON] PTR unsigned char 
  1753 ;;		 -> STR_2(26), valor(8), 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  i               1    7[COMMON] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         2       0       0       0       0
  1766 ;;      Locals:         1       0       0       0       0
  1767 ;;      Temps:          1       0       0       0       0
  1768 ;;      Totals:         4       0       0       0       0
  1769 ;;Total ram usage:        4 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    3
  1772 ;; This function calls:
  1773 ;;		_Write_USART
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _Write_USART_String
  1781  0470                     _Write_USART_String:	
  1782  0470                     l1538:	
  1783                           ;incstack = 0
  1784                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1785                           
  1786                           
  1787                           ;USART.c: 35:     uint8_t i;;USART.c: 36:     for(i=0;a[i]!='\0';i++){
  1788  0470  01F7               	clrf	Write_USART_String@i
  1789  0471  2C87               	goto	l1544
  1790  0472                     l1540:	
  1791                           
  1792                           ;USART.c: 37:         Write_USART(a[i]);
  1793  0472  0877               	movf	Write_USART_String@i,w
  1794  0473  0774               	addwf	Write_USART_String@a,w
  1795  0474  0084               	movwf	4
  1796  0475  0875               	movf	Write_USART_String@a+1,w
  1797  0476  1803               	skipnc
  1798  0477  0A75               	incf	Write_USART_String@a+1,w
  1799  0478  00FF               	movwf	btemp+1
  1800  0479  120A  118A  240C  120A  118A  	fcall	stringtab
  1801  047E  120A  118A  24CB  120A  118A  	fcall	_Write_USART
  1802  0483                     l1542:	
  1803                           
  1804                           ;USART.c: 38:     }
  1805  0483  3001               	movlw	1
  1806  0484  00F6               	movwf	??_Write_USART_String
  1807  0485  0876               	movf	??_Write_USART_String,w
  1808  0486  07F7               	addwf	Write_USART_String@i,f
  1809  0487                     l1544:	
  1810  0487  0877               	movf	Write_USART_String@i,w
  1811  0488  0774               	addwf	Write_USART_String@a,w
  1812  0489  0084               	movwf	4
  1813  048A  0875               	movf	Write_USART_String@a+1,w
  1814  048B  1803               	skipnc
  1815  048C  0A75               	incf	Write_USART_String@a+1,w
  1816  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1817  048E  1303               	bcf	3,6	;RP1=0, select bank0
  1818  048F  00FF               	movwf	btemp+1
  1819  0490  120A  118A  240C  120A  118A  	fcall	stringtab
  1820  0495  3A00               	xorlw	0
  1821  0496  1D03               	skipz
  1822  0497  2C99               	goto	u1081
  1823  0498  2C9A               	goto	u1080
  1824  0499                     u1081:	
  1825  0499  2C72               	goto	l1540
  1826  049A                     u1080:	
  1827  049A                     l232:	
  1828  049A  0008               	return
  1829  049B                     __end_of_Write_USART_String:	
  1830                           
  1831                           	psect	text7
  1832  04CB                     __ptext7:	
  1833 ;; *************** function _Write_USART *****************
  1834 ;; Defined at:
  1835 ;;		line 30 in file "USART.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  a               1    wreg     unsigned char 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  a               1    3[COMMON] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1849 ;;      Params:         0       0       0       0       0
  1850 ;;      Locals:         1       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0
  1852 ;;      Totals:         1       0       0       0       0
  1853 ;;Total ram usage:        1 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    2
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;;		_Write_USART_String
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function _Write_USART
  1866  04CB                     _Write_USART:	
  1867                           
  1868                           ;incstack = 0
  1869                           ; Regs used in _Write_USART: [wreg]
  1870                           ;Write_USART@a stored from wreg
  1871  04CB  00F3               	movwf	Write_USART@a
  1872  04CC                     l1306:	
  1873  04CC                     l223:	
  1874                           ;USART.c: 31:     while(!TRMT);
  1875                           
  1876  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  1877  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  1878  04CE  1C98               	btfss	24,1	;volatile
  1879  04CF  2CD1               	goto	u671
  1880  04D0  2CD2               	goto	u670
  1881  04D1                     u671:	
  1882  04D1  2CCC               	goto	l223
  1883  04D2                     u670:	
  1884  04D2                     l1308:	
  1885                           
  1886                           ;USART.c: 32:     TXREG=a;
  1887  04D2  0873               	movf	Write_USART@a,w
  1888  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  1889  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  1890  04D5  0099               	movwf	25	;volatile
  1891  04D6                     l226:	
  1892  04D6  0008               	return
  1893  04D7                     __end_of_Write_USART:	
  1894                           
  1895                           	psect	text8
  1896  0109                     __ptext8:	
  1897 ;; *************** function _USART_Init *****************
  1898 ;; Defined at:
  1899 ;;		line 9 in file "USART.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  baudrate        4    7[BANK0 ] const long 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  x               2   23[BANK0 ] unsigned int 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      unsigned char 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, pclath, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         0       4       0       0       0
  1914 ;;      Locals:         0       2       0       0       0
  1915 ;;      Temps:          0      12       0       0       0
  1916 ;;      Totals:         0      18       0       0       0
  1917 ;;Total ram usage:       18 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    3
  1920 ;; This function calls:
  1921 ;;		___aldiv
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function _USART_Init
  1929  0109                     _USART_Init:	
  1930  0109                     l1450:	
  1931                           ;incstack = 0
  1932                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1933                           
  1934                           
  1935                           ;USART.c: 10:   unsigned int x;;USART.c: 11:   x = (4000000 - baudrate*64)/(baudrate*64)
      +                          ;
  1936  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1937  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1938  010B  0827               	movf	USART_Init@baudrate,w
  1939  010C  00AB               	movwf	??_USART_Init
  1940  010D  0828               	movf	USART_Init@baudrate+1,w
  1941  010E  00AC               	movwf	??_USART_Init+1
  1942  010F  0829               	movf	USART_Init@baudrate+2,w
  1943  0110  00AD               	movwf	??_USART_Init+2
  1944  0111  082A               	movf	USART_Init@baudrate+3,w
  1945  0112  00AE               	movwf	??_USART_Init+3
  1946  0113  3006               	movlw	6
  1947  0114                     u935:	
  1948  0114  1003               	clrc
  1949  0115  0DAB               	rlf	??_USART_Init,f
  1950  0116  0DAC               	rlf	??_USART_Init+1,f
  1951  0117  0DAD               	rlf	??_USART_Init+2,f
  1952  0118  0DAE               	rlf	??_USART_Init+3,f
  1953  0119                     u930:	
  1954  0119  3EFF               	addlw	-1
  1955  011A  1D03               	skipz
  1956  011B  2914               	goto	u935
  1957  011C  082E               	movf	??_USART_Init+3,w
  1958  011D  00F6               	movwf	___aldiv@divisor+3
  1959  011E  082D               	movf	??_USART_Init+2,w
  1960  011F  00F5               	movwf	___aldiv@divisor+2
  1961  0120  082C               	movf	??_USART_Init+1,w
  1962  0121  00F4               	movwf	___aldiv@divisor+1
  1963  0122  082B               	movf	??_USART_Init,w
  1964  0123  00F3               	movwf	___aldiv@divisor
  1965  0124  0827               	movf	USART_Init@baudrate,w
  1966  0125  00AF               	movwf	??_USART_Init+4
  1967  0126  0828               	movf	USART_Init@baudrate+1,w
  1968  0127  00B0               	movwf	??_USART_Init+5
  1969  0128  0829               	movf	USART_Init@baudrate+2,w
  1970  0129  00B1               	movwf	??_USART_Init+6
  1971  012A  082A               	movf	USART_Init@baudrate+3,w
  1972  012B  00B2               	movwf	??_USART_Init+7
  1973  012C  3006               	movlw	6
  1974  012D                     u945:	
  1975  012D  1003               	clrc
  1976  012E  0DAF               	rlf	??_USART_Init+4,f
  1977  012F  0DB0               	rlf	??_USART_Init+5,f
  1978  0130  0DB1               	rlf	??_USART_Init+6,f
  1979  0131  0DB2               	rlf	??_USART_Init+7,f
  1980  0132                     u940:	
  1981  0132  3EFF               	addlw	-1
  1982  0133  1D03               	skipz
  1983  0134  292D               	goto	u945
  1984  0135  3000               	movlw	0
  1985  0136  00B3               	movwf	??_USART_Init+8
  1986  0137  3009               	movlw	9
  1987  0138  00B4               	movwf	??_USART_Init+9
  1988  0139  303D               	movlw	61
  1989  013A  00B5               	movwf	??_USART_Init+10
  1990  013B  3000               	movlw	0
  1991  013C  00B6               	movwf	??_USART_Init+11
  1992  013D  082F               	movf	??_USART_Init+4,w
  1993  013E  02B3               	subwf	??_USART_Init+8,f
  1994  013F  0830               	movf	??_USART_Init+5,w
  1995  0140  1C03               	skipc
  1996  0141  0F30               	incfsz	??_USART_Init+5,w
  1997  0142  2944               	goto	u951
  1998  0143  2945               	goto	u952
  1999  0144                     u951:	
  2000  0144  02B4               	subwf	??_USART_Init+9,f
  2001  0145                     u952:	
  2002  0145  0831               	movf	??_USART_Init+6,w
  2003  0146  1C03               	skipc
  2004  0147  0F31               	incfsz	??_USART_Init+6,w
  2005  0148  294A               	goto	u953
  2006  0149  294B               	goto	u954
  2007  014A                     u953:	
  2008  014A  02B5               	subwf	??_USART_Init+10,f
  2009  014B                     u954:	
  2010  014B  0832               	movf	??_USART_Init+7,w
  2011  014C  1C03               	skipc
  2012  014D  0F32               	incfsz	??_USART_Init+7,w
  2013  014E  2950               	goto	u955
  2014  014F  2951               	goto	u956
  2015  0150                     u955:	
  2016  0150  02B6               	subwf	??_USART_Init+11,f
  2017  0151                     u956:	
  2018  0151  0836               	movf	??_USART_Init+11,w
  2019  0152  00FA               	movwf	___aldiv@dividend+3
  2020  0153  0835               	movf	??_USART_Init+10,w
  2021  0154  00F9               	movwf	___aldiv@dividend+2
  2022  0155  0834               	movf	??_USART_Init+9,w
  2023  0156  00F8               	movwf	___aldiv@dividend+1
  2024  0157  0833               	movf	??_USART_Init+8,w
  2025  0158  00F7               	movwf	___aldiv@dividend
  2026  0159  120A  118A  21E6  120A  118A  	fcall	___aldiv
  2027  015E  0874               	movf	?___aldiv+1,w
  2028  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0160  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0161  00B8               	movwf	USART_Init@x+1
  2031  0162  0873               	movf	?___aldiv,w
  2032  0163  00B7               	movwf	USART_Init@x
  2033  0164                     l1452:	
  2034                           
  2035                           ;USART.c: 12:   if(x>255)
  2036  0164  3001               	movlw	1
  2037  0165  0238               	subwf	USART_Init@x+1,w
  2038  0166  3000               	movlw	0
  2039  0167  1903               	skipnz
  2040  0168  0237               	subwf	USART_Init@x,w
  2041  0169  1C03               	skipc
  2042  016A  296C               	goto	u961
  2043  016B  296D               	goto	u960
  2044  016C                     u961:	
  2045  016C  29C9               	goto	l1458
  2046  016D                     u960:	
  2047  016D                     l1454:	
  2048                           
  2049                           ;USART.c: 13:   {;USART.c: 14:     x = (4000000 - baudrate*16)/(baudrate*16);
  2050  016D  0827               	movf	USART_Init@baudrate,w
  2051  016E  00AB               	movwf	??_USART_Init
  2052  016F  0828               	movf	USART_Init@baudrate+1,w
  2053  0170  00AC               	movwf	??_USART_Init+1
  2054  0171  0829               	movf	USART_Init@baudrate+2,w
  2055  0172  00AD               	movwf	??_USART_Init+2
  2056  0173  082A               	movf	USART_Init@baudrate+3,w
  2057  0174  00AE               	movwf	??_USART_Init+3
  2058  0175  3004               	movlw	4
  2059  0176                     u975:	
  2060  0176  1003               	clrc
  2061  0177  0DAB               	rlf	??_USART_Init,f
  2062  0178  0DAC               	rlf	??_USART_Init+1,f
  2063  0179  0DAD               	rlf	??_USART_Init+2,f
  2064  017A  0DAE               	rlf	??_USART_Init+3,f
  2065  017B                     u970:	
  2066  017B  3EFF               	addlw	-1
  2067  017C  1D03               	skipz
  2068  017D  2976               	goto	u975
  2069  017E  082E               	movf	??_USART_Init+3,w
  2070  017F  00F6               	movwf	___aldiv@divisor+3
  2071  0180  082D               	movf	??_USART_Init+2,w
  2072  0181  00F5               	movwf	___aldiv@divisor+2
  2073  0182  082C               	movf	??_USART_Init+1,w
  2074  0183  00F4               	movwf	___aldiv@divisor+1
  2075  0184  082B               	movf	??_USART_Init,w
  2076  0185  00F3               	movwf	___aldiv@divisor
  2077  0186  0827               	movf	USART_Init@baudrate,w
  2078  0187  00AF               	movwf	??_USART_Init+4
  2079  0188  0828               	movf	USART_Init@baudrate+1,w
  2080  0189  00B0               	movwf	??_USART_Init+5
  2081  018A  0829               	movf	USART_Init@baudrate+2,w
  2082  018B  00B1               	movwf	??_USART_Init+6
  2083  018C  082A               	movf	USART_Init@baudrate+3,w
  2084  018D  00B2               	movwf	??_USART_Init+7
  2085  018E  3004               	movlw	4
  2086  018F                     u985:	
  2087  018F  1003               	clrc
  2088  0190  0DAF               	rlf	??_USART_Init+4,f
  2089  0191  0DB0               	rlf	??_USART_Init+5,f
  2090  0192  0DB1               	rlf	??_USART_Init+6,f
  2091  0193  0DB2               	rlf	??_USART_Init+7,f
  2092  0194                     u980:	
  2093  0194  3EFF               	addlw	-1
  2094  0195  1D03               	skipz
  2095  0196  298F               	goto	u985
  2096  0197  3000               	movlw	0
  2097  0198  00B3               	movwf	??_USART_Init+8
  2098  0199  3009               	movlw	9
  2099  019A  00B4               	movwf	??_USART_Init+9
  2100  019B  303D               	movlw	61
  2101  019C  00B5               	movwf	??_USART_Init+10
  2102  019D  3000               	movlw	0
  2103  019E  00B6               	movwf	??_USART_Init+11
  2104  019F  082F               	movf	??_USART_Init+4,w
  2105  01A0  02B3               	subwf	??_USART_Init+8,f
  2106  01A1  0830               	movf	??_USART_Init+5,w
  2107  01A2  1C03               	skipc
  2108  01A3  0F30               	incfsz	??_USART_Init+5,w
  2109  01A4  29A6               	goto	u991
  2110  01A5  29A7               	goto	u992
  2111  01A6                     u991:	
  2112  01A6  02B4               	subwf	??_USART_Init+9,f
  2113  01A7                     u992:	
  2114  01A7  0831               	movf	??_USART_Init+6,w
  2115  01A8  1C03               	skipc
  2116  01A9  0F31               	incfsz	??_USART_Init+6,w
  2117  01AA  29AC               	goto	u993
  2118  01AB  29AD               	goto	u994
  2119  01AC                     u993:	
  2120  01AC  02B5               	subwf	??_USART_Init+10,f
  2121  01AD                     u994:	
  2122  01AD  0832               	movf	??_USART_Init+7,w
  2123  01AE  1C03               	skipc
  2124  01AF  0F32               	incfsz	??_USART_Init+7,w
  2125  01B0  29B2               	goto	u995
  2126  01B1  29B3               	goto	u996
  2127  01B2                     u995:	
  2128  01B2  02B6               	subwf	??_USART_Init+11,f
  2129  01B3                     u996:	
  2130  01B3  0836               	movf	??_USART_Init+11,w
  2131  01B4  00FA               	movwf	___aldiv@dividend+3
  2132  01B5  0835               	movf	??_USART_Init+10,w
  2133  01B6  00F9               	movwf	___aldiv@dividend+2
  2134  01B7  0834               	movf	??_USART_Init+9,w
  2135  01B8  00F8               	movwf	___aldiv@dividend+1
  2136  01B9  0833               	movf	??_USART_Init+8,w
  2137  01BA  00F7               	movwf	___aldiv@dividend
  2138  01BB  120A  118A  21E6  120A  118A  	fcall	___aldiv
  2139  01C0  0874               	movf	?___aldiv+1,w
  2140  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2141  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2142  01C3  00B8               	movwf	USART_Init@x+1
  2143  01C4  0873               	movf	?___aldiv,w
  2144  01C5  00B7               	movwf	USART_Init@x
  2145  01C6                     l1456:	
  2146                           
  2147                           ;USART.c: 15:     BRGH = 1;
  2148  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  2149  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  2150  01C8  1518               	bsf	24,2	;volatile
  2151  01C9                     l1458:	
  2152                           
  2153                           ;USART.c: 17:   if(x<256)
  2154  01C9  3001               	movlw	1
  2155  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2156  01CB  0238               	subwf	USART_Init@x+1,w
  2157  01CC  3000               	movlw	0
  2158  01CD  1903               	skipnz
  2159  01CE  0237               	subwf	USART_Init@x,w
  2160  01CF  1803               	skipnc
  2161  01D0  29D2               	goto	u1001
  2162  01D1  29D3               	goto	u1000
  2163  01D2                     u1001:	
  2164  01D2  29E5               	goto	l220
  2165  01D3                     u1000:	
  2166  01D3                     l1460:	
  2167                           
  2168                           ;USART.c: 18:   {;USART.c: 19:     SPBRG = x;
  2169  01D3  0837               	movf	USART_Init@x,w
  2170  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  2171  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  2172  01D6  0099               	movwf	25	;volatile
  2173  01D7                     l1462:	
  2174                           
  2175                           ;USART.c: 20:     SYNC = 0;
  2176  01D7  1218               	bcf	24,4	;volatile
  2177  01D8                     l1464:	
  2178                           
  2179                           ;USART.c: 21:     SPEN = 1;
  2180  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2181  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2182  01DA  1798               	bsf	24,7	;volatile
  2183  01DB                     l1466:	
  2184                           
  2185                           ;USART.c: 22:     TRISC7 = 1;
  2186  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  2187  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  2188  01DD  1787               	bsf	7,7	;volatile
  2189  01DE                     l1468:	
  2190                           
  2191                           ;USART.c: 23:     TRISC6 = 0;
  2192  01DE  1307               	bcf	7,6	;volatile
  2193  01DF                     l1470:	
  2194                           
  2195                           ;USART.c: 24:     CREN = 1;
  2196  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  2197  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  2198  01E1  1618               	bsf	24,4	;volatile
  2199  01E2                     l1472:	
  2200                           
  2201                           ;USART.c: 25:     TXEN = 1;
  2202  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  2203  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  2204  01E4  1698               	bsf	24,5	;volatile
  2205  01E5                     l220:	
  2206  01E5  0008               	return
  2207  01E6                     __end_of_USART_Init:	
  2208                           
  2209                           	psect	text9
  2210  01E6                     __ptext9:	
  2211 ;; *************** function ___aldiv *****************
  2212 ;; Defined at:
  2213 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  divisor         4    3[COMMON] long 
  2216 ;;  dividend        4    7[COMMON] long 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  quotient        4    3[BANK0 ] long 
  2219 ;;  sign            1    2[BANK0 ] unsigned char 
  2220 ;;  counter         1    1[BANK0 ] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  4    3[COMMON] long 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2230 ;;      Params:         8       0       0       0       0
  2231 ;;      Locals:         0       6       0       0       0
  2232 ;;      Temps:          0       1       0       0       0
  2233 ;;      Totals:         8       7       0       0       0
  2234 ;;Total ram usage:       15 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    2
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_USART_Init
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function ___aldiv
  2246  01E6                     ___aldiv:	
  2247  01E6                     l1310:	
  2248                           ;incstack = 0
  2249                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2250                           
  2251  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2252  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  2253  01E8  01A2               	clrf	___aldiv@sign
  2254  01E9                     l1312:	
  2255  01E9  1FF6               	btfss	___aldiv@divisor+3,7
  2256  01EA  29EC               	goto	u681
  2257  01EB  29ED               	goto	u680
  2258  01EC                     u681:	
  2259  01EC  29FA               	goto	l423
  2260  01ED                     u680:	
  2261  01ED                     l1314:	
  2262  01ED  09F3               	comf	___aldiv@divisor,f
  2263  01EE  09F4               	comf	___aldiv@divisor+1,f
  2264  01EF  09F5               	comf	___aldiv@divisor+2,f
  2265  01F0  09F6               	comf	___aldiv@divisor+3,f
  2266  01F1  0AF3               	incf	___aldiv@divisor,f
  2267  01F2  1903               	skipnz
  2268  01F3  0AF4               	incf	___aldiv@divisor+1,f
  2269  01F4  1903               	skipnz
  2270  01F5  0AF5               	incf	___aldiv@divisor+2,f
  2271  01F6  1903               	skipnz
  2272  01F7  0AF6               	incf	___aldiv@divisor+3,f
  2273  01F8  01A2               	clrf	___aldiv@sign
  2274  01F9  0AA2               	incf	___aldiv@sign,f
  2275  01FA                     l423:	
  2276  01FA  1FFA               	btfss	___aldiv@dividend+3,7
  2277  01FB  29FD               	goto	u691
  2278  01FC  29FE               	goto	u690
  2279  01FD                     u691:	
  2280  01FD  2A0D               	goto	l1320
  2281  01FE                     u690:	
  2282  01FE                     l1316:	
  2283  01FE  09F7               	comf	___aldiv@dividend,f
  2284  01FF  09F8               	comf	___aldiv@dividend+1,f
  2285  0200  09F9               	comf	___aldiv@dividend+2,f
  2286  0201  09FA               	comf	___aldiv@dividend+3,f
  2287  0202  0AF7               	incf	___aldiv@dividend,f
  2288  0203  1903               	skipnz
  2289  0204  0AF8               	incf	___aldiv@dividend+1,f
  2290  0205  1903               	skipnz
  2291  0206  0AF9               	incf	___aldiv@dividend+2,f
  2292  0207  1903               	skipnz
  2293  0208  0AFA               	incf	___aldiv@dividend+3,f
  2294  0209                     l1318:	
  2295  0209  3001               	movlw	1
  2296  020A  00A0               	movwf	??___aldiv
  2297  020B  0820               	movf	??___aldiv,w
  2298  020C  06A2               	xorwf	___aldiv@sign,f
  2299  020D                     l1320:	
  2300  020D  3000               	movlw	0
  2301  020E  00A6               	movwf	___aldiv@quotient+3
  2302  020F  3000               	movlw	0
  2303  0210  00A5               	movwf	___aldiv@quotient+2
  2304  0211  3000               	movlw	0
  2305  0212  00A4               	movwf	___aldiv@quotient+1
  2306  0213  3000               	movlw	0
  2307  0214  00A3               	movwf	___aldiv@quotient
  2308  0215                     l1322:	
  2309  0215  0876               	movf	___aldiv@divisor+3,w
  2310  0216  0475               	iorwf	___aldiv@divisor+2,w
  2311  0217  0474               	iorwf	___aldiv@divisor+1,w
  2312  0218  0473               	iorwf	___aldiv@divisor,w
  2313  0219  1903               	skipnz
  2314  021A  2A1C               	goto	u701
  2315  021B  2A1D               	goto	u700
  2316  021C                     u701:	
  2317  021C  2A6A               	goto	l1342
  2318  021D                     u700:	
  2319  021D                     l1324:	
  2320  021D  01A1               	clrf	___aldiv@counter
  2321  021E  0AA1               	incf	___aldiv@counter,f
  2322  021F  2A2D               	goto	l1328
  2323  0220                     l1326:	
  2324  0220  3001               	movlw	1
  2325  0221  00A0               	movwf	??___aldiv
  2326  0222                     u715:	
  2327  0222  1003               	clrc
  2328  0223  0DF3               	rlf	___aldiv@divisor,f
  2329  0224  0DF4               	rlf	___aldiv@divisor+1,f
  2330  0225  0DF5               	rlf	___aldiv@divisor+2,f
  2331  0226  0DF6               	rlf	___aldiv@divisor+3,f
  2332  0227  0BA0               	decfsz	??___aldiv,f
  2333  0228  2A22               	goto	u715
  2334  0229  3001               	movlw	1
  2335  022A  00A0               	movwf	??___aldiv
  2336  022B  0820               	movf	??___aldiv,w
  2337  022C  07A1               	addwf	___aldiv@counter,f
  2338  022D                     l1328:	
  2339  022D  1FF6               	btfss	___aldiv@divisor+3,7
  2340  022E  2A30               	goto	u721
  2341  022F  2A31               	goto	u720
  2342  0230                     u721:	
  2343  0230  2A20               	goto	l1326
  2344  0231                     u720:	
  2345  0231                     l1330:	
  2346  0231  3001               	movlw	1
  2347  0232  00A0               	movwf	??___aldiv
  2348  0233                     u735:	
  2349  0233  1003               	clrc
  2350  0234  0DA3               	rlf	___aldiv@quotient,f
  2351  0235  0DA4               	rlf	___aldiv@quotient+1,f
  2352  0236  0DA5               	rlf	___aldiv@quotient+2,f
  2353  0237  0DA6               	rlf	___aldiv@quotient+3,f
  2354  0238  0BA0               	decfsz	??___aldiv,f
  2355  0239  2A33               	goto	u735
  2356  023A                     l1332:	
  2357  023A  0876               	movf	___aldiv@divisor+3,w
  2358  023B  027A               	subwf	___aldiv@dividend+3,w
  2359  023C  1D03               	skipz
  2360  023D  2A48               	goto	u745
  2361  023E  0875               	movf	___aldiv@divisor+2,w
  2362  023F  0279               	subwf	___aldiv@dividend+2,w
  2363  0240  1D03               	skipz
  2364  0241  2A48               	goto	u745
  2365  0242  0874               	movf	___aldiv@divisor+1,w
  2366  0243  0278               	subwf	___aldiv@dividend+1,w
  2367  0244  1D03               	skipz
  2368  0245  2A48               	goto	u745
  2369  0246  0873               	movf	___aldiv@divisor,w
  2370  0247  0277               	subwf	___aldiv@dividend,w
  2371  0248                     u745:	
  2372  0248  1C03               	skipc
  2373  0249  2A4B               	goto	u741
  2374  024A  2A4C               	goto	u740
  2375  024B                     u741:	
  2376  024B  2A5B               	goto	l1338
  2377  024C                     u740:	
  2378  024C                     l1334:	
  2379  024C  0873               	movf	___aldiv@divisor,w
  2380  024D  02F7               	subwf	___aldiv@dividend,f
  2381  024E  0874               	movf	___aldiv@divisor+1,w
  2382  024F  1C03               	skipc
  2383  0250  0F74               	incfsz	___aldiv@divisor+1,w
  2384  0251  02F8               	subwf	___aldiv@dividend+1,f
  2385  0252  0875               	movf	___aldiv@divisor+2,w
  2386  0253  1C03               	skipc
  2387  0254  0F75               	incfsz	___aldiv@divisor+2,w
  2388  0255  02F9               	subwf	___aldiv@dividend+2,f
  2389  0256  0876               	movf	___aldiv@divisor+3,w
  2390  0257  1C03               	skipc
  2391  0258  0F76               	incfsz	___aldiv@divisor+3,w
  2392  0259  02FA               	subwf	___aldiv@dividend+3,f
  2393  025A                     l1336:	
  2394  025A  1423               	bsf	___aldiv@quotient,0
  2395  025B                     l1338:	
  2396  025B  3001               	movlw	1
  2397  025C                     u755:	
  2398  025C  1003               	clrc
  2399  025D  0CF6               	rrf	___aldiv@divisor+3,f
  2400  025E  0CF5               	rrf	___aldiv@divisor+2,f
  2401  025F  0CF4               	rrf	___aldiv@divisor+1,f
  2402  0260  0CF3               	rrf	___aldiv@divisor,f
  2403  0261  3EFF               	addlw	-1
  2404  0262  1D03               	skipz
  2405  0263  2A5C               	goto	u755
  2406  0264                     l1340:	
  2407  0264  3001               	movlw	1
  2408  0265  02A1               	subwf	___aldiv@counter,f
  2409  0266  1D03               	btfss	3,2
  2410  0267  2A69               	goto	u761
  2411  0268  2A6A               	goto	u760
  2412  0269                     u761:	
  2413  0269  2A31               	goto	l1330
  2414  026A                     u760:	
  2415  026A                     l1342:	
  2416  026A  0822               	movf	___aldiv@sign,w
  2417  026B  1903               	btfsc	3,2
  2418  026C  2A6E               	goto	u771
  2419  026D  2A6F               	goto	u770
  2420  026E                     u771:	
  2421  026E  2A7A               	goto	l1346
  2422  026F                     u770:	
  2423  026F                     l1344:	
  2424  026F  09A3               	comf	___aldiv@quotient,f
  2425  0270  09A4               	comf	___aldiv@quotient+1,f
  2426  0271  09A5               	comf	___aldiv@quotient+2,f
  2427  0272  09A6               	comf	___aldiv@quotient+3,f
  2428  0273  0AA3               	incf	___aldiv@quotient,f
  2429  0274  1903               	skipnz
  2430  0275  0AA4               	incf	___aldiv@quotient+1,f
  2431  0276  1903               	skipnz
  2432  0277  0AA5               	incf	___aldiv@quotient+2,f
  2433  0278  1903               	skipnz
  2434  0279  0AA6               	incf	___aldiv@quotient+3,f
  2435  027A                     l1346:	
  2436  027A  0826               	movf	___aldiv@quotient+3,w
  2437  027B  00F6               	movwf	?___aldiv+3
  2438  027C  0825               	movf	___aldiv@quotient+2,w
  2439  027D  00F5               	movwf	?___aldiv+2
  2440  027E  0824               	movf	___aldiv@quotient+1,w
  2441  027F  00F4               	movwf	?___aldiv+1
  2442  0280  0823               	movf	___aldiv@quotient,w
  2443  0281  00F3               	movwf	?___aldiv
  2444  0282                     l433:	
  2445  0282  0008               	return
  2446  0283                     __end_of___aldiv:	
  2447                           
  2448                           	psect	text10
  2449  04E9                     __ptext10:	
  2450 ;; *************** function _LCD_clear *****************
  2451 ;; Defined at:
  2452 ;;		line 42 in file "LCD.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         0       0       0       0       0
  2467 ;;      Locals:         0       0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0
  2469 ;;      Totals:         0       0       0       0       0
  2470 ;;Total ram usage:        0 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    4
  2473 ;; This function calls:
  2474 ;;		_comandosLCD
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _LCD_clear
  2482  04E9                     _LCD_clear:	
  2483  04E9                     l1418:	
  2484                           ;incstack = 0
  2485                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  2486                           
  2487                           
  2488                           ;LCD.c: 43:     comandosLCD(1);
  2489  04E9  3001               	movlw	1
  2490  04EA  120A  118A  24B4  120A  118A  	fcall	_comandosLCD
  2491  04EF                     l52:	
  2492  04EF  0008               	return
  2493  04F0                     __end_of_LCD_clear:	
  2494                           
  2495                           	psect	text11
  2496  04B4                     __ptext11:	
  2497 ;; *************** function _comandosLCD *****************
  2498 ;; Defined at:
  2499 ;;		line 35 in file "LCD.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  x               1    wreg     unsigned char 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  x               1    6[COMMON] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0, pclath, cstack
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2513 ;;      Params:         0       0       0       0       0
  2514 ;;      Locals:         1       0       0       0       0
  2515 ;;      Temps:          2       0       0       0       0
  2516 ;;      Totals:         3       0       0       0       0
  2517 ;;Total ram usage:        3 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    3
  2520 ;; This function calls:
  2521 ;;		_PUERTO
  2522 ;; This function is called by:
  2523 ;;		_LCD_clear
  2524 ;;		_LCD_Set_Cursor
  2525 ;;		_Lcd_Shift_Right
  2526 ;;		_Lcd_Shift_Left
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           
  2531                           ;psect for function _comandosLCD
  2532  04B4                     _comandosLCD:	
  2533                           
  2534                           ;incstack = 0
  2535                           ; Regs used in _comandosLCD: [wreg+status,2+status,0+pclath+cstack]
  2536                           ;comandosLCD@x stored from wreg
  2537  04B4  00F6               	movwf	comandosLCD@x
  2538  04B5                     l1298:	
  2539                           
  2540                           ;LCD.c: 36:     RE0=0;
  2541  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2542  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2543  04B7  1009               	bcf	9,0	;volatile
  2544                           
  2545                           ;LCD.c: 37:     RE1=1;
  2546  04B8  1489               	bsf	9,1	;volatile
  2547  04B9                     l1300:	
  2548                           
  2549                           ;LCD.c: 38:     PUERTO(x);
  2550  04B9  0876               	movf	comandosLCD@x,w
  2551  04BA  120A  118A  2392  120A  118A  	fcall	_PUERTO
  2552  04BF                     l1302:	
  2553                           
  2554                           ;LCD.c: 39:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2555  04BF  3007               	movlw	7
  2556  04C0  00F5               	movwf	??_comandosLCD+1
  2557  04C1  307D               	movlw	125
  2558  04C2  00F4               	movwf	??_comandosLCD
  2559  04C3                     u1177:	
  2560  04C3  0BF4               	decfsz	??_comandosLCD,f
  2561  04C4  2CC3               	goto	u1177
  2562  04C5  0BF5               	decfsz	??_comandosLCD+1,f
  2563  04C6  2CC3               	goto	u1177
  2564  04C7                     l1304:	
  2565                           
  2566                           ;LCD.c: 40:     RE1=0;
  2567  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2568  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2569  04C9  1089               	bcf	9,1	;volatile
  2570  04CA                     l49:	
  2571  04CA  0008               	return
  2572  04CB                     __end_of_comandosLCD:	
  2573                           
  2574                           	psect	text12
  2575  0303                     __ptext12:	
  2576 ;; *************** function _LCD_Init *****************
  2577 ;; Defined at:
  2578 ;;		line 45 in file "LCD.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, pclath, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0
  2594 ;;      Temps:          2       0       0       0       0
  2595 ;;      Totals:         2       0       0       0       0
  2596 ;;Total ram usage:        2 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    3
  2599 ;; This function calls:
  2600 ;;		_PUERTO
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           
  2607                           ;psect for function _LCD_Init
  2608  0303                     _LCD_Init:	
  2609  0303                     l1420:	
  2610                           ;incstack = 0
  2611                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2612                           
  2613                           
  2614                           ;LCD.c: 46:   PUERTO(0x00);
  2615  0303  3000               	movlw	0
  2616  0304  120A  118A  2392  120A  118A  	fcall	_PUERTO
  2617  0309                     l1422:	
  2618                           
  2619                           ;LCD.c: 47:    _delay((unsigned long)((20)*(4000000/4000.0)));
  2620  0309  301A               	movlw	26
  2621  030A  00F5               	movwf	??_LCD_Init+1
  2622  030B  30F8               	movlw	248
  2623  030C  00F4               	movwf	??_LCD_Init
  2624  030D                     u1187:	
  2625  030D  0BF4               	decfsz	??_LCD_Init,f
  2626  030E  2B0D               	goto	u1187
  2627  030F  0BF5               	decfsz	??_LCD_Init+1,f
  2628  0310  2B0D               	goto	u1187
  2629  0311  0000               	nop
  2630  0312                     l1424:	
  2631                           
  2632                           ;LCD.c: 48:   PUERTO(48);
  2633  0312  3030               	movlw	48
  2634  0313  120A  118A  2392  120A  118A  	fcall	_PUERTO
  2635                           
  2636                           ;LCD.c: 49:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2637  0318  3007               	movlw	7
  2638  0319  00F5               	movwf	??_LCD_Init+1
  2639  031A  307D               	movlw	125
  2640  031B  00F4               	movwf	??_LCD_Init
  2641  031C                     u1197:	
  2642  031C  0BF4               	decfsz	??_LCD_Init,f
  2643  031D  2B1C               	goto	u1197
  2644  031E  0BF5               	decfsz	??_LCD_Init+1,f
  2645  031F  2B1C               	goto	u1197
  2646  0320                     l1426:	
  2647                           
  2648                           ;LCD.c: 50:   PUERTO(48);
  2649  0320  3030               	movlw	48
  2650  0321  120A  118A  2392  120A  118A  	fcall	_PUERTO
  2651  0326                     l1428:	
  2652                           
  2653                           ;LCD.c: 51:  _delay((unsigned long)((11)*(4000000/4000.0)));
  2654  0326  300F               	movlw	15
  2655  0327  00F5               	movwf	??_LCD_Init+1
  2656  0328  3047               	movlw	71
  2657  0329  00F4               	movwf	??_LCD_Init
  2658  032A                     u1207:	
  2659  032A  0BF4               	decfsz	??_LCD_Init,f
  2660  032B  2B2A               	goto	u1207
  2661  032C  0BF5               	decfsz	??_LCD_Init+1,f
  2662  032D  2B2A               	goto	u1207
  2663  032E  2B2F               	nop2
  2664                           
  2665                           ;LCD.c: 52:   PUERTO(48);
  2666  032F  3030               	movlw	48
  2667  0330  120A  118A  2392  120A  118A  	fcall	_PUERTO
  2668                           
  2669                           ;LCD.c: 54:   PUERTO(56);
  2670  0335  3038               	movlw	56
  2671  0336  120A  118A  2392  120A  118A  	fcall	_PUERTO
  2672                           
  2673                           ;LCD.c: 55:   PUERTO(8);
  2674  033B  3008               	movlw	8
  2675  033C  120A  118A  2392  120A  118A  	fcall	_PUERTO
  2676                           
  2677                           ;LCD.c: 56:   PUERTO(1);
  2678  0341  3001               	movlw	1
  2679  0342  120A  118A  2392  120A  118A  	fcall	_PUERTO
  2680                           
  2681                           ;LCD.c: 57:   PUERTO(6);
  2682  0347  3006               	movlw	6
  2683  0348  120A  118A  2392  120A  118A  	fcall	_PUERTO
  2684  034D                     l55:	
  2685  034D  0008               	return
  2686  034E                     __end_of_LCD_Init:	
  2687                           
  2688                           	psect	text13
  2689  0392                     __ptext13:	
  2690 ;; *************** function _PUERTO *****************
  2691 ;; Defined at:
  2692 ;;		line 24 in file "LCD.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  x               1    wreg     unsigned char 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  x               1    3[COMMON] unsigned char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2706 ;;      Params:         0       0       0       0       0
  2707 ;;      Locals:         1       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0
  2709 ;;      Totals:         1       0       0       0       0
  2710 ;;Total ram usage:        1 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    2
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_comandosLCD
  2717 ;;		_LCD_Init
  2718 ;;		_print_LCD_Char
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _PUERTO
  2724  0392                     _PUERTO:	
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _PUERTO: [wreg]
  2728                           ;PUERTO@x stored from wreg
  2729  0392  00F3               	movwf	PUERTO@x
  2730  0393                     l1280:	
  2731                           
  2732                           ;LCD.c: 25:     if(x & 1){RB0=1;}else{RB0=0;}
  2733  0393  1C73               	btfss	PUERTO@x,0
  2734  0394  2B96               	goto	u591
  2735  0395  2B97               	goto	u590
  2736  0396                     u591:	
  2737  0396  2B9B               	goto	l30
  2738  0397                     u590:	
  2739  0397                     l1282:	
  2740  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0399  1406               	bsf	6,0	;volatile
  2743  039A  2B9E               	goto	l31
  2744  039B                     l30:	
  2745  039B  1283               	bcf	3,5	;RP0=0, select bank0
  2746  039C  1303               	bcf	3,6	;RP1=0, select bank0
  2747  039D  1006               	bcf	6,0	;volatile
  2748  039E                     l31:	
  2749                           
  2750                           ;LCD.c: 26:     if(x & 2){RB1=1;}else{RB1=0;}
  2751  039E  1CF3               	btfss	PUERTO@x,1
  2752  039F  2BA1               	goto	u601
  2753  03A0  2BA2               	goto	u600
  2754  03A1                     u601:	
  2755  03A1  2BA4               	goto	l32
  2756  03A2                     u600:	
  2757  03A2                     l1284:	
  2758  03A2  1486               	bsf	6,1	;volatile
  2759  03A3  2BA5               	goto	l33
  2760  03A4                     l32:	
  2761  03A4  1086               	bcf	6,1	;volatile
  2762  03A5                     l33:	
  2763                           
  2764                           ;LCD.c: 27:     if(x & 4){RB2=1;}else{RB2=0;}
  2765  03A5  1D73               	btfss	PUERTO@x,2
  2766  03A6  2BA8               	goto	u611
  2767  03A7  2BA9               	goto	u610
  2768  03A8                     u611:	
  2769  03A8  2BAB               	goto	l34
  2770  03A9                     u610:	
  2771  03A9                     l1286:	
  2772  03A9  1506               	bsf	6,2	;volatile
  2773  03AA  2BAC               	goto	l35
  2774  03AB                     l34:	
  2775  03AB  1106               	bcf	6,2	;volatile
  2776  03AC                     l35:	
  2777                           
  2778                           ;LCD.c: 28:     if(x & 8){RB3=1;}else{RB3=0;}
  2779  03AC  1DF3               	btfss	PUERTO@x,3
  2780  03AD  2BAF               	goto	u621
  2781  03AE  2BB0               	goto	u620
  2782  03AF                     u621:	
  2783  03AF  2BB2               	goto	l36
  2784  03B0                     u620:	
  2785  03B0                     l1288:	
  2786  03B0  1586               	bsf	6,3	;volatile
  2787  03B1  2BB3               	goto	l37
  2788  03B2                     l36:	
  2789  03B2  1186               	bcf	6,3	;volatile
  2790  03B3                     l37:	
  2791                           
  2792                           ;LCD.c: 29:     if(x & 16){RB4=1;}else{RB4=0;}
  2793  03B3  1E73               	btfss	PUERTO@x,4
  2794  03B4  2BB6               	goto	u631
  2795  03B5  2BB7               	goto	u630
  2796  03B6                     u631:	
  2797  03B6  2BB9               	goto	l38
  2798  03B7                     u630:	
  2799  03B7                     l1290:	
  2800  03B7  1606               	bsf	6,4	;volatile
  2801  03B8  2BBA               	goto	l39
  2802  03B9                     l38:	
  2803  03B9  1206               	bcf	6,4	;volatile
  2804  03BA                     l39:	
  2805                           
  2806                           ;LCD.c: 30:     if(x & 32){RB5=1;}else{RB5=0;}
  2807  03BA  1EF3               	btfss	PUERTO@x,5
  2808  03BB  2BBD               	goto	u641
  2809  03BC  2BBE               	goto	u640
  2810  03BD                     u641:	
  2811  03BD  2BC0               	goto	l40
  2812  03BE                     u640:	
  2813  03BE                     l1292:	
  2814  03BE  1686               	bsf	6,5	;volatile
  2815  03BF  2BC1               	goto	l41
  2816  03C0                     l40:	
  2817  03C0  1286               	bcf	6,5	;volatile
  2818  03C1                     l41:	
  2819                           
  2820                           ;LCD.c: 31:     if(x & 64){RB6=1;}else{RB6=0;}
  2821  03C1  1F73               	btfss	PUERTO@x,6
  2822  03C2  2BC4               	goto	u651
  2823  03C3  2BC5               	goto	u650
  2824  03C4                     u651:	
  2825  03C4  2BC7               	goto	l42
  2826  03C5                     u650:	
  2827  03C5                     l1294:	
  2828  03C5  1706               	bsf	6,6	;volatile
  2829  03C6  2BC8               	goto	l43
  2830  03C7                     l42:	
  2831  03C7  1306               	bcf	6,6	;volatile
  2832  03C8                     l43:	
  2833                           
  2834                           ;LCD.c: 32:     if(x & 128){RB7=1;}else{RB7=0;}
  2835  03C8  1FF3               	btfss	PUERTO@x,7
  2836  03C9  2BCB               	goto	u661
  2837  03CA  2BCC               	goto	u660
  2838  03CB                     u661:	
  2839  03CB  2BCE               	goto	l44
  2840  03CC                     u660:	
  2841  03CC                     l1296:	
  2842  03CC  1786               	bsf	6,7	;volatile
  2843  03CD  2BCF               	goto	l46
  2844  03CE                     l44:	
  2845  03CE  1386               	bcf	6,7	;volatile
  2846  03CF                     l46:	
  2847  03CF  0008               	return
  2848  03D0                     __end_of_PUERTO:	
  2849                           
  2850                           	psect	text14
  2851  0443                     __ptext14:	
  2852 ;; *************** function _ISR *****************
  2853 ;; Defined at:
  2854 ;;		line 46 in file "LAB3.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0, pclath, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         0       0       0       0       0
  2869 ;;      Locals:         0       0       0       0       0
  2870 ;;      Temps:          3       0       0       0       0
  2871 ;;      Totals:         3       0       0       0       0
  2872 ;;Total ram usage:        3 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    1
  2875 ;; This function calls:
  2876 ;;		_Read_USART
  2877 ;; This function is called by:
  2878 ;;		Interrupt level 1
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function _ISR
  2884  0443                     _ISR:	
  2885  0443                     i1l1570:	
  2886                           
  2887                           ;LAB3.c: 47:     if(RCIF==1){
  2888  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0445  1E8C               	btfss	12,5	;volatile
  2891  0446  2C48               	goto	u112_21
  2892  0447  2C49               	goto	u112_20
  2893  0448                     u112_21:	
  2894  0448  2C69               	goto	i1l136
  2895  0449                     u112_20:	
  2896  0449                     i1l1572:	
  2897                           
  2898                           ;LAB3.c: 48:         RCIF=0;
  2899  0449  128C               	bcf	12,5	;volatile
  2900  044A                     i1l1574:	
  2901                           
  2902                           ;LAB3.c: 49:         lecturaUSART=Read_USART();
  2903  044A  120A  118A  24E1  120A  118A  	fcall	_Read_USART
  2904  044F  00F0               	movwf	??_ISR
  2905  0450  0870               	movf	??_ISR,w
  2906  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0453  00BD               	movwf	_lecturaUSART
  2909  0454                     i1l1576:	
  2910                           
  2911                           ;LAB3.c: 50:         PORTD=lecturaUSART;
  2912  0454  083D               	movf	_lecturaUSART,w
  2913  0455  0088               	movwf	8	;volatile
  2914  0456                     i1l1578:	
  2915                           
  2916                           ;LAB3.c: 51:         if(lecturaUSART=='+'){contador++;}
  2917  0456  302B               	movlw	43
  2918  0457  063D               	xorwf	_lecturaUSART,w
  2919  0458  1D03               	btfss	3,2
  2920  0459  2C5B               	goto	u113_21
  2921  045A  2C5C               	goto	u113_20
  2922  045B                     u113_21:	
  2923  045B  2C61               	goto	i1l1582
  2924  045C                     u113_20:	
  2925  045C                     i1l1580:	
  2926  045C  3001               	movlw	1
  2927  045D  00F0               	movwf	??_ISR
  2928  045E  0870               	movf	??_ISR,w
  2929  045F  07BC               	addwf	_contador,f
  2930  0460  2C69               	goto	i1l136
  2931  0461                     i1l1582:	
  2932  0461  302D               	movlw	45
  2933  0462  063D               	xorwf	_lecturaUSART,w
  2934  0463  1D03               	btfss	3,2
  2935  0464  2C66               	goto	u114_21
  2936  0465  2C67               	goto	u114_20
  2937  0466                     u114_21:	
  2938  0466  2C69               	goto	i1l136
  2939  0467                     u114_20:	
  2940  0467                     i1l1584:	
  2941  0467  3001               	movlw	1
  2942  0468  02BC               	subwf	_contador,f
  2943  0469                     i1l136:	
  2944  0469  0872               	movf	??_ISR+2,w
  2945  046A  008A               	movwf	10
  2946  046B  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  2947  046C  0083               	movwf	3
  2948  046D  0EFE               	swapf	btemp,f
  2949  046E  0E7E               	swapf	btemp,w
  2950  046F  0009               	retfie
  2951  0470                     __end_of_ISR:	
  2952                           
  2953                           	psect	intentry
  2954  0004                     __pintentry:	
  2955                           ;incstack = 0
  2956                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2957                           
  2958  0004                     interrupt_function:	
  2959  007E                     saved_w	set	btemp
  2960  0004  00FE               	movwf	btemp
  2961  0005  0E03               	swapf	3,w
  2962  0006  00F1               	movwf	??_ISR+1
  2963  0007  080A               	movf	10,w
  2964  0008  00F2               	movwf	??_ISR+2
  2965  0009  120A  118A  2C43   	ljmp	_ISR
  2966                           
  2967                           	psect	text15
  2968  04E1                     __ptext15:	
  2969 ;; *************** function _Read_USART *****************
  2970 ;; Defined at:
  2971 ;;		line 40 in file "USART.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      unsigned char 
  2978 ;; Registers used:
  2979 ;;		wreg
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2985 ;;      Params:         0       0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0
  2988 ;;      Totals:         0       0       0       0       0
  2989 ;;Total ram usage:        0 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_ISR
  2995 ;;		_Read_USART_String
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _Read_USART
  3001  04E1                     _Read_USART:	
  3002  04E1                     i1l1430:	
  3003                           ;incstack = 0
  3004                           ; Regs used in _Read_USART: [wreg]
  3005                           
  3006  04E1                     i1l235:	
  3007                           ;USART.c: 41:   while(!RCIF);
  3008                           
  3009  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  3010  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  3011  04E3  1E8C               	btfss	12,5	;volatile
  3012  04E4  2CE6               	goto	u92_21
  3013  04E5  2CE7               	goto	u92_20
  3014  04E6                     u92_21:	
  3015  04E6  2CE1               	goto	i1l235
  3016  04E7                     u92_20:	
  3017  04E7                     i1l1432:	
  3018                           
  3019                           ;USART.c: 42:   return RCREG;
  3020  04E7  081A               	movf	26,w	;volatile
  3021  04E8                     i1l238:	
  3022  04E8  0008               	return
  3023  04E9                     __end_of_Read_USART:	
  3024  007E                     btemp	set	126	;btemp
  3025  007E                     wtemp0	set	126


Data Sizes:
    Strings     29
    Constant    10
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     28      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> valor(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[26]), valor(BANK0[8]), 


Critical Paths under _main in COMMON

    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _Write_USART_String->_Write_USART
    _USART_Init->___aldiv
    _LCD_clear->_comandosLCD
    _comandosLCD->_PUERTO
    _LCD_Init->_PUERTO

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_USART_Init
    _sprintf->___lwmod
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2707
                                             25 BANK0      3     3      0
                           _LCD_Init
                          _LCD_clear
                         _USART_Init
                        _Write_USART
                 _Write_USART_String
                          _configADC
                           _configIO
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              6 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              3 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     264
                                              4 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     836
                                              7 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0     198
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (2) _comandosLCD                                          3     3      0     198
                                              4 COMMON     3     3      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     176
                                              4 COMMON     2     2      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (3) _PUERTO                                               1     1      0     176
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (5) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _PUERTO
   _LCD_clear
     _comandosLCD
       _PUERTO
   _USART_Init
     ___aldiv
   _Write_USART
   _Write_USART_String
     _Write_USART
   _configADC
   _configIO
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      31       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      26       5       47.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      31      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
<<<<<<< Updated upstream
Symbol Table                                                                                   Sun Feb 09 22:35:51 2020
=======
Symbol Table                                                                                   Sun Feb 09 12:34:22 2020
>>>>>>> Stashed changes

                          pc 0002                  __CFG_CP$OFF 0000                           l30 039B  
                         l31 039E                           l40 03C0                           l32 03A4  
                         l41 03C1                           l33 03A5                           l42 03C7  
                         l34 03AB                           l43 03C8                           l35 03AC  
                         l44 03CE                           l36 03B2                           l52 04EF  
                         l37 03B3                           l46 03CF                           l38 03B9  
                         l39 03BA                           l55 034D                           l49 04CA  
                         fsr 0004         __size_of_Write_USART 000C                          l220 01E5  
                        l223 04CC                          l232 049A                          l226 04D6  
                        l147 04B3                          l423 01FA                          l168 04E0  
                        l433 0282                          l354 0108                 comandosLCD@x 0076  
                        l630 0391                          l640 040B                          _RB0 0030  
                        _RB1 0031                          _RB2 0032                          _RB3 0033  
                        _RB4 0034                          _RB5 0035                          _RE0 0048  
                        _RB6 0036                          _RE1 0049                          _RB7 0037  
                        u600 03A2                          u601 03A1                          u610 03A9  
               __CFG_CPD$OFF 0000                          u611 03A8                          u620 03B0  
                        u700 021D                          _ISR 0443                          u621 03AF  
                        u701 021C                          u630 03B7                          u631 03B6  
                        u640 03BE                          u720 0231                          u800 0368  
                        u641 03BD                          u721 0230                          u801 0367  
                        u650 03C5                          u651 03C4                          u715 0222  
                        u660 03CC                          u740 024C                          u820 0379  
                        u900 0407                          u661 03CB                          u741 024B  
                        u821 0378                          u901 0406                          u590 0397  
                        u670 04D2                          u591 0396                          u735 0233  
                        u671 04D1                          u815 0369                          u760 026A  
                        u680 01ED                          u840 038D                          u761 0269  
                        u745 0248                          u681 01EC                          u841 038C  
                        u825 0375                          u770 026F                          u690 01FE  
                        u930 0119                          u850 03D8                          u771 026E  
                        u755 025C                          u691 01FD                          u835 0381  
                        u851 03D7                          u940 0132                          u780 0356  
                        u781 0355                          u870 03EA                          u951 0144  
                        u935 0114                          u871 03E9                          u960 016D  
                        u952 0145                          u880 03F4                          u961 016C  
                        u953 014A                          u945 012D                          u881 03F3  
                        u865 03DC                          u970 017B                          u954 014B  
                        u955 0150                          u795 035A                          u980 0194  
                        u956 0151                          u885 03F0                          u991 01A6  
                        u975 0176                          u895 03FB                          u992 01A7  
                        u993 01AC                          u985 018F                          u994 01AD  
                        u995 01B2                          u996 01B3                          fsr0 0004  
                        indf 0000  __size_of_Write_USART_String 002B                 __CFG_LVP$OFF 0000  
                       ?_ISR 0070                         l1300 04B9                         l1302 04BF  
                       l1310 01E6                         l1304 04C7                         l1320 020D  
                       l1312 01E9                         l1330 0231                         l1322 0215  
                       l1314 01ED                         l1306 04CC                         l1420 0303  
                       l1340 0264                         l1332 023A                         l1324 021D  
                       l1316 01FE                         l1308 04D2                         l1500 0070  
                       l1422 0309                         l1334 024C                         l1326 0220  
                       l1342 026A                         l1318 0209                         l1350 034E  
                       l1510 008E                         l1280 0393                         l1424 0312  
                       l1344 026F                         l1336 025A                         l1328 022D  
                       l1440 04AC                         l1360 0364                         l1352 0350  
                       l1520 00AE                         l1512 0098                         l1600 02C2  
                       l1290 03B7                         l1282 0397                         l1426 0320  
                       l1418 04E9                         l1346 027A                         l1338 025B  
                       l1450 0109                         l1442 04AF                         l1370 0387  
                       l1362 0368                         l1354 0356                         l1522 00DE  
                       l1514 009E                         l1506 0072                         l1530 0104  
                       l1610 02E5                         l1602 02C8                         l1292 03BE  
                       l1284 03A2                         l1428 0326                         l1460 01D3  
                       l1452 0164                         l1540 0472                         l1444 04B2  
                       l1436 049B                         l1364 0379                         l1356 0359  
                       l1372 038D                         l1380 03DB                         l1524 00E5  
                       l1516 00A5                         l1612 02EB                         l1604 02CE  
                       l1294 03C5                         l1286 03A9                         l1470 01DF  
                       l1462 01D7                         l1454 016D                         l1542 0483  
                       l1446 04D7                         l1438 04AB                         l1366 037F  
                       l1358 0360                         l1390 03FA                         l1382 03E2  
                       l1526 00E9                         l1518 00A9                         l1614 02F1  
                       l1606 02D7                         l1296 03CC                         l1288 03B0  
                       l1472 01E2                         l1464 01D8                         l1456 01C6  
                       l1544 0487                         l1448 04DD                         l1368 0380  
                       l1392 0401                         l1384 03E6                         l1376 03D0  
                       l1480 002D                         l1528 00F2                         l1608 02DD  
                       l1298 04B5                         l1466 01DB                         l1458 01C9  
                       l1538 0470                         l1386 03EA                         l1378 03D8  
                       l1394 0407                         l1490 0057                         l1482 0034  
                       l1468 01DE                         l1388 03F4                         l1492 005F  
                       l1644 004C                         l1484 0039                         l1476 0022  
                       l1494 0063                         l1478 0027                         l1590 028D  
                       l1496 0067                         l1488 003A                         l1592 029C  
                       l1498 006B                         l1594 02A1                         l1586 0283  
                       l1596 02A6                         l1588 0288                         l1598 02B9  
                       STR_1 0440                         STR_2 0426                         _BRGH 04C2  
                       u1000 01D3                         _CREN 00C4                         u1001 01D2  
                       u1010 002D                         u1011 002C                         u1020 0067  
                       u1021 0066                         u1030 008D                         u1031 008C  
                       u1040 0098                         u1041 0097                         u1050 009E  
                       u1051 009D                         u1035 0089                         u1060 00F2  
                       u1061 00F1                         u1070 0104                         u1207 032A  
                       u1071 0103                         u1080 049A                         u1081 0499  
                       u1167 02F9                         u1177 04C3                         u1187 030D  
                       u1197 031C                         _RCIF 0065                         _SPEN 00C7  
                       _TRMT 04C1                         _TXEN 04C5                         _SYNC 04C4  
               __CFG_WRT$OFF 0000                         _main 0283                         btemp 007E  
                       start 000C                __CFG_IESO$OFF 0000           __size_of_LCD_clear 0007  
                      ??_ISR 0070             __end_of_LCD_Init 034E              __end_of___aldiv 0283  
                      ?_main 0070                __CFG_WDTE$OFF 0000                        _ANSEL 0188  
            __end_of___lwdiv 0392                        i1l136 0469                        i1l235 04E1  
                      i1l238 04E8              __end_of___lwmod 040C                        _RCREG 001A  
                      _SPBRG 0099                        _PORTA 0005                        _PORTB 0006  
                      _PORTD 0008                        _PORTE 0009                        _TRISA 0085  
                      _TRISB 0086                        _TRISD 0088                        _TRISE 0089  
                      u92_20 04E7                        u92_21 04E6                        _TXREG 0019  
             __CFG_FCMEN$OFF 0000              __end_of_dpowers 0426                        _valor 003E  
             __CFG_BOREN$OFF 0000                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0109                  ?_USART_Init 0027  
             __CFG_MCLRE$OFF 0000              __initialization 000F                   _Read_USART 04E1  
               __end_of_main 0303                       ??_main 0039            __end_of_LCD_clear 04F0  
                     _ADCON1 009F                       _ADRESH 001E                       _ANSELH 0189  
                     i1l1430 04E1                       i1l1432 04E7                       u112_20 0449  
                     u112_21 0448                       u113_20 045C                       u113_21 045B  
                     i1l1570 0443                       i1l1580 045C                       i1l1572 0449  
                     i1l1582 0461                       i1l1574 044A                       i1l1584 0467  
                     u114_20 0467                       i1l1576 0454                       u114_21 0466  
                     i1l1578 0456                       _PUERTO 0392                       _TRISC6 043E  
                     _TRISC7 043F               __CFG_PWRTE$OFF 0000         __size_of_comandosLCD 0017  
           __end_of_configIO 04B4                    ??___aldiv 0020                    ??___lwdiv 0077  
                  ??___lwmod 0024                       saved_w 007E          __size_of_USART_Init 00DD  
                  ??_sprintf 0029      __end_of__initialization 001B                    ?_LCD_Init 0070  
                ?_Read_USART 0070               __pcstackCOMMON 0070           __size_of_configADC 000A  
               Write_USART@a 0073                   __pbssBANK0 003C                   ??_LCD_Init 0074  
                    ?_PUERTO 0070                   __pmaintext 0283                      PUERTO@x 0073  
              ??_Write_USART 0073                   __pintentry 0004   __end_of_Write_USART_String 049B  
        __size_of_Read_USART 0008                    ?_configIO 0070                   __stringtab 040C  
            __size_of_PUERTO 003E                 ??_USART_Init 002B            __end_of_configADC 04E1  
                    ___aldiv 01E6                      ___lwdiv 034E                      ___lwmod 03D0  
                  _ANSELbits 0188                      __ptext1 001F                      __ptext2 03D0  
                    __ptext3 034E                      __ptext4 049B                      __ptext5 04D7  
                    __ptext6 0470                      __ptext7 04CB                      __ptext8 0109  
                    __ptext9 01E6                 __size_of_ISR 002D                      _dpowers 041C  
        __end_of_Write_USART 04D7             ___aldiv@dividend 0077           __end_of_USART_Init 01E6  
                 ??_configIO 0073                      _sprintf 001F                    _LCD_clear 04E9  
       end_of_initialization 001B             ___aldiv@quotient 0023                    _TRISAbits 0085  
                  _TRISBbits 0086                    _TRISEbits 0089                   ?_LCD_clear 0070  
              ??_comandosLCD 0074               __end_of_PUERTO 03D0            __size_of_LCD_Init 004B  
               ??_Read_USART 0070                  _Write_USART 04CB                  USART_Init@x 0037  
        start_initialization 000F                  __end_of_ISR 0470           __end_of_Read_USART 04E9  
                   ??_PUERTO 0073                 _lecturaUSART 003D     __CFG_FOSC$INTRC_NOCLKOUT 0000  
        __end_of_comandosLCD 04CB                    ___latbits 0002                __pcstackBANK0 0020  
                ??_LCD_clear 0077            __size_of_configIO 0019                  sprintf@flag 002D  
         _Write_USART_String 0470                  sprintf@prec 002E             ___lwdiv@dividend 0075  
        ?_Write_USART_String 0074                     ?___aldiv 0073                     ?___lwdiv 0073  
                   ?___lwmod 0020                    _configADC 04D7                    __pstrings 040C  
       ??_Write_USART_String 0076             ___lwdiv@quotient 0078                     ?_sprintf 0026  
            ___aldiv@divisor 0073            interrupt_function 0004              ___aldiv@counter 0021  
                   _LCD_Init 0303                  _comandosLCD 04B4                     _PIE1bits 008C  
                   _PIR1bits 000C                   ?_configADC 0070                   _ADCON0bits 001F  
                __stringbase 041B           USART_Init@baudrate 0027                 ?_Write_USART 0070  
           __size_of___aldiv 009D             __size_of___lwdiv 0044             __size_of___lwmod 003C  
         __end_of__stringtab 041C                   _ANSELHbits 0189                   sprintf@val 002F  
            ___lwdiv@divisor 0073              ___lwdiv@counter 007A                     __ptext10 04E9  
                   __ptext11 04B4                     __ptext12 0303                     __ptext13 0392  
                   __ptext14 0443                     __ptext15 04E1            __CFG_BOR4V$BOR40V 0000  
                   _configIO 049B                     _contador 003C             __size_of_sprintf 00EA  
              __size_of_main 0080                  ??_configADC 0073                   _INTCONbits 000B  
        Write_USART_String@a 0074          Write_USART_String@i 0077                     intlevel1 0000  
                  sprintf@ap 002C                    sprintf@sp 0031             ___lwmod@dividend 0022  
                  stringcode 0416                     sprintf@c 0032                     sprintf@f 0026  
            ___lwmod@divisor 0020              ___lwmod@counter 0025                     stringdir 0416  
                   stringtab 040C                 ___aldiv@sign 0022                 ?_comandosLCD 0070  
                 _USART_Init 0109  
