

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 08 21:55:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  001E                     _ADRESH	set	30
   365  001F                     _ADCON0bits	set	31
   366  0009                     _PORTE	set	9
   367  0006                     _PORTB	set	6
   368  0005                     _PORTA	set	5
   369  0037                     _RB7	set	55
   370  0036                     _RB6	set	54
   371  0035                     _RB5	set	53
   372  0034                     _RB4	set	52
   373  0033                     _RB3	set	51
   374  0032                     _RB2	set	50
   375  0031                     _RB1	set	49
   376  0030                     _RB0	set	48
   377  0049                     _RE1	set	73
   378  0048                     _RE0	set	72
   379  0086                     _TRISBbits	set	134
   380  0089                     _TRISEbits	set	137
   381  0085                     _TRISAbits	set	133
   382  009F                     _ADCON1	set	159
   383  0085                     _TRISA	set	133
   384  0089                     _TRISE	set	137
   385  0086                     _TRISB	set	134
   386  0189                     _ANSELHbits	set	393
   387  0188                     _ANSELbits	set	392
   388  0189                     _ANSELH	set	393
   389  0188                     _ANSEL	set	392
   390                           
   391                           	psect	strings
   392  0003                     __pstrings:	
   393  0003                     stringtab:	
   394  0003                     __stringtab:	
   395  0003                     stringcode:	
   396                           ;	String table - string pointers are 1 byte each
   397                           
   398  0003                     stringdir:	
   399  0003  3000               	movlw	high stringdir
   400  0004  008A               	movwf	10
   401  0005  0804               	movf	4,w
   402  0006  0A84               	incf	4,f
   403  0007  0782               	addwf	2,f
   404  0008                     __stringbase:	
   405  0008  3400               	retlw	0
   406  0009                     __end_of__stringtab:	
   407  0009                     STR_1:	
   408  0009  3468               	retlw	104	;'h'
   409  000A  346F               	retlw	111	;'o'
   410  000B  346C               	retlw	108	;'l'
   411  000C  3461               	retlw	97	;'a'
   412  000D  3400               	retlw	0
   413                           
   414                           ; #config settings
   415  0000                     
   416                           	psect	cinit
   417  07FC                     start_initialization:	
   418  07FC                     __initialization:	
   419  07FC                     end_of_initialization:	
   420                           ;End of C runtime variable initialization code
   421                           
   422  07FC                     __end_of__initialization:	
   423  07FC  0183               	clrf	3
   424  07FD  120A  118A  2F16   	ljmp	_main	;jump to C main() function
   425                           
   426                           	psect	cstackCOMMON
   427  0070                     __pcstackCOMMON:	
   428  0070                     ?_PUERTO:	
   429  0070                     ??_PUERTO:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_configIO:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_configIO:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_print_LCD_Char:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_comandosLCD:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_LCD_clear:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_LCD_Init:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_print_LCD_String:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_main:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     PUERTO@x:	
   457                           ; 1 bytes @ 0x0
   458                           
   459                           
   460                           ; 1 bytes @ 0x0
   461  0070                     	ds	1
   462  0071                     ??_print_LCD_Char:	
   463  0071                     ??_comandosLCD:	
   464                           ; 1 bytes @ 0x1
   465                           
   466  0071                     ??_LCD_Init:	
   467                           ; 1 bytes @ 0x1
   468                           
   469                           
   470                           ; 1 bytes @ 0x1
   471  0071                     	ds	1
   472  0072                     print_LCD_Char@temp:	
   473                           
   474                           ; 1 bytes @ 0x2
   475  0072                     	ds	1
   476  0073                     print_LCD_Char@y:	
   477  0073                     comandosLCD@x:	
   478                           ; 1 bytes @ 0x3
   479                           
   480                           
   481                           ; 1 bytes @ 0x3
   482  0073                     	ds	1
   483  0074                     ??_LCD_clear:	
   484  0074                     ?_LCD_Set_Cursor:	
   485                           ; 1 bytes @ 0x4
   486                           
   487  0074                     print_LCD_Char@caracter:	
   488                           ; 1 bytes @ 0x4
   489                           
   490  0074                     LCD_Set_Cursor@y:	
   491                           ; 1 bytes @ 0x4
   492                           
   493                           
   494                           ; 1 bytes @ 0x4
   495  0074                     	ds	1
   496  0075                     ??_LCD_Set_Cursor:	
   497  0075                     ??_print_LCD_String:	
   498                           ; 1 bytes @ 0x5
   499                           
   500  0075                     print_LCD_String@i:	
   501                           ; 1 bytes @ 0x5
   502                           
   503                           
   504                           ; 2 bytes @ 0x5
   505  0075                     	ds	1
   506  0076                     LCD_Set_Cursor@x:	
   507                           
   508                           ; 1 bytes @ 0x6
   509  0076                     	ds	1
   510  0077                     LCD_Set_Cursor@a:	
   511  0077                     print_LCD_String@a:	
   512                           ; 1 bytes @ 0x7
   513                           
   514                           
   515                           ; 1 bytes @ 0x7
   516  0077                     	ds	1
   517  0078                     ??_main:	
   518                           
   519                           	psect	maintext
   520  0716                     __pmaintext:	
   521                           ; 1 bytes @ 0x8
   522 ;;
   523 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   524 ;;
   525 ;; *************** function _main *****************
   526 ;; Defined at:
   527 ;;		line 41 in file "LAB3.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : B00/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   541 ;;      Params:         0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0
   544 ;;      Totals:         0       0       0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels required when called:    3
   547 ;; This function calls:
   548 ;;		_LCD_Init
   549 ;;		_LCD_Set_Cursor
   550 ;;		_LCD_clear
   551 ;;		_configIO
   552 ;;		_print_LCD_String
   553 ;; This function is called by:
   554 ;;		Startup code after reset
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _main
   560  0716                     _main:	
   561  0716                     l918:	
   562                           ;incstack = 0
   563                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   564                           
   565                           
   566                           ;LAB3.c: 42:     configIO();
   567  0716  120A  118A  26A7  120A  118A  	fcall	_configIO
   568  071B                     l920:	
   569                           
   570                           ;LAB3.c: 43:     LCD_Init();
   571  071B  120A  118A  27B1  120A  118A  	fcall	_LCD_Init
   572  0720                     l922:	
   573                           
   574                           ;LAB3.c: 44:     LCD_clear();
   575  0720  120A  118A  26A0  120A  118A  	fcall	_LCD_clear
   576  0725                     l924:	
   577                           
   578                           ;LAB3.c: 46:         LCD_clear();
   579  0725  120A  118A  26A0  120A  118A  	fcall	_LCD_clear
   580  072A                     l926:	
   581                           
   582                           ;LAB3.c: 47:         LCD_Set_Cursor(1,1);
   583  072A  01F4               	clrf	LCD_Set_Cursor@y
   584  072B  0AF4               	incf	LCD_Set_Cursor@y,f
   585  072C  3001               	movlw	1
   586  072D  120A  118A  26CD  120A  118A  	fcall	_LCD_Set_Cursor
   587  0732                     l928:	
   588                           
   589                           ;LAB3.c: 48:         print_LCD_String("hola");
   590  0732  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   591  0733  120A  118A  26F1  120A  118A  	fcall	_print_LCD_String
   592  0738  2F25               	goto	l924
   593  0739  120A  118A  2800   	ljmp	start
   594  073C                     __end_of_main:	
   595                           
   596                           	psect	text1
   597  06F1                     __ptext1:	
   598 ;; *************** function _print_LCD_String *****************
   599 ;; Defined at:
   600 ;;		line 75 in file "LCD.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;  a               1    wreg     PTR unsigned char 
   603 ;;		 -> STR_1(5), 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  a               1    7[COMMON] PTR unsigned char 
   606 ;;		 -> STR_1(5), 
   607 ;;  i               2    5[COMMON] int 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         0       0       0       0       0
   618 ;;      Locals:         3       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0
   620 ;;      Totals:         3       0       0       0       0
   621 ;;Total ram usage:        3 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    2
   624 ;; This function calls:
   625 ;;		_print_LCD_Char
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _print_LCD_String
   633  06F1                     _print_LCD_String:	
   634                           
   635                           ;incstack = 0
   636                           ; Regs used in _print_LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   637                           ;print_LCD_String@a stored from wreg
   638  06F1  00F7               	movwf	print_LCD_String@a
   639  06F2                     l910:	
   640                           
   641                           ;LCD.c: 76:  int i;;LCD.c: 77:  for(i=0;a[i]!='\0';i++)
   642  06F2  01F5               	clrf	print_LCD_String@i
   643  06F3  01F6               	clrf	print_LCD_String@i+1
   644  06F4  2F08               	goto	l916
   645  06F5                     l912:	
   646                           
   647                           ;LCD.c: 78:     print_LCD_Char(a[i]);
   648  06F5  0875               	movf	print_LCD_String@i,w
   649  06F6  0777               	addwf	print_LCD_String@a,w
   650  06F7  0084               	movwf	4
   651  06F8  120A  118A  2003  120A  118A  	fcall	stringdir
   652  06FD  120A  118A  273C  120A  118A  	fcall	_print_LCD_Char
   653  0702                     l914:	
   654  0702  3001               	movlw	1
   655  0703  07F5               	addwf	print_LCD_String@i,f
   656  0704  1803               	skipnc
   657  0705  0AF6               	incf	print_LCD_String@i+1,f
   658  0706  3000               	movlw	0
   659  0707  07F6               	addwf	print_LCD_String@i+1,f
   660  0708                     l916:	
   661  0708  0875               	movf	print_LCD_String@i,w
   662  0709  0777               	addwf	print_LCD_String@a,w
   663  070A  0084               	movwf	4
   664  070B  120A  118A  2003  120A  118A  	fcall	stringdir
   665  0710  3A00               	xorlw	0
   666  0711  1D03               	skipz
   667  0712  2F14               	goto	u161
   668  0713  2F15               	goto	u160
   669  0714                     u161:	
   670  0714  2EF5               	goto	l912
   671  0715                     u160:	
   672  0715                     l67:	
   673  0715  0008               	return
   674  0716                     __end_of_print_LCD_String:	
   675                           
   676                           	psect	text2
   677  073C                     __ptext2:	
   678 ;; *************** function _print_LCD_Char *****************
   679 ;; Defined at:
   680 ;;		line 7 in file "LCD.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  caracter        1    wreg     unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  caracter        1    4[COMMON] unsigned char 
   685 ;;  y               1    3[COMMON] unsigned char 
   686 ;;  temp            1    2[COMMON] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0, pclath, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         3       0       0       0       0
   698 ;;      Temps:          1       0       0       0       0
   699 ;;      Totals:         4       0       0       0       0
   700 ;;Total ram usage:        4 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    1
   703 ;; This function calls:
   704 ;;		_PUERTO
   705 ;; This function is called by:
   706 ;;		_print_LCD_String
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           
   711                           ;psect for function _print_LCD_Char
   712  073C                     _print_LCD_Char:	
   713                           
   714                           ;incstack = 0
   715                           ; Regs used in _print_LCD_Char: [wreg+status,2+status,0+pclath+cstack]
   716                           ;print_LCD_Char@caracter stored from wreg
   717  073C  00F4               	movwf	print_LCD_Char@caracter
   718  073D                     l764:	
   719                           
   720                           ;LCD.c: 8:     char temp,y;;LCD.c: 9:     temp = caracter&0x0F;
   721  073D  0874               	movf	print_LCD_Char@caracter,w
   722  073E  390F               	andlw	15
   723  073F  00F1               	movwf	??_print_LCD_Char
   724  0740  0871               	movf	??_print_LCD_Char,w
   725  0741  00F2               	movwf	print_LCD_Char@temp
   726                           
   727                           ;LCD.c: 10:     y = caracter&0xF0;
   728  0742  0874               	movf	print_LCD_Char@caracter,w
   729  0743  39F0               	andlw	240
   730  0744  00F1               	movwf	??_print_LCD_Char
   731  0745  0871               	movf	??_print_LCD_Char,w
   732  0746  00F3               	movwf	print_LCD_Char@y
   733  0747                     l766:	
   734                           
   735                           ;LCD.c: 11:     RE0 = 1;
   736  0747  1283               	bcf	3,5	;RP0=0, select bank0
   737  0748  1303               	bcf	3,6	;RP1=0, select bank0
   738  0749  1409               	bsf	9,0	;volatile
   739  074A                     l768:	
   740                           
   741                           ;LCD.c: 12:     PUERTO(y>>4);
   742  074A  0873               	movf	print_LCD_Char@y,w
   743  074B  00F1               	movwf	??_print_LCD_Char
   744  074C  3004               	movlw	4
   745  074D                     u95:	
   746  074D  1003               	clrc
   747  074E  0CF1               	rrf	??_print_LCD_Char,f
   748  074F  3EFF               	addlw	-1
   749  0750  1D03               	skipz
   750  0751  2F4D               	goto	u95
   751  0752  0871               	movf	??_print_LCD_Char,w
   752  0753  120A  118A  2773  120A  118A  	fcall	_PUERTO
   753  0758                     l770:	
   754                           
   755                           ;LCD.c: 13:     RE1 = 1;
   756  0758  1283               	bcf	3,5	;RP0=0, select bank0
   757  0759  1303               	bcf	3,6	;RP1=0, select bank0
   758  075A  1489               	bsf	9,1	;volatile
   759  075B                     l772:	
   760                           
   761                           ;LCD.c: 14:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   762  075B  300D               	movlw	13
   763  075C  00F1               	movwf	??_print_LCD_Char
   764  075D                     u177:	
   765  075D  0BF1               	decfsz	??_print_LCD_Char,f
   766  075E  2F5D               	goto	u177
   767  075F                     l774:	
   768                           
   769                           ;LCD.c: 15:     RE1 = 0;
   770  075F  1283               	bcf	3,5	;RP0=0, select bank0
   771  0760  1303               	bcf	3,6	;RP1=0, select bank0
   772  0761  1089               	bcf	9,1	;volatile
   773  0762                     l776:	
   774                           
   775                           ;LCD.c: 16:     PUERTO(temp);
   776  0762  0872               	movf	print_LCD_Char@temp,w
   777  0763  120A  118A  2773  120A  118A  	fcall	_PUERTO
   778  0768                     l778:	
   779                           
   780                           ;LCD.c: 17:     RE1 = 1;
   781  0768  1283               	bcf	3,5	;RP0=0, select bank0
   782  0769  1303               	bcf	3,6	;RP1=0, select bank0
   783  076A  1489               	bsf	9,1	;volatile
   784  076B                     l780:	
   785                           
   786                           ;LCD.c: 18:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   787  076B  300D               	movlw	13
   788  076C  00F1               	movwf	??_print_LCD_Char
   789  076D                     u187:	
   790  076D  0BF1               	decfsz	??_print_LCD_Char,f
   791  076E  2F6D               	goto	u187
   792  076F                     l782:	
   793                           
   794                           ;LCD.c: 19:     RE1 = 0;
   795  076F  1283               	bcf	3,5	;RP0=0, select bank0
   796  0770  1303               	bcf	3,6	;RP1=0, select bank0
   797  0771  1089               	bcf	9,1	;volatile
   798  0772                     l27:	
   799  0772  0008               	return
   800  0773                     __end_of_print_LCD_Char:	
   801                           
   802                           	psect	text3
   803  06A7                     __ptext3:	
   804 ;; *************** function _configIO *****************
   805 ;; Defined at:
   806 ;;		line 52 in file "LAB3.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		status,2
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0
   823 ;;      Totals:         0       0       0       0       0
   824 ;;Total ram usage:        0 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           
   834                           ;psect for function _configIO
   835  06A7                     _configIO:	
   836  06A7                     l824:	
   837                           ;incstack = 0
   838                           ; Regs used in _configIO: [status,2]
   839                           
   840                           
   841                           ;LAB3.c: 53:     TRISB=0;
   842  06A7  1683               	bsf	3,5	;RP0=1, select bank1
   843  06A8  1303               	bcf	3,6	;RP1=0, select bank1
   844  06A9  0186               	clrf	6	;volatile
   845                           
   846                           ;LAB3.c: 54:     TRISE=0;
   847  06AA  0189               	clrf	9	;volatile
   848                           
   849                           ;LAB3.c: 55:     TRISA=0;
   850  06AB  0185               	clrf	5	;volatile
   851                           
   852                           ;LAB3.c: 56:     ANSEL=0;
   853  06AC  1683               	bsf	3,5	;RP0=1, select bank3
   854  06AD  1703               	bsf	3,6	;RP1=1, select bank3
   855  06AE  0188               	clrf	8	;volatile
   856                           
   857                           ;LAB3.c: 57:     ANSELH=0;
   858  06AF  0189               	clrf	9	;volatile
   859                           
   860                           ;LAB3.c: 58:     PORTA=0;
   861  06B0  1283               	bcf	3,5	;RP0=0, select bank0
   862  06B1  1303               	bcf	3,6	;RP1=0, select bank0
   863  06B2  0185               	clrf	5	;volatile
   864                           
   865                           ;LAB3.c: 59:     PORTB=0;
   866  06B3  0186               	clrf	6	;volatile
   867                           
   868                           ;LAB3.c: 60:     PORTE=0;
   869  06B4  0189               	clrf	9	;volatile
   870  06B5                     l110:	
   871  06B5  0008               	return
   872  06B6                     __end_of_configIO:	
   873                           
   874                           	psect	text4
   875  06A0                     __ptext4:	
   876 ;; *************** function _LCD_clear *****************
   877 ;; Defined at:
   878 ;;		line 39 in file "LCD.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0, pclath, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0
   895 ;;      Totals:         0       0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    2
   899 ;; This function calls:
   900 ;;		_comandosLCD
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           
   907                           ;psect for function _LCD_clear
   908  06A0                     _LCD_clear:	
   909  06A0                     l792:	
   910                           ;incstack = 0
   911                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
   912                           
   913                           
   914                           ;LCD.c: 40:     comandosLCD(1);
   915  06A0  3001               	movlw	1
   916  06A1  120A  118A  26B6  120A  118A  	fcall	_comandosLCD
   917  06A6                     l52:	
   918  06A6  0008               	return
   919  06A7                     __end_of_LCD_clear:	
   920                           
   921                           	psect	text5
   922  06CD                     __ptext5:	
   923 ;; *************** function _LCD_Set_Cursor *****************
   924 ;; Defined at:
   925 ;;		line 56 in file "LCD.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  x               1    wreg     unsigned char 
   928 ;;  y               1    4[COMMON] unsigned char 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  x               1    6[COMMON] unsigned char 
   931 ;;  a               1    7[COMMON] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         1       0       0       0       0
   942 ;;      Locals:         2       0       0       0       0
   943 ;;      Temps:          1       0       0       0       0
   944 ;;      Totals:         4       0       0       0       0
   945 ;;Total ram usage:        4 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    2
   948 ;; This function calls:
   949 ;;		_comandosLCD
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function _LCD_Set_Cursor
   957  06CD                     _LCD_Set_Cursor:	
   958                           
   959                           ;incstack = 0
   960                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   961                           ;LCD_Set_Cursor@x stored from wreg
   962  06CD  00F6               	movwf	LCD_Set_Cursor@x
   963  06CE                     l898:	
   964                           
   965                           ;LCD.c: 57:  uint8_t a;;LCD.c: 58:  if(x == 1)
   966  06CE  0376               	decf	LCD_Set_Cursor@x,w
   967  06CF  1D03               	btfss	3,2
   968  06D0  2ED2               	goto	u141
   969  06D1  2ED3               	goto	u140
   970  06D2                     u141:	
   971  06D2  2EDF               	goto	l904
   972  06D3                     u140:	
   973  06D3                     l900:	
   974                           
   975                           ;LCD.c: 59:  {;LCD.c: 60:         a = 0x80 + y - 1;
   976  06D3  0874               	movf	LCD_Set_Cursor@y,w
   977  06D4  3E7F               	addlw	127
   978  06D5  00F5               	movwf	??_LCD_Set_Cursor
   979  06D6  0875               	movf	??_LCD_Set_Cursor,w
   980  06D7  00F7               	movwf	LCD_Set_Cursor@a
   981  06D8                     l902:	
   982                           
   983                           ;LCD.c: 64:   comandosLCD(a);
   984  06D8  0877               	movf	LCD_Set_Cursor@a,w
   985  06D9  120A  118A  26B6  120A  118A  	fcall	_comandosLCD
   986                           
   987                           ;LCD.c: 65:  }
   988  06DE  2EF0               	goto	l61
   989  06DF                     l904:	
   990  06DF  3002               	movlw	2
   991  06E0  0676               	xorwf	LCD_Set_Cursor@x,w
   992  06E1  1D03               	btfss	3,2
   993  06E2  2EE4               	goto	u151
   994  06E3  2EE5               	goto	u150
   995  06E4                     u151:	
   996  06E4  2EF0               	goto	l61
   997  06E5                     u150:	
   998  06E5                     l906:	
   999                           
  1000                           ;LCD.c: 67:  {;LCD.c: 68:   a = 0xC0 + y - 1;
  1001  06E5  0874               	movf	LCD_Set_Cursor@y,w
  1002  06E6  3EBF               	addlw	191
  1003  06E7  00F5               	movwf	??_LCD_Set_Cursor
  1004  06E8  0875               	movf	??_LCD_Set_Cursor,w
  1005  06E9  00F7               	movwf	LCD_Set_Cursor@a
  1006  06EA                     l908:	
  1007                           
  1008                           ;LCD.c: 71:   comandosLCD(a);
  1009  06EA  0877               	movf	LCD_Set_Cursor@a,w
  1010  06EB  120A  118A  26B6  120A  118A  	fcall	_comandosLCD
  1011  06F0                     l61:	
  1012  06F0  0008               	return
  1013  06F1                     __end_of_LCD_Set_Cursor:	
  1014                           
  1015                           	psect	text6
  1016  06B6                     __ptext6:	
  1017 ;; *************** function _comandosLCD *****************
  1018 ;; Defined at:
  1019 ;;		line 32 in file "LCD.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  x               1    wreg     unsigned char 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  x               1    3[COMMON] unsigned char 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0, pclath, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         1       0       0       0       0
  1035 ;;      Temps:          2       0       0       0       0
  1036 ;;      Totals:         3       0       0       0       0
  1037 ;;Total ram usage:        3 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    1
  1040 ;; This function calls:
  1041 ;;		_PUERTO
  1042 ;; This function is called by:
  1043 ;;		_LCD_clear
  1044 ;;		_LCD_Set_Cursor
  1045 ;;		_Lcd_Shift_Right
  1046 ;;		_Lcd_Shift_Left
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           
  1051                           ;psect for function _comandosLCD
  1052  06B6                     _comandosLCD:	
  1053                           
  1054                           ;incstack = 0
  1055                           ; Regs used in _comandosLCD: [wreg+status,2+status,0+pclath+cstack]
  1056                           ;comandosLCD@x stored from wreg
  1057  06B6  00F3               	movwf	comandosLCD@x
  1058  06B7                     l784:	
  1059                           
  1060                           ;LCD.c: 33:     RE0=0;
  1061  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1062  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1063  06B9  1009               	bcf	9,0	;volatile
  1064                           
  1065                           ;LCD.c: 34:     RE1=1;
  1066  06BA  1489               	bsf	9,1	;volatile
  1067  06BB                     l786:	
  1068                           
  1069                           ;LCD.c: 35:     PUERTO(x);
  1070  06BB  0873               	movf	comandosLCD@x,w
  1071  06BC  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1072  06C1                     l788:	
  1073                           
  1074                           ;LCD.c: 36:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1075  06C1  3007               	movlw	7
  1076  06C2  00F2               	movwf	??_comandosLCD+1
  1077  06C3  307D               	movlw	125
  1078  06C4  00F1               	movwf	??_comandosLCD
  1079  06C5                     u197:	
  1080  06C5  0BF1               	decfsz	??_comandosLCD,f
  1081  06C6  2EC5               	goto	u197
  1082  06C7  0BF2               	decfsz	??_comandosLCD+1,f
  1083  06C8  2EC5               	goto	u197
  1084  06C9                     l790:	
  1085                           
  1086                           ;LCD.c: 37:     RE1=0;
  1087  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1088  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1089  06CB  1089               	bcf	9,1	;volatile
  1090  06CC                     l49:	
  1091  06CC  0008               	return
  1092  06CD                     __end_of_comandosLCD:	
  1093                           
  1094                           	psect	text7
  1095  07B1                     __ptext7:	
  1096 ;; *************** function _LCD_Init *****************
  1097 ;; Defined at:
  1098 ;;		line 42 in file "LCD.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0, pclath, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0
  1114 ;;      Temps:          2       0       0       0       0
  1115 ;;      Totals:         2       0       0       0       0
  1116 ;;Total ram usage:        2 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    1
  1119 ;; This function calls:
  1120 ;;		_PUERTO
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           
  1127                           ;psect for function _LCD_Init
  1128  07B1                     _LCD_Init:	
  1129  07B1                     l794:	
  1130                           ;incstack = 0
  1131                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1132                           
  1133                           
  1134                           ;LCD.c: 43:   PUERTO(0x00);
  1135  07B1  3000               	movlw	0
  1136  07B2  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1137  07B7                     l796:	
  1138                           
  1139                           ;LCD.c: 44:    _delay((unsigned long)((20)*(4000000/4000.0)));
  1140  07B7  301A               	movlw	26
  1141  07B8  00F2               	movwf	??_LCD_Init+1
  1142  07B9  30F8               	movlw	248
  1143  07BA  00F1               	movwf	??_LCD_Init
  1144  07BB                     u207:	
  1145  07BB  0BF1               	decfsz	??_LCD_Init,f
  1146  07BC  2FBB               	goto	u207
  1147  07BD  0BF2               	decfsz	??_LCD_Init+1,f
  1148  07BE  2FBB               	goto	u207
  1149  07BF  0000               	nop
  1150  07C0                     l798:	
  1151                           
  1152                           ;LCD.c: 45:   PUERTO(48);
  1153  07C0  3030               	movlw	48
  1154  07C1  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1155                           
  1156                           ;LCD.c: 46:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1157  07C6  3007               	movlw	7
  1158  07C7  00F2               	movwf	??_LCD_Init+1
  1159  07C8  307D               	movlw	125
  1160  07C9  00F1               	movwf	??_LCD_Init
  1161  07CA                     u217:	
  1162  07CA  0BF1               	decfsz	??_LCD_Init,f
  1163  07CB  2FCA               	goto	u217
  1164  07CC  0BF2               	decfsz	??_LCD_Init+1,f
  1165  07CD  2FCA               	goto	u217
  1166  07CE                     l800:	
  1167                           
  1168                           ;LCD.c: 47:   PUERTO(48);
  1169  07CE  3030               	movlw	48
  1170  07CF  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1171  07D4                     l802:	
  1172                           
  1173                           ;LCD.c: 48:  _delay((unsigned long)((11)*(4000000/4000.0)));
  1174  07D4  300F               	movlw	15
  1175  07D5  00F2               	movwf	??_LCD_Init+1
  1176  07D6  3047               	movlw	71
  1177  07D7  00F1               	movwf	??_LCD_Init
  1178  07D8                     u227:	
  1179  07D8  0BF1               	decfsz	??_LCD_Init,f
  1180  07D9  2FD8               	goto	u227
  1181  07DA  0BF2               	decfsz	??_LCD_Init+1,f
  1182  07DB  2FD8               	goto	u227
  1183  07DC  2FDD               	nop2
  1184                           
  1185                           ;LCD.c: 49:   PUERTO(48);
  1186  07DD  3030               	movlw	48
  1187  07DE  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1188                           
  1189                           ;LCD.c: 51:   PUERTO(56);
  1190  07E3  3038               	movlw	56
  1191  07E4  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1192                           
  1193                           ;LCD.c: 52:   PUERTO(8);
  1194  07E9  3008               	movlw	8
  1195  07EA  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1196                           
  1197                           ;LCD.c: 53:   PUERTO(1);
  1198  07EF  3001               	movlw	1
  1199  07F0  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1200                           
  1201                           ;LCD.c: 54:   PUERTO(6);
  1202  07F5  3006               	movlw	6
  1203  07F6  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1204  07FB                     l55:	
  1205  07FB  0008               	return
  1206  07FC                     __end_of_LCD_Init:	
  1207                           
  1208                           	psect	text8
  1209  0773                     __ptext8:	
  1210 ;; *************** function _PUERTO *****************
  1211 ;; Defined at:
  1212 ;;		line 21 in file "LCD.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  x               1    wreg     unsigned char 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  x               1    0[COMMON] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         1       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         1       0       0       0       0
  1230 ;;Total ram usage:        1 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_print_LCD_Char
  1236 ;;		_comandosLCD
  1237 ;;		_LCD_Init
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _PUERTO
  1243  0773                     _PUERTO:	
  1244                           
  1245                           ;incstack = 0
  1246                           ; Regs used in _PUERTO: [wreg]
  1247                           ;PUERTO@x stored from wreg
  1248  0773  00F0               	movwf	PUERTO@x
  1249  0774                     l746:	
  1250                           
  1251                           ;LCD.c: 22:     if(x & 1){RB0=1;}else{RB0=0;}
  1252  0774  1C70               	btfss	PUERTO@x,0
  1253  0775  2F77               	goto	u11
  1254  0776  2F78               	goto	u10
  1255  0777                     u11:	
  1256  0777  2F7C               	goto	l30
  1257  0778                     u10:	
  1258  0778                     l748:	
  1259  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1261  077A  1406               	bsf	6,0	;volatile
  1262  077B  2F7F               	goto	l31
  1263  077C                     l30:	
  1264  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1265  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1266  077E  1006               	bcf	6,0	;volatile
  1267  077F                     l31:	
  1268                           
  1269                           ;LCD.c: 23:     if(x & 2){RB1=1;}else{RB1=0;}
  1270  077F  1CF0               	btfss	PUERTO@x,1
  1271  0780  2F82               	goto	u21
  1272  0781  2F83               	goto	u20
  1273  0782                     u21:	
  1274  0782  2F85               	goto	l32
  1275  0783                     u20:	
  1276  0783                     l750:	
  1277  0783  1486               	bsf	6,1	;volatile
  1278  0784  2F86               	goto	l33
  1279  0785                     l32:	
  1280  0785  1086               	bcf	6,1	;volatile
  1281  0786                     l33:	
  1282                           
  1283                           ;LCD.c: 24:     if(x & 4){RB2=1;}else{RB2=0;}
  1284  0786  1D70               	btfss	PUERTO@x,2
  1285  0787  2F89               	goto	u31
  1286  0788  2F8A               	goto	u30
  1287  0789                     u31:	
  1288  0789  2F8C               	goto	l34
  1289  078A                     u30:	
  1290  078A                     l752:	
  1291  078A  1506               	bsf	6,2	;volatile
  1292  078B  2F8D               	goto	l35
  1293  078C                     l34:	
  1294  078C  1106               	bcf	6,2	;volatile
  1295  078D                     l35:	
  1296                           
  1297                           ;LCD.c: 25:     if(x & 8){RB3=1;}else{RB3=0;}
  1298  078D  1DF0               	btfss	PUERTO@x,3
  1299  078E  2F90               	goto	u41
  1300  078F  2F91               	goto	u40
  1301  0790                     u41:	
  1302  0790  2F93               	goto	l36
  1303  0791                     u40:	
  1304  0791                     l754:	
  1305  0791  1586               	bsf	6,3	;volatile
  1306  0792  2F94               	goto	l37
  1307  0793                     l36:	
  1308  0793  1186               	bcf	6,3	;volatile
  1309  0794                     l37:	
  1310                           
  1311                           ;LCD.c: 26:     if(x & 16){RB4=1;}else{RB4=0;}
  1312  0794  1E70               	btfss	PUERTO@x,4
  1313  0795  2F97               	goto	u51
  1314  0796  2F98               	goto	u50
  1315  0797                     u51:	
  1316  0797  2F9A               	goto	l38
  1317  0798                     u50:	
  1318  0798                     l756:	
  1319  0798  1606               	bsf	6,4	;volatile
  1320  0799  2F9B               	goto	l39
  1321  079A                     l38:	
  1322  079A  1206               	bcf	6,4	;volatile
  1323  079B                     l39:	
  1324                           
  1325                           ;LCD.c: 27:     if(x & 32){RB5=1;}else{RB5=0;}
  1326  079B  1EF0               	btfss	PUERTO@x,5
  1327  079C  2F9E               	goto	u61
  1328  079D  2F9F               	goto	u60
  1329  079E                     u61:	
  1330  079E  2FA1               	goto	l40
  1331  079F                     u60:	
  1332  079F                     l758:	
  1333  079F  1686               	bsf	6,5	;volatile
  1334  07A0  2FA2               	goto	l41
  1335  07A1                     l40:	
  1336  07A1  1286               	bcf	6,5	;volatile
  1337  07A2                     l41:	
  1338                           
  1339                           ;LCD.c: 28:     if(x & 64){RB6=1;}else{RB6=0;}
  1340  07A2  1F70               	btfss	PUERTO@x,6
  1341  07A3  2FA5               	goto	u71
  1342  07A4  2FA6               	goto	u70
  1343  07A5                     u71:	
  1344  07A5  2FA8               	goto	l42
  1345  07A6                     u70:	
  1346  07A6                     l760:	
  1347  07A6  1706               	bsf	6,6	;volatile
  1348  07A7  2FA9               	goto	l43
  1349  07A8                     l42:	
  1350  07A8  1306               	bcf	6,6	;volatile
  1351  07A9                     l43:	
  1352                           
  1353                           ;LCD.c: 29:     if(x & 128){RB7=1;}else{RB7=0;}
  1354  07A9  1FF0               	btfss	PUERTO@x,7
  1355  07AA  2FAC               	goto	u81
  1356  07AB  2FAD               	goto	u80
  1357  07AC                     u81:	
  1358  07AC  2FAF               	goto	l44
  1359  07AD                     u80:	
  1360  07AD                     l762:	
  1361  07AD  1786               	bsf	6,7	;volatile
  1362  07AE  2FB0               	goto	l46
  1363  07AF                     l44:	
  1364  07AF  1386               	bcf	6,7	;volatile
  1365  07B0                     l46:	
  1366  07B0  0008               	return
  1367  07B1                     __end_of_PUERTO:	
  1368  007E                     btemp	set	126	;btemp
  1369  007E                     wtemp0	set	126


Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    print_LCD_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_Set_Cursor
    _main->_print_LCD_String
    _print_LCD_String->_print_LCD_Char
    _print_LCD_Char->_PUERTO
    _LCD_clear->_comandosLCD
    _LCD_Set_Cursor->_comandosLCD
    _comandosLCD->_PUERTO
    _LCD_Init->_PUERTO

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     903
                           _LCD_Init
                     _LCD_Set_Cursor
                          _LCD_clear
                           _configIO
                   _print_LCD_String
 ---------------------------------------------------------------------------------
 (1) _print_LCD_String                                     3     3      0     303
                                              5 COMMON     3     3      0
                     _print_LCD_Char
 ---------------------------------------------------------------------------------
 (2) _print_LCD_Char                                       4     4      0     180
                                              1 COMMON     4     4      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0     135
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     345
                                              4 COMMON     4     3      1
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (2) _comandosLCD                                          3     3      0     135
                                              1 COMMON     3     3      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     120
                                              1 COMMON     2     2      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (3) _PUERTO                                               1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _PUERTO
   _LCD_Set_Cursor
     _comandosLCD
       _PUERTO
   _LCD_clear
     _comandosLCD
       _PUERTO
   _configIO
   _print_LCD_String
     _print_LCD_Char
       _PUERTO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 08 21:55:10 2020

                        pc 0002            print_LCD_Char@y 0073                __CFG_CP$OFF 0000  
                       l30 077C                         l31 077F                         l40 07A1  
                       l32 0785                         l41 07A2                         l33 0786  
                       l42 07A8                         l34 078C                         l43 07A9  
                       l35 078D                         l27 0772                         l44 07AF  
                       l36 0793                         l52 06A6                         l37 0794  
                       l61 06F0                         l46 07B0                         l38 079A  
                       l39 079B                         l55 07FB                         l49 06CC  
                       l67 0715                         u10 0778                         u11 0777  
                       u20 0783                         u21 0782                         u30 078A  
                       u31 0789                         u40 0791                         u41 0790  
                       u50 0798                         u51 0797                         u60 079F  
                       u61 079E                         u70 07A6                         u71 07A5  
                       u80 07AD                         u81 07AC                         u95 074D  
                       fsr 0004                        l110 06B5               comandosLCD@x 0073  
                      l800 07CE                        l802 07D4                        l900 06D3  
                      l750 0783                        l902 06D8                        l910 06F2  
                      l760 07A6                        l752 078A                        l904 06DF  
                      l824 06A7                        l912 06F5                        l920 071B  
                      l762 07AD                        l754 0791                        l746 0774  
                      l906 06E5                        l770 0758                        l914 0702  
                      l922 0720                        l756 0798                        l748 0778  
                      l908 06EA                        l780 076B                        l772 075B  
                      l764 073D                        l916 0708                        l924 0725  
                      l758 079F                        l790 06C9                        l782 076F  
                      l774 075F                        l766 0747                        l926 072A  
                      l918 0716                        l784 06B7                        l792 06A0  
                      l776 0762                        l768 074A                        l928 0732  
                      l794 07B1                        l786 06BB                        l778 0768  
                      l796 07B7                        l788 06C1                        l798 07C0  
                      l898 06CE                        _RB0 0030                        _RB1 0031  
                      _RB2 0032                        _RB3 0033                        _RB4 0034  
                      _RB5 0035                        _RE0 0048                        _RB6 0036  
                      _RE1 0049                        _RB7 0037                        u140 06D3  
                      u141 06D2                        u150 06E5                        u207 07BB  
                      u151 06E4                        u160 0715                        u217 07CA  
                      u161 0714                        u227 07D8                        u177 075D  
             __CFG_CPD$OFF 0000                        u187 076D                        u197 06C5  
                      fsr0 0004               __CFG_LVP$OFF 0000             _LCD_Set_Cursor 06CD  
                     STR_1 0009               __CFG_WRT$OFF 0000                       _main 0716  
                     btemp 007E         print_LCD_Char@temp 0072                       start 0000  
            __CFG_IESO$OFF 0000         __size_of_LCD_clear 0007           __end_of_LCD_Init 07FC  
        print_LCD_String@a 0077          print_LCD_String@i 0075                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      _ANSEL 0188                      _PORTA 0005  
                    _PORTB 0006                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISE 0089             __CFG_FCMEN$OFF 0000  
   __end_of_LCD_Set_Cursor 06F1           ??_print_LCD_Char 0071             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
           __CFG_MCLRE$OFF 0000            __initialization 07FC               __end_of_main 073C  
                   ??_main 0078          __end_of_LCD_clear 06A7            ?_LCD_Set_Cursor 0074  
                   _ADCON1 009F                     _ADRESH 001E   __end_of_print_LCD_String 0716  
                   _ANSELH 0189                     _PUERTO 0773             __CFG_PWRTE$OFF 0000  
     __size_of_comandosLCD 0017           __end_of_configIO 06B6            LCD_Set_Cursor@a 0077  
          LCD_Set_Cursor@x 0076            LCD_Set_Cursor@y 0074    __end_of__initialization 07FC  
                ?_LCD_Init 0070             __pcstackCOMMON 0070                 ??_LCD_Init 0071  
                  ?_PUERTO 0070                 __pmaintext 0716                    PUERTO@x 0070  
                ?_configIO 0070                 __stringtab 0003            __size_of_PUERTO 003E  
                _ANSELbits 0188           ??_LCD_Set_Cursor 0075                    __ptext1 06F1  
                  __ptext2 073C                    __ptext3 06A7                    __ptext4 06A0  
                  __ptext5 06CD                    __ptext6 06B6                    __ptext7 07B1  
                  __ptext8 0773                 ??_configIO 0070                  _LCD_clear 06A0  
     end_of_initialization 07FC          ?_print_LCD_String 0070         ??_print_LCD_String 0075  
                _TRISAbits 0085                  _TRISBbits 0086                  _TRISEbits 0089  
               ?_LCD_clear 0070              ??_comandosLCD 0071             __end_of_PUERTO 07B1  
        __size_of_LCD_Init 004B    __size_of_print_LCD_Char 0037        start_initialization 07FC  
                 ??_PUERTO 0070   __CFG_FOSC$INTRC_NOCLKOUT 0000        __end_of_comandosLCD 06CD  
                ___latbits 0002                ??_LCD_clear 0074          __size_of_configIO 000F  
                __pstrings 0003                   _LCD_Init 07B1                _comandosLCD 06B6  
           _print_LCD_Char 073C  __size_of_print_LCD_String 0025                 _ADCON0bits 001F  
              __stringbase 0008     __end_of_print_LCD_Char 0773         __end_of__stringtab 0009  
               _ANSELHbits 0189          __CFG_BOR4V$BOR40V 0000                   _configIO 06A7  
  __size_of_LCD_Set_Cursor 0024              __size_of_main 0026            ?_print_LCD_Char 0070  
   print_LCD_Char@caracter 0074                  stringcode 0003           _print_LCD_String 06F1  
                 stringdir 0003                   stringtab 0003               ?_comandosLCD 0070  
