

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 09 15:42:40 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  001E                     _ADRESH	set	30
   366  001F                     _ADCON0bits	set	31
   367  0009                     _PORTE	set	9
   368  0006                     _PORTB	set	6
   369  0005                     _PORTA	set	5
   370  0037                     _RB7	set	55
   371  0036                     _RB6	set	54
   372  0035                     _RB5	set	53
   373  0034                     _RB4	set	52
   374  0033                     _RB3	set	51
   375  0032                     _RB2	set	50
   376  0031                     _RB1	set	49
   377  0030                     _RB0	set	48
   378  0049                     _RE1	set	73
   379  0048                     _RE0	set	72
   380  0086                     _TRISBbits	set	134
   381  0089                     _TRISEbits	set	137
   382  0085                     _TRISAbits	set	133
   383  009F                     _ADCON1	set	159
   384  0085                     _TRISA	set	133
   385  0089                     _TRISE	set	137
   386  0086                     _TRISB	set	134
   387  0189                     _ANSELHbits	set	393
   388  0188                     _ANSELbits	set	392
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391                           
   392                           	psect	strings
   393  0003                     __pstrings:	
   394  0003                     stringtab:	
   395  0003                     __stringtab:	
   396  0003                     stringcode:	
   397                           ;	String table - string pointers are 1 byte each
   398                           
   399  0003                     stringdir:	
   400  0003  3000               	movlw	high stringdir
   401  0004  008A               	movwf	10
   402  0005  0804               	movf	4,w
   403  0006  0A84               	incf	4,f
   404  0007  0782               	addwf	2,f
   405  0008                     __stringbase:	
   406  0008  3400               	retlw	0
   407  0009                     __end_of__stringtab:	
   408  0009                     STR_1:	
   409  0009  3468               	retlw	104	;'h'
   410  000A  346F               	retlw	111	;'o'
   411  000B  346C               	retlw	108	;'l'
   412  000C  3461               	retlw	97	;'a'
   413  000D  3400               	retlw	0
   414                           
   415                           ; #config settings
   416  0000                     
   417                           	psect	cinit
   418  07FC                     start_initialization:	
   419  07FC                     __initialization:	
   420  07FC                     end_of_initialization:	
   421                           ;End of C runtime variable initialization code
   422                           
   423  07FC                     __end_of__initialization:	
   424  07FC  0183               	clrf	3
   425  07FD  120A  118A  2F11   	ljmp	_main	;jump to C main() function
   426                           
   427                           	psect	cstackCOMMON
   428  0070                     __pcstackCOMMON:	
   429  0070                     ?_PUERTO:	
   430  0070                     ??_PUERTO:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_configIO:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ??_configIO:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_configADC:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ??_configADC:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_print_LCD_Char:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_comandosLCD:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_LCD_clear:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_LCD_Init:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_print_LCD_String:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_main:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     PUERTO@x:	
   464                           ; 1 bytes @ 0x0
   465                           
   466                           
   467                           ; 1 bytes @ 0x0
   468  0070                     	ds	1
   469  0071                     ??_print_LCD_Char:	
   470  0071                     ??_comandosLCD:	
   471                           ; 1 bytes @ 0x1
   472                           
   473  0071                     ??_LCD_Init:	
   474                           ; 1 bytes @ 0x1
   475                           
   476                           
   477                           ; 1 bytes @ 0x1
   478  0071                     	ds	1
   479  0072                     print_LCD_Char@temp:	
   480                           
   481                           ; 1 bytes @ 0x2
   482  0072                     	ds	1
   483  0073                     print_LCD_Char@y:	
   484  0073                     comandosLCD@x:	
   485                           ; 1 bytes @ 0x3
   486                           
   487                           
   488                           ; 1 bytes @ 0x3
   489  0073                     	ds	1
   490  0074                     ??_LCD_clear:	
   491  0074                     ?_LCD_Set_Cursor:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0074                     print_LCD_Char@caracter:	
   495                           ; 1 bytes @ 0x4
   496                           
   497  0074                     LCD_Set_Cursor@y:	
   498                           ; 1 bytes @ 0x4
   499                           
   500                           
   501                           ; 1 bytes @ 0x4
   502  0074                     	ds	1
   503  0075                     ??_LCD_Set_Cursor:	
   504  0075                     ??_print_LCD_String:	
   505                           ; 1 bytes @ 0x5
   506                           
   507  0075                     print_LCD_String@i:	
   508                           ; 1 bytes @ 0x5
   509                           
   510                           
   511                           ; 2 bytes @ 0x5
   512  0075                     	ds	1
   513  0076                     LCD_Set_Cursor@x:	
   514                           
   515                           ; 1 bytes @ 0x6
   516  0076                     	ds	1
   517  0077                     LCD_Set_Cursor@a:	
   518  0077                     print_LCD_String@a:	
   519                           ; 1 bytes @ 0x7
   520                           
   521                           
   522                           ; 1 bytes @ 0x7
   523  0077                     	ds	1
   524  0078                     ??_main:	
   525                           
   526                           	psect	maintext
   527  0711                     __pmaintext:	
   528                           ; 1 bytes @ 0x8
   529 ;;
   530 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   531 ;;
   532 ;; *************** function _main *****************
   533 ;; Defined at:
   534 ;;		line 42 in file "LAB3.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : B00/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels required when called:    3
   554 ;; This function calls:
   555 ;;		_LCD_Init
   556 ;;		_LCD_Set_Cursor
   557 ;;		_LCD_clear
   558 ;;		_configADC
   559 ;;		_configIO
   560 ;;		_print_LCD_String
   561 ;; This function is called by:
   562 ;;		Startup code after reset
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           
   567                           ;psect for function _main
   568  0711                     _main:	
   569  0711                     l922:	
   570                           ;incstack = 0
   571                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   572                           
   573                           
   574                           ;LAB3.c: 43:     configIO();
   575  0711  120A  118A  26A2  120A  118A  	fcall	_configIO
   576  0716                     l924:	
   577                           
   578                           ;LAB3.c: 44:     configADC();
   579  0716  120A  118A  2698  120A  118A  	fcall	_configADC
   580  071B                     l926:	
   581                           
   582                           ;LAB3.c: 45:     LCD_Init();
   583  071B  120A  118A  27B1  120A  118A  	fcall	_LCD_Init
   584  0720                     l928:	
   585                           
   586                           ;LAB3.c: 46:     LCD_clear();
   587  0720  120A  118A  2691  120A  118A  	fcall	_LCD_clear
   588  0725                     l930:	
   589                           
   590                           ;LAB3.c: 48:         LCD_clear();
   591  0725  120A  118A  2691  120A  118A  	fcall	_LCD_clear
   592  072A                     l932:	
   593                           
   594                           ;LAB3.c: 49:         LCD_Set_Cursor(1,1);
   595  072A  01F4               	clrf	LCD_Set_Cursor@y
   596  072B  0AF4               	incf	LCD_Set_Cursor@y,f
   597  072C  3001               	movlw	1
   598  072D  120A  118A  26C8  120A  118A  	fcall	_LCD_Set_Cursor
   599  0732                     l934:	
   600                           
   601                           ;LAB3.c: 50:         print_LCD_String("hola");
   602  0732  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   603  0733  120A  118A  26EC  120A  118A  	fcall	_print_LCD_String
   604  0738  2F25               	goto	l930
   605  0739  120A  118A  2800   	ljmp	start
   606  073C                     __end_of_main:	
   607                           
   608                           	psect	text1
   609  06EC                     __ptext1:	
   610 ;; *************** function _print_LCD_String *****************
   611 ;; Defined at:
   612 ;;		line 78 in file "LCD.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  a               1    wreg     PTR unsigned char 
   615 ;;		 -> STR_1(5), 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  a               1    7[COMMON] PTR unsigned char 
   618 ;;		 -> STR_1(5), 
   619 ;;  i               2    5[COMMON] int 
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         3       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0
   632 ;;      Totals:         3       0       0       0       0
   633 ;;Total ram usage:        3 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; Hardware stack levels required when called:    2
   636 ;; This function calls:
   637 ;;		_print_LCD_Char
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           
   644                           ;psect for function _print_LCD_String
   645  06EC                     _print_LCD_String:	
   646                           
   647                           ;incstack = 0
   648                           ; Regs used in _print_LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   649                           ;print_LCD_String@a stored from wreg
   650  06EC  00F7               	movwf	print_LCD_String@a
   651  06ED                     l914:	
   652                           
   653                           ;LCD.c: 79:  int i;;LCD.c: 80:  for(i=0;a[i]!='\0';i++)
   654  06ED  01F5               	clrf	print_LCD_String@i
   655  06EE  01F6               	clrf	print_LCD_String@i+1
   656  06EF  2F03               	goto	l920
   657  06F0                     l916:	
   658                           
   659                           ;LCD.c: 81:     print_LCD_Char(a[i]);
   660  06F0  0875               	movf	print_LCD_String@i,w
   661  06F1  0777               	addwf	print_LCD_String@a,w
   662  06F2  0084               	movwf	4
   663  06F3  120A  118A  2003  120A  118A  	fcall	stringdir
   664  06F8  120A  118A  273C  120A  118A  	fcall	_print_LCD_Char
   665  06FD                     l918:	
   666  06FD  3001               	movlw	1
   667  06FE  07F5               	addwf	print_LCD_String@i,f
   668  06FF  1803               	skipnc
   669  0700  0AF6               	incf	print_LCD_String@i+1,f
   670  0701  3000               	movlw	0
   671  0702  07F6               	addwf	print_LCD_String@i+1,f
   672  0703                     l920:	
   673  0703  0875               	movf	print_LCD_String@i,w
   674  0704  0777               	addwf	print_LCD_String@a,w
   675  0705  0084               	movwf	4
   676  0706  120A  118A  2003  120A  118A  	fcall	stringdir
   677  070B  3A00               	xorlw	0
   678  070C  1D03               	skipz
   679  070D  2F0F               	goto	u161
   680  070E  2F10               	goto	u160
   681  070F                     u161:	
   682  070F  2EF0               	goto	l916
   683  0710                     u160:	
   684  0710                     l67:	
   685  0710  0008               	return
   686  0711                     __end_of_print_LCD_String:	
   687                           
   688                           	psect	text2
   689  073C                     __ptext2:	
   690 ;; *************** function _print_LCD_Char *****************
   691 ;; Defined at:
   692 ;;		line 10 in file "LCD.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  caracter        1    wreg     unsigned char 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  caracter        1    4[COMMON] unsigned char 
   697 ;;  y               1    3[COMMON] unsigned char 
   698 ;;  temp            1    2[COMMON] unsigned char 
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0, pclath, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         0       0       0       0       0
   709 ;;      Locals:         3       0       0       0       0
   710 ;;      Temps:          1       0       0       0       0
   711 ;;      Totals:         4       0       0       0       0
   712 ;;Total ram usage:        4 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    1
   715 ;; This function calls:
   716 ;;		_PUERTO
   717 ;; This function is called by:
   718 ;;		_print_LCD_String
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           
   723                           ;psect for function _print_LCD_Char
   724  073C                     _print_LCD_Char:	
   725                           
   726                           ;incstack = 0
   727                           ; Regs used in _print_LCD_Char: [wreg+status,2+status,0+pclath+cstack]
   728                           ;print_LCD_Char@caracter stored from wreg
   729  073C  00F4               	movwf	print_LCD_Char@caracter
   730  073D                     l766:	
   731                           
   732                           ;LCD.c: 11:     char temp,y;;LCD.c: 12:     temp = caracter&0x0F;
   733  073D  0874               	movf	print_LCD_Char@caracter,w
   734  073E  390F               	andlw	15
   735  073F  00F1               	movwf	??_print_LCD_Char
   736  0740  0871               	movf	??_print_LCD_Char,w
   737  0741  00F2               	movwf	print_LCD_Char@temp
   738                           
   739                           ;LCD.c: 13:     y = caracter&0xF0;
   740  0742  0874               	movf	print_LCD_Char@caracter,w
   741  0743  39F0               	andlw	240
   742  0744  00F1               	movwf	??_print_LCD_Char
   743  0745  0871               	movf	??_print_LCD_Char,w
   744  0746  00F3               	movwf	print_LCD_Char@y
   745  0747                     l768:	
   746                           
   747                           ;LCD.c: 14:     RE0 = 1;
   748  0747  1283               	bcf	3,5	;RP0=0, select bank0
   749  0748  1303               	bcf	3,6	;RP1=0, select bank0
   750  0749  1409               	bsf	9,0	;volatile
   751  074A                     l770:	
   752                           
   753                           ;LCD.c: 15:     PUERTO(y>>4);
   754  074A  0873               	movf	print_LCD_Char@y,w
   755  074B  00F1               	movwf	??_print_LCD_Char
   756  074C  3004               	movlw	4
   757  074D                     u95:	
   758  074D  1003               	clrc
   759  074E  0CF1               	rrf	??_print_LCD_Char,f
   760  074F  3EFF               	addlw	-1
   761  0750  1D03               	skipz
   762  0751  2F4D               	goto	u95
   763  0752  0871               	movf	??_print_LCD_Char,w
   764  0753  120A  118A  2773  120A  118A  	fcall	_PUERTO
   765  0758                     l772:	
   766                           
   767                           ;LCD.c: 16:     RE1 = 1;
   768  0758  1283               	bcf	3,5	;RP0=0, select bank0
   769  0759  1303               	bcf	3,6	;RP1=0, select bank0
   770  075A  1489               	bsf	9,1	;volatile
   771  075B                     l774:	
   772                           
   773                           ;LCD.c: 17:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   774  075B  300D               	movlw	13
   775  075C  00F1               	movwf	??_print_LCD_Char
   776  075D                     u177:	
   777  075D  0BF1               	decfsz	??_print_LCD_Char,f
   778  075E  2F5D               	goto	u177
   779  075F                     l776:	
   780                           
   781                           ;LCD.c: 18:     RE1 = 0;
   782  075F  1283               	bcf	3,5	;RP0=0, select bank0
   783  0760  1303               	bcf	3,6	;RP1=0, select bank0
   784  0761  1089               	bcf	9,1	;volatile
   785  0762                     l778:	
   786                           
   787                           ;LCD.c: 19:     PUERTO(temp);
   788  0762  0872               	movf	print_LCD_Char@temp,w
   789  0763  120A  118A  2773  120A  118A  	fcall	_PUERTO
   790  0768                     l780:	
   791                           
   792                           ;LCD.c: 20:     RE1 = 1;
   793  0768  1283               	bcf	3,5	;RP0=0, select bank0
   794  0769  1303               	bcf	3,6	;RP1=0, select bank0
   795  076A  1489               	bsf	9,1	;volatile
   796  076B                     l782:	
   797                           
   798                           ;LCD.c: 21:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   799  076B  300D               	movlw	13
   800  076C  00F1               	movwf	??_print_LCD_Char
   801  076D                     u187:	
   802  076D  0BF1               	decfsz	??_print_LCD_Char,f
   803  076E  2F6D               	goto	u187
   804  076F                     l784:	
   805                           
   806                           ;LCD.c: 22:     RE1 = 0;
   807  076F  1283               	bcf	3,5	;RP0=0, select bank0
   808  0770  1303               	bcf	3,6	;RP1=0, select bank0
   809  0771  1089               	bcf	9,1	;volatile
   810  0772                     l27:	
   811  0772  0008               	return
   812  0773                     __end_of_print_LCD_Char:	
   813                           
   814                           	psect	text3
   815  06A2                     __ptext3:	
   816 ;; *************** function _configIO *****************
   817 ;; Defined at:
   818 ;;		line 54 in file "LAB3.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		status,2
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0
   834 ;;      Temps:          0       0       0       0       0
   835 ;;      Totals:         0       0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _configIO
   847  06A2                     _configIO:	
   848  06A2                     l826:	
   849                           ;incstack = 0
   850                           ; Regs used in _configIO: [status,2]
   851                           
   852                           
   853                           ;LAB3.c: 55:     TRISB=0;
   854  06A2  1683               	bsf	3,5	;RP0=1, select bank1
   855  06A3  1303               	bcf	3,6	;RP1=0, select bank1
   856  06A4  0186               	clrf	6	;volatile
   857                           
   858                           ;LAB3.c: 56:     TRISE=0;
   859  06A5  0189               	clrf	9	;volatile
   860                           
   861                           ;LAB3.c: 57:     TRISA=0;
   862  06A6  0185               	clrf	5	;volatile
   863                           
   864                           ;LAB3.c: 58:     ANSEL=0;
   865  06A7  1683               	bsf	3,5	;RP0=1, select bank3
   866  06A8  1703               	bsf	3,6	;RP1=1, select bank3
   867  06A9  0188               	clrf	8	;volatile
   868                           
   869                           ;LAB3.c: 59:     ANSELH=0;
   870  06AA  0189               	clrf	9	;volatile
   871                           
   872                           ;LAB3.c: 60:     PORTA=0;
   873  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   874  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   875  06AD  0185               	clrf	5	;volatile
   876                           
   877                           ;LAB3.c: 61:     PORTB=0;
   878  06AE  0186               	clrf	6	;volatile
   879                           
   880                           ;LAB3.c: 62:     PORTE=0;
   881  06AF  0189               	clrf	9	;volatile
   882  06B0                     l112:	
   883  06B0  0008               	return
   884  06B1                     __end_of_configIO:	
   885                           
   886                           	psect	text4
   887  0698                     __ptext4:	
   888 ;; *************** function _configADC *****************
   889 ;; Defined at:
   890 ;;		line 8 in file "../../IE3027-LAB2/LAB2.X/ADC.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2, status,0
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   904 ;;      Params:         0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _configADC
   919  0698                     _configADC:	
   920  0698                     l828:	
   921                           ;incstack = 0
   922                           ; Regs used in _configADC: [wreg+status,2+status,0]
   923                           
   924                           
   925                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 9:     ADCON0bits.ADCS=1;
   926  0698  1283               	bcf	3,5	;RP0=0, select bank0
   927  0699  1303               	bcf	3,6	;RP1=0, select bank0
   928  069A  081F               	movf	31,w	;volatile
   929  069B  393F               	andlw	-193
   930  069C  3840               	iorlw	64
   931  069D  009F               	movwf	31	;volatile
   932  069E                     l830:	
   933                           
   934                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 10:     ADCON1=0;
   935  069E  1683               	bsf	3,5	;RP0=1, select bank1
   936  069F  1303               	bcf	3,6	;RP1=0, select bank1
   937  06A0  019F               	clrf	31	;volatile
   938  06A1                     l133:	
   939  06A1  0008               	return
   940  06A2                     __end_of_configADC:	
   941                           
   942                           	psect	text5
   943  0691                     __ptext5:	
   944 ;; *************** function _LCD_clear *****************
   945 ;; Defined at:
   946 ;;		line 42 in file "LCD.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0
   963 ;;      Totals:         0       0       0       0       0
   964 ;;Total ram usage:        0 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    2
   967 ;; This function calls:
   968 ;;		_comandosLCD
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           
   975                           ;psect for function _LCD_clear
   976  0691                     _LCD_clear:	
   977  0691                     l794:	
   978                           ;incstack = 0
   979                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
   980                           
   981                           
   982                           ;LCD.c: 43:     comandosLCD(1);
   983  0691  3001               	movlw	1
   984  0692  120A  118A  26B1  120A  118A  	fcall	_comandosLCD
   985  0697                     l52:	
   986  0697  0008               	return
   987  0698                     __end_of_LCD_clear:	
   988                           
   989                           	psect	text6
   990  06C8                     __ptext6:	
   991 ;; *************** function _LCD_Set_Cursor *****************
   992 ;; Defined at:
   993 ;;		line 59 in file "LCD.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  x               1    wreg     unsigned char 
   996 ;;  y               1    4[COMMON] unsigned char 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  x               1    6[COMMON] unsigned char 
   999 ;;  a               1    7[COMMON] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         1       0       0       0       0
  1010 ;;      Locals:         2       0       0       0       0
  1011 ;;      Temps:          1       0       0       0       0
  1012 ;;      Totals:         4       0       0       0       0
  1013 ;;Total ram usage:        4 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    2
  1016 ;; This function calls:
  1017 ;;		_comandosLCD
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _LCD_Set_Cursor
  1025  06C8                     _LCD_Set_Cursor:	
  1026                           
  1027                           ;incstack = 0
  1028                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1029                           ;LCD_Set_Cursor@x stored from wreg
  1030  06C8  00F6               	movwf	LCD_Set_Cursor@x
  1031  06C9                     l902:	
  1032                           
  1033                           ;LCD.c: 60:  uint8_t a;;LCD.c: 61:  if(x == 1)
  1034  06C9  0376               	decf	LCD_Set_Cursor@x,w
  1035  06CA  1D03               	btfss	3,2
  1036  06CB  2ECD               	goto	u141
  1037  06CC  2ECE               	goto	u140
  1038  06CD                     u141:	
  1039  06CD  2EDA               	goto	l908
  1040  06CE                     u140:	
  1041  06CE                     l904:	
  1042                           
  1043                           ;LCD.c: 62:  {;LCD.c: 63:         a = 0x80 + y - 1;
  1044  06CE  0874               	movf	LCD_Set_Cursor@y,w
  1045  06CF  3E7F               	addlw	127
  1046  06D0  00F5               	movwf	??_LCD_Set_Cursor
  1047  06D1  0875               	movf	??_LCD_Set_Cursor,w
  1048  06D2  00F7               	movwf	LCD_Set_Cursor@a
  1049  06D3                     l906:	
  1050                           
  1051                           ;LCD.c: 67:   comandosLCD(a);
  1052  06D3  0877               	movf	LCD_Set_Cursor@a,w
  1053  06D4  120A  118A  26B1  120A  118A  	fcall	_comandosLCD
  1054                           
  1055                           ;LCD.c: 68:  }
  1056  06D9  2EEB               	goto	l61
  1057  06DA                     l908:	
  1058  06DA  3002               	movlw	2
  1059  06DB  0676               	xorwf	LCD_Set_Cursor@x,w
  1060  06DC  1D03               	btfss	3,2
  1061  06DD  2EDF               	goto	u151
  1062  06DE  2EE0               	goto	u150
  1063  06DF                     u151:	
  1064  06DF  2EEB               	goto	l61
  1065  06E0                     u150:	
  1066  06E0                     l910:	
  1067                           
  1068                           ;LCD.c: 70:  {;LCD.c: 71:   a = 0xC0 + y - 1;
  1069  06E0  0874               	movf	LCD_Set_Cursor@y,w
  1070  06E1  3EBF               	addlw	191
  1071  06E2  00F5               	movwf	??_LCD_Set_Cursor
  1072  06E3  0875               	movf	??_LCD_Set_Cursor,w
  1073  06E4  00F7               	movwf	LCD_Set_Cursor@a
  1074  06E5                     l912:	
  1075                           
  1076                           ;LCD.c: 74:   comandosLCD(a);
  1077  06E5  0877               	movf	LCD_Set_Cursor@a,w
  1078  06E6  120A  118A  26B1  120A  118A  	fcall	_comandosLCD
  1079  06EB                     l61:	
  1080  06EB  0008               	return
  1081  06EC                     __end_of_LCD_Set_Cursor:	
  1082                           
  1083                           	psect	text7
  1084  06B1                     __ptext7:	
  1085 ;; *************** function _comandosLCD *****************
  1086 ;; Defined at:
  1087 ;;		line 35 in file "LCD.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  x               1    wreg     unsigned char 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  x               1    3[COMMON] unsigned char 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0, pclath, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1101 ;;      Params:         0       0       0       0       0
  1102 ;;      Locals:         1       0       0       0       0
  1103 ;;      Temps:          2       0       0       0       0
  1104 ;;      Totals:         3       0       0       0       0
  1105 ;;Total ram usage:        3 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    1
  1108 ;; This function calls:
  1109 ;;		_PUERTO
  1110 ;; This function is called by:
  1111 ;;		_LCD_clear
  1112 ;;		_LCD_Set_Cursor
  1113 ;;		_Lcd_Shift_Right
  1114 ;;		_Lcd_Shift_Left
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           
  1119                           ;psect for function _comandosLCD
  1120  06B1                     _comandosLCD:	
  1121                           
  1122                           ;incstack = 0
  1123                           ; Regs used in _comandosLCD: [wreg+status,2+status,0+pclath+cstack]
  1124                           ;comandosLCD@x stored from wreg
  1125  06B1  00F3               	movwf	comandosLCD@x
  1126  06B2                     l786:	
  1127                           
  1128                           ;LCD.c: 36:     RE0=0;
  1129  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1130  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1131  06B4  1009               	bcf	9,0	;volatile
  1132                           
  1133                           ;LCD.c: 37:     RE1=1;
  1134  06B5  1489               	bsf	9,1	;volatile
  1135  06B6                     l788:	
  1136                           
  1137                           ;LCD.c: 38:     PUERTO(x);
  1138  06B6  0873               	movf	comandosLCD@x,w
  1139  06B7  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1140  06BC                     l790:	
  1141                           
  1142                           ;LCD.c: 39:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1143  06BC  3007               	movlw	7
  1144  06BD  00F2               	movwf	??_comandosLCD+1
  1145  06BE  307D               	movlw	125
  1146  06BF  00F1               	movwf	??_comandosLCD
  1147  06C0                     u197:	
  1148  06C0  0BF1               	decfsz	??_comandosLCD,f
  1149  06C1  2EC0               	goto	u197
  1150  06C2  0BF2               	decfsz	??_comandosLCD+1,f
  1151  06C3  2EC0               	goto	u197
  1152  06C4                     l792:	
  1153                           
  1154                           ;LCD.c: 40:     RE1=0;
  1155  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1156  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1157  06C6  1089               	bcf	9,1	;volatile
  1158  06C7                     l49:	
  1159  06C7  0008               	return
  1160  06C8                     __end_of_comandosLCD:	
  1161                           
  1162                           	psect	text8
  1163  07B1                     __ptext8:	
  1164 ;; *************** function _LCD_Init *****************
  1165 ;; Defined at:
  1166 ;;		line 45 in file "LCD.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0
  1182 ;;      Temps:          2       0       0       0       0
  1183 ;;      Totals:         2       0       0       0       0
  1184 ;;Total ram usage:        2 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    1
  1187 ;; This function calls:
  1188 ;;		_PUERTO
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _LCD_Init
  1196  07B1                     _LCD_Init:	
  1197  07B1                     l796:	
  1198                           ;incstack = 0
  1199                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1200                           
  1201                           
  1202                           ;LCD.c: 46:   PUERTO(0x00);
  1203  07B1  3000               	movlw	0
  1204  07B2  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1205  07B7                     l798:	
  1206                           
  1207                           ;LCD.c: 47:    _delay((unsigned long)((20)*(4000000/4000.0)));
  1208  07B7  301A               	movlw	26
  1209  07B8  00F2               	movwf	??_LCD_Init+1
  1210  07B9  30F8               	movlw	248
  1211  07BA  00F1               	movwf	??_LCD_Init
  1212  07BB                     u207:	
  1213  07BB  0BF1               	decfsz	??_LCD_Init,f
  1214  07BC  2FBB               	goto	u207
  1215  07BD  0BF2               	decfsz	??_LCD_Init+1,f
  1216  07BE  2FBB               	goto	u207
  1217  07BF  0000               	nop
  1218  07C0                     l800:	
  1219                           
  1220                           ;LCD.c: 48:   PUERTO(48);
  1221  07C0  3030               	movlw	48
  1222  07C1  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1223                           
  1224                           ;LCD.c: 49:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1225  07C6  3007               	movlw	7
  1226  07C7  00F2               	movwf	??_LCD_Init+1
  1227  07C8  307D               	movlw	125
  1228  07C9  00F1               	movwf	??_LCD_Init
  1229  07CA                     u217:	
  1230  07CA  0BF1               	decfsz	??_LCD_Init,f
  1231  07CB  2FCA               	goto	u217
  1232  07CC  0BF2               	decfsz	??_LCD_Init+1,f
  1233  07CD  2FCA               	goto	u217
  1234  07CE                     l802:	
  1235                           
  1236                           ;LCD.c: 50:   PUERTO(48);
  1237  07CE  3030               	movlw	48
  1238  07CF  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1239  07D4                     l804:	
  1240                           
  1241                           ;LCD.c: 51:  _delay((unsigned long)((11)*(4000000/4000.0)));
  1242  07D4  300F               	movlw	15
  1243  07D5  00F2               	movwf	??_LCD_Init+1
  1244  07D6  3047               	movlw	71
  1245  07D7  00F1               	movwf	??_LCD_Init
  1246  07D8                     u227:	
  1247  07D8  0BF1               	decfsz	??_LCD_Init,f
  1248  07D9  2FD8               	goto	u227
  1249  07DA  0BF2               	decfsz	??_LCD_Init+1,f
  1250  07DB  2FD8               	goto	u227
  1251  07DC  2FDD               	nop2
  1252                           
  1253                           ;LCD.c: 52:   PUERTO(48);
  1254  07DD  3030               	movlw	48
  1255  07DE  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1256                           
  1257                           ;LCD.c: 54:   PUERTO(56);
  1258  07E3  3038               	movlw	56
  1259  07E4  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1260                           
  1261                           ;LCD.c: 55:   PUERTO(8);
  1262  07E9  3008               	movlw	8
  1263  07EA  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1264                           
  1265                           ;LCD.c: 56:   PUERTO(1);
  1266  07EF  3001               	movlw	1
  1267  07F0  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1268                           
  1269                           ;LCD.c: 57:   PUERTO(6);
  1270  07F5  3006               	movlw	6
  1271  07F6  120A  118A  2773  120A  118A  	fcall	_PUERTO
  1272  07FB                     l55:	
  1273  07FB  0008               	return
  1274  07FC                     __end_of_LCD_Init:	
  1275                           
  1276                           	psect	text9
  1277  0773                     __ptext9:	
  1278 ;; *************** function _PUERTO *****************
  1279 ;; Defined at:
  1280 ;;		line 24 in file "LCD.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  x               1    wreg     unsigned char 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  x               1    0[COMMON] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       0       0       0       0
  1295 ;;      Locals:         1       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0
  1297 ;;      Totals:         1       0       0       0       0
  1298 ;;Total ram usage:        1 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_print_LCD_Char
  1304 ;;		_comandosLCD
  1305 ;;		_LCD_Init
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _PUERTO
  1311  0773                     _PUERTO:	
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in _PUERTO: [wreg]
  1315                           ;PUERTO@x stored from wreg
  1316  0773  00F0               	movwf	PUERTO@x
  1317  0774                     l748:	
  1318                           
  1319                           ;LCD.c: 25:     if(x & 1){RB0=1;}else{RB0=0;}
  1320  0774  1C70               	btfss	PUERTO@x,0
  1321  0775  2F77               	goto	u11
  1322  0776  2F78               	goto	u10
  1323  0777                     u11:	
  1324  0777  2F7C               	goto	l30
  1325  0778                     u10:	
  1326  0778                     l750:	
  1327  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1329  077A  1406               	bsf	6,0	;volatile
  1330  077B  2F7F               	goto	l31
  1331  077C                     l30:	
  1332  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1333  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1334  077E  1006               	bcf	6,0	;volatile
  1335  077F                     l31:	
  1336                           
  1337                           ;LCD.c: 26:     if(x & 2){RB1=1;}else{RB1=0;}
  1338  077F  1CF0               	btfss	PUERTO@x,1
  1339  0780  2F82               	goto	u21
  1340  0781  2F83               	goto	u20
  1341  0782                     u21:	
  1342  0782  2F85               	goto	l32
  1343  0783                     u20:	
  1344  0783                     l752:	
  1345  0783  1486               	bsf	6,1	;volatile
  1346  0784  2F86               	goto	l33
  1347  0785                     l32:	
  1348  0785  1086               	bcf	6,1	;volatile
  1349  0786                     l33:	
  1350                           
  1351                           ;LCD.c: 27:     if(x & 4){RB2=1;}else{RB2=0;}
  1352  0786  1D70               	btfss	PUERTO@x,2
  1353  0787  2F89               	goto	u31
  1354  0788  2F8A               	goto	u30
  1355  0789                     u31:	
  1356  0789  2F8C               	goto	l34
  1357  078A                     u30:	
  1358  078A                     l754:	
  1359  078A  1506               	bsf	6,2	;volatile
  1360  078B  2F8D               	goto	l35
  1361  078C                     l34:	
  1362  078C  1106               	bcf	6,2	;volatile
  1363  078D                     l35:	
  1364                           
  1365                           ;LCD.c: 28:     if(x & 8){RB3=1;}else{RB3=0;}
  1366  078D  1DF0               	btfss	PUERTO@x,3
  1367  078E  2F90               	goto	u41
  1368  078F  2F91               	goto	u40
  1369  0790                     u41:	
  1370  0790  2F93               	goto	l36
  1371  0791                     u40:	
  1372  0791                     l756:	
  1373  0791  1586               	bsf	6,3	;volatile
  1374  0792  2F94               	goto	l37
  1375  0793                     l36:	
  1376  0793  1186               	bcf	6,3	;volatile
  1377  0794                     l37:	
  1378                           
  1379                           ;LCD.c: 29:     if(x & 16){RB4=1;}else{RB4=0;}
  1380  0794  1E70               	btfss	PUERTO@x,4
  1381  0795  2F97               	goto	u51
  1382  0796  2F98               	goto	u50
  1383  0797                     u51:	
  1384  0797  2F9A               	goto	l38
  1385  0798                     u50:	
  1386  0798                     l758:	
  1387  0798  1606               	bsf	6,4	;volatile
  1388  0799  2F9B               	goto	l39
  1389  079A                     l38:	
  1390  079A  1206               	bcf	6,4	;volatile
  1391  079B                     l39:	
  1392                           
  1393                           ;LCD.c: 30:     if(x & 32){RB5=1;}else{RB5=0;}
  1394  079B  1EF0               	btfss	PUERTO@x,5
  1395  079C  2F9E               	goto	u61
  1396  079D  2F9F               	goto	u60
  1397  079E                     u61:	
  1398  079E  2FA1               	goto	l40
  1399  079F                     u60:	
  1400  079F                     l760:	
  1401  079F  1686               	bsf	6,5	;volatile
  1402  07A0  2FA2               	goto	l41
  1403  07A1                     l40:	
  1404  07A1  1286               	bcf	6,5	;volatile
  1405  07A2                     l41:	
  1406                           
  1407                           ;LCD.c: 31:     if(x & 64){RB6=1;}else{RB6=0;}
  1408  07A2  1F70               	btfss	PUERTO@x,6
  1409  07A3  2FA5               	goto	u71
  1410  07A4  2FA6               	goto	u70
  1411  07A5                     u71:	
  1412  07A5  2FA8               	goto	l42
  1413  07A6                     u70:	
  1414  07A6                     l762:	
  1415  07A6  1706               	bsf	6,6	;volatile
  1416  07A7  2FA9               	goto	l43
  1417  07A8                     l42:	
  1418  07A8  1306               	bcf	6,6	;volatile
  1419  07A9                     l43:	
  1420                           
  1421                           ;LCD.c: 32:     if(x & 128){RB7=1;}else{RB7=0;}
  1422  07A9  1FF0               	btfss	PUERTO@x,7
  1423  07AA  2FAC               	goto	u81
  1424  07AB  2FAD               	goto	u80
  1425  07AC                     u81:	
  1426  07AC  2FAF               	goto	l44
  1427  07AD                     u80:	
  1428  07AD                     l764:	
  1429  07AD  1786               	bsf	6,7	;volatile
  1430  07AE  2FB0               	goto	l46
  1431  07AF                     l44:	
  1432  07AF  1386               	bcf	6,7	;volatile
  1433  07B0                     l46:	
  1434  07B0  0008               	return
  1435  07B1                     __end_of_PUERTO:	
  1436  007E                     btemp	set	126	;btemp
  1437  007E                     wtemp0	set	126


Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    print_LCD_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_Set_Cursor
    _main->_print_LCD_String
    _print_LCD_String->_print_LCD_Char
    _print_LCD_Char->_PUERTO
    _LCD_clear->_comandosLCD
    _LCD_Set_Cursor->_comandosLCD
    _comandosLCD->_PUERTO
    _LCD_Init->_PUERTO

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     903
                           _LCD_Init
                     _LCD_Set_Cursor
                          _LCD_clear
                          _configADC
                           _configIO
                   _print_LCD_String
 ---------------------------------------------------------------------------------
 (1) _print_LCD_String                                     3     3      0     303
                                              5 COMMON     3     3      0
                     _print_LCD_Char
 ---------------------------------------------------------------------------------
 (2) _print_LCD_Char                                       4     4      0     180
                                              1 COMMON     4     4      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0     135
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     345
                                              4 COMMON     4     3      1
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (2) _comandosLCD                                          3     3      0     135
                                              1 COMMON     3     3      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     120
                                              1 COMMON     2     2      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (3) _PUERTO                                               1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _PUERTO
   _LCD_Set_Cursor
     _comandosLCD
       _PUERTO
   _LCD_clear
     _comandosLCD
       _PUERTO
   _configADC
   _configIO
   _print_LCD_String
     _print_LCD_Char
       _PUERTO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 09 15:42:40 2020

                        pc 0002            print_LCD_Char@y 0073                __CFG_CP$OFF 0000  
                       l30 077C                         l31 077F                         l40 07A1  
                       l32 0785                         l41 07A2                         l33 0786  
                       l42 07A8                         l34 078C                         l43 07A9  
                       l35 078D                         l27 0772                         l44 07AF  
                       l36 0793                         l52 0697                         l37 0794  
                       l61 06EB                         l46 07B0                         l38 079A  
                       l39 079B                         l55 07FB                         l49 06C7  
                       l67 0710                         u10 0778                         u11 0777  
                       u20 0783                         u21 0782                         u30 078A  
                       u31 0789                         u40 0791                         u41 0790  
                       u50 0798                         u51 0797                         u60 079F  
                       u61 079E                         u70 07A6                         u71 07A5  
                       u80 07AD                         u81 07AC                         u95 074D  
                       fsr 0004                        l112 06B0                        l133 06A1  
             comandosLCD@x 0073                        l800 07C0                        l802 07CE  
                      l804 07D4                        l750 0778                        l910 06E0  
                      l902 06C9                        l830 069E                        l760 079F  
                      l752 0783                        l912 06E5                        l904 06CE  
                      l920 0703                        l762 07A6                        l754 078A  
                      l906 06D3                        l826 06A2                        l770 074A  
                      l914 06ED                        l930 0725                        l922 0711  
                      l764 07AD                        l756 0791                        l748 0774  
                      l908 06DA                        l828 0698                        l780 0768  
                      l772 0758                        l916 06F0                        l932 072A  
                      l924 0716                        l758 0798                        l790 06BC  
                      l782 076B                        l774 075B                        l766 073D  
                      l918 06FD                        l934 0732                        l926 071B  
                      l792 06C4                        l784 076F                        l776 075F  
                      l768 0747                        l928 0720                        l786 06B2  
                      l794 0691                        l778 0762                        l796 07B1  
                      l788 06B6                        l798 07B7                        _RB0 0030  
                      _RB1 0031                        _RB2 0032                        _RB3 0033  
                      _RB4 0034                        _RB5 0035                        _RE0 0048  
                      _RB6 0036                        _RE1 0049                        _RB7 0037  
                      u140 06CE                        u141 06CD                        u150 06E0  
                      u207 07BB                        u151 06DF                        u160 0710  
                      u217 07CA                        u161 070F                        u227 07D8  
                      u177 075D               __CFG_CPD$OFF 0000                        u187 076D  
                      u197 06C0                        fsr0 0004               __CFG_LVP$OFF 0000  
           _LCD_Set_Cursor 06C8                       STR_1 0009               __CFG_WRT$OFF 0000  
                     _main 0711                       btemp 007E         print_LCD_Char@temp 0072  
                     start 0000              __CFG_IESO$OFF 0000         __size_of_LCD_clear 0007  
         __end_of_LCD_Init 07FC          print_LCD_String@a 0077          print_LCD_String@i 0075  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      _ANSEL 0188  
                    _PORTA 0005                      _PORTB 0006                      _PORTE 0009  
                    _TRISA 0085                      _TRISB 0086                      _TRISE 0089  
           __CFG_FCMEN$OFF 0000     __end_of_LCD_Set_Cursor 06EC           ??_print_LCD_Char 0071  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E             __CFG_MCLRE$OFF 0000            __initialization 07FC  
             __end_of_main 073C                     ??_main 0078          __end_of_LCD_clear 0698  
          ?_LCD_Set_Cursor 0074                     _ADCON1 009F                     _ADRESH 001E  
 __end_of_print_LCD_String 0711                     _ANSELH 0189                     _PUERTO 0773  
           __CFG_PWRTE$OFF 0000       __size_of_comandosLCD 0017           __end_of_configIO 06B1  
          LCD_Set_Cursor@a 0077            LCD_Set_Cursor@x 0076            LCD_Set_Cursor@y 0074  
  __end_of__initialization 07FC                  ?_LCD_Init 0070             __pcstackCOMMON 0070  
       __size_of_configADC 000A                 ??_LCD_Init 0071                    ?_PUERTO 0070  
               __pmaintext 0711                    PUERTO@x 0070                  ?_configIO 0070  
               __stringtab 0003            __size_of_PUERTO 003E          __end_of_configADC 06A2  
                _ANSELbits 0188           ??_LCD_Set_Cursor 0075                    __ptext1 06EC  
                  __ptext2 073C                    __ptext3 06A2                    __ptext4 0698  
                  __ptext5 0691                    __ptext6 06C8                    __ptext7 06B1  
                  __ptext8 07B1                    __ptext9 0773                 ??_configIO 0070  
                _LCD_clear 0691       end_of_initialization 07FC          ?_print_LCD_String 0070  
       ??_print_LCD_String 0075                  _TRISAbits 0085                  _TRISBbits 0086  
                _TRISEbits 0089                 ?_LCD_clear 0070              ??_comandosLCD 0071  
           __end_of_PUERTO 07B1          __size_of_LCD_Init 004B    __size_of_print_LCD_Char 0037  
      start_initialization 07FC                   ??_PUERTO 0070   __CFG_FOSC$INTRC_NOCLKOUT 0000  
      __end_of_comandosLCD 06C8                  ___latbits 0002                ??_LCD_clear 0074  
        __size_of_configIO 000F                  _configADC 0698                  __pstrings 0003  
                 _LCD_Init 07B1                _comandosLCD 06B1             _print_LCD_Char 073C  
__size_of_print_LCD_String 0025                 ?_configADC 0070                 _ADCON0bits 001F  
              __stringbase 0008     __end_of_print_LCD_Char 0773         __end_of__stringtab 0009  
               _ANSELHbits 0189          __CFG_BOR4V$BOR40V 0000                   _configIO 06A2  
  __size_of_LCD_Set_Cursor 0024              __size_of_main 002B            ?_print_LCD_Char 0070  
              ??_configADC 0070     print_LCD_Char@caracter 0074                  stringcode 0003  
         _print_LCD_String 06EC                   stringdir 0003                   stringtab 0003  
             ?_comandosLCD 0070  
