

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 12 00:40:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.10
    59                           ; Generated 31/07/2019 GMT
    60                           ; 
    61                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0088                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482                           
   483                           	psect	strings
   484  1000                     __pstrings:	
   485  1000                     stringtab:	
   486  1000                     __stringtab:	
   487                           
   488                           ;	String table - string pointers are 1 byte each
   489  1000  1BFF               	btfsc	btemp+1,7
   490  1001  280A               	ljmp	stringcode
   491  1002  1383               	bcf	3,7
   492  1003  187F               	btfsc	btemp+1,0
   493  1004  1783               	bsf	3,7
   494  1005  0800               	movf	0,w
   495  1006  0A84               	incf	4,f
   496  1007  1903               	skipnz
   497  1008  0AFF               	incf	btemp+1,f
   498  1009  0008               	return
   499  100A                     stringcode:	
   500  100A                     stringdir:	
   501  100A  3010               	movlw	high stringdir
   502  100B  008A               	movwf	10
   503  100C  0804               	movf	4,w
   504  100D  0A84               	incf	4,f
   505  100E  0782               	addwf	2,f
   506  100F                     __stringbase:	
   507  100F  3400               	retlw	0
   508  1010                     __end_of__stringtab:	
   509  1010                     __powers_:	
   510  1010  3400               	retlw	0
   511  1011  3480               	retlw	128
   512  1012  343F               	retlw	63
   513  1013  3400               	retlw	0
   514  1014  3420               	retlw	32
   515  1015  3441               	retlw	65
   516  1016  3400               	retlw	0
   517  1017  34C8               	retlw	200
   518  1018  3442               	retlw	66
   519  1019  3400               	retlw	0
   520  101A  347A               	retlw	122
   521  101B  3444               	retlw	68
   522  101C  3440               	retlw	64
   523  101D  341C               	retlw	28
   524  101E  3446               	retlw	70
   525  101F  3450               	retlw	80
   526  1020  34C3               	retlw	195
   527  1021  3447               	retlw	71
   528  1022  3424               	retlw	36
   529  1023  3474               	retlw	116
   530  1024  3449               	retlw	73
   531  1025  3497               	retlw	151
   532  1026  3418               	retlw	24
   533  1027  344B               	retlw	75
   534  1028  34BC               	retlw	188
   535  1029  34BE               	retlw	190
   536  102A  344C               	retlw	76
   537  102B  346B               	retlw	107
   538  102C  346E               	retlw	110
   539  102D  344E               	retlw	78
   540  102E  3403               	retlw	3
   541  102F  3415               	retlw	21
   542  1030  3450               	retlw	80
   543  1031  3479               	retlw	121
   544  1032  34AD               	retlw	173
   545  1033  3460               	retlw	96
   546  1034  34F3               	retlw	243
   547  1035  3449               	retlw	73
   548  1036  3471               	retlw	113
   549  1037                     __end_of__powers_:	
   550  1037                     __npowers_:	
   551  1037  3400               	retlw	0
   552  1038  3480               	retlw	128
   553  1039  343F               	retlw	63
   554  103A  34CD               	retlw	205
   555  103B  34CC               	retlw	204
   556  103C  343D               	retlw	61
   557  103D  34D7               	retlw	215
   558  103E  3423               	retlw	35
   559  103F  343C               	retlw	60
   560  1040  3412               	retlw	18
   561  1041  3483               	retlw	131
   562  1042  343A               	retlw	58
   563  1043  34B7               	retlw	183
   564  1044  34D1               	retlw	209
   565  1045  3438               	retlw	56
   566  1046  34C6               	retlw	198
   567  1047  3427               	retlw	39
   568  1048  3437               	retlw	55
   569  1049  3438               	retlw	56
   570  104A  3486               	retlw	134
   571  104B  3435               	retlw	53
   572  104C  34C0               	retlw	192
   573  104D  34D6               	retlw	214
   574  104E  3433               	retlw	51
   575  104F  34CC               	retlw	204
   576  1050  342B               	retlw	43
   577  1051  3432               	retlw	50
   578  1052  3470               	retlw	112
   579  1053  3489               	retlw	137
   580  1054  3430               	retlw	48
   581  1055  34E7               	retlw	231
   582  1056  34DB               	retlw	219
   583  1057  342E               	retlw	46
   584  1058  34E5               	retlw	229
   585  1059  343C               	retlw	60
   586  105A  341E               	retlw	30
   587  105B  3442               	retlw	66
   588  105C  34A2               	retlw	162
   589  105D  340D               	retlw	13
   590  105E                     __end_of__npowers_:	
   591  105E                     _dpowers:	
   592  105E  3401               	retlw	1
   593  105F  3400               	retlw	0
   594  1060  3400               	retlw	0
   595  1061  3400               	retlw	0
   596  1062  340A               	retlw	10
   597  1063  3400               	retlw	0
   598  1064  3400               	retlw	0
   599  1065  3400               	retlw	0
   600  1066  3464               	retlw	100
   601  1067  3400               	retlw	0
   602  1068  3400               	retlw	0
   603  1069  3400               	retlw	0
   604  106A  34E8               	retlw	232
   605  106B  3403               	retlw	3
   606  106C  3400               	retlw	0
   607  106D  3400               	retlw	0
   608  106E  3410               	retlw	16
   609  106F  3427               	retlw	39
   610  1070  3400               	retlw	0
   611  1071  3400               	retlw	0
   612  1072  34A0               	retlw	160
   613  1073  3486               	retlw	134
   614  1074  3401               	retlw	1
   615  1075  3400               	retlw	0
   616  1076  3440               	retlw	64
   617  1077  3442               	retlw	66
   618  1078  340F               	retlw	15
   619  1079  3400               	retlw	0
   620  107A  3480               	retlw	128
   621  107B  3496               	retlw	150
   622  107C  3498               	retlw	152
   623  107D  3400               	retlw	0
   624  107E  3400               	retlw	0
   625  107F  34E1               	retlw	225
   626  1080  34F5               	retlw	245
   627  1081  3405               	retlw	5
   628  1082  3400               	retlw	0
   629  1083  34CA               	retlw	202
   630  1084  349A               	retlw	154
   631  1085  343B               	retlw	59
   632  1086                     __end_of_dpowers:	
   633  001A                     _RCREG	set	26
   634  0019                     _TXREG	set	25
   635  001E                     _ADRESH	set	30
   636  001F                     _ADCON0bits	set	31
   637  000C                     _PIR1bits	set	12
   638  000B                     _INTCONbits	set	11
   639  0009                     _PORTE	set	9
   640  0006                     _PORTB	set	6
   641  00C4                     _CREN	set	196
   642  00C7                     _SPEN	set	199
   643  0065                     _RCIF	set	101
   644  0037                     _RB7	set	55
   645  0036                     _RB6	set	54
   646  0035                     _RB5	set	53
   647  0034                     _RB4	set	52
   648  0033                     _RB3	set	51
   649  0032                     _RB2	set	50
   650  0031                     _RB1	set	49
   651  0030                     _RB0	set	48
   652  0049                     _RE1	set	73
   653  0048                     _RE0	set	72
   654  0099                     _SPBRG	set	153
   655  0086                     _TRISBbits	set	134
   656  0089                     _TRISEbits	set	137
   657  0085                     _TRISAbits	set	133
   658  009F                     _ADCON1	set	159
   659  008C                     _PIE1bits	set	140
   660  0089                     _TRISE	set	137
   661  0085                     _TRISA	set	133
   662  0086                     _TRISB	set	134
   663  04C1                     _TRMT	set	1217
   664  04C5                     _TXEN	set	1221
   665  043E                     _TRISC6	set	1086
   666  043F                     _TRISC7	set	1087
   667  04C4                     _SYNC	set	1220
   668  04C2                     _BRGH	set	1218
   669  0189                     _ANSELHbits	set	393
   670  0188                     _ANSELbits	set	392
   671  0189                     _ANSELH	set	393
   672  0188                     _ANSEL	set	392
   673  1086                     STR_1:	
   674  1086  3456               	retlw	86	;'V'
   675  1087  3431               	retlw	49	;'1'
   676  1088  3420               	retlw	32	;' '
   677  1089  3420               	retlw	32	;' '
   678  108A  3420               	retlw	32	;' '
   679  108B  3456               	retlw	86	;'V'
   680  108C  3432               	retlw	50	;'2'
   681  108D  3420               	retlw	32	;' '
   682  108E  3420               	retlw	32	;' '
   683  108F  3420               	retlw	32	;' '
   684  1090  3463               	retlw	99	;'c'
   685  1091  346F               	retlw	111	;'o'
   686  1092  346E               	retlw	110	;'n'
   687  1093  3474               	retlw	116	;'t'
   688  1094  3461               	retlw	97	;'a'
   689  1095  3464               	retlw	100	;'d'
   690  1096  346F               	retlw	111	;'o'
   691  1097  3472               	retlw	114	;'r'
   692  1098  3420               	retlw	32	;' '
   693  1099  340A               	retlw	10
   694  109A  3400               	retlw	0
   695  109B                     STR_2:	
   696  109B  3425               	retlw	37	;'%'
   697  109C  3432               	retlw	50	;'2'
   698  109D  342E               	retlw	46	;'.'
   699  109E  3431               	retlw	49	;'1'
   700  109F  3466               	retlw	102	;'f'
   701  10A0  3420               	retlw	32	;' '
   702  10A1  3420               	retlw	32	;' '
   703  10A2  3420               	retlw	32	;' '
   704  10A3  3425               	retlw	37	;'%'
   705  10A4  3432               	retlw	50	;'2'
   706  10A5  342E               	retlw	46	;'.'
   707  10A6  3431               	retlw	49	;'1'
   708  10A7  3466               	retlw	102	;'f'
   709  10A8  3420               	retlw	32	;' '
   710  10A9  3420               	retlw	32	;' '
   711  10AA  3420               	retlw	32	;' '
   712  10AB  3425               	retlw	37	;'%'
   713  10AC  3464               	retlw	100	;'d'
   714  10AD  3400               	retlw	0
   715  10AE                     STR_3:	
   716  10AE  3456               	retlw	86	;'V'
   717  10AF  3431               	retlw	49	;'1'
   718  10B0  3420               	retlw	32	;' '
   719  10B1  3420               	retlw	32	;' '
   720  10B2  3420               	retlw	32	;' '
   721  10B3  3456               	retlw	86	;'V'
   722  10B4  3432               	retlw	50	;'2'
   723  10B5  3420               	retlw	32	;' '
   724  10B6  3420               	retlw	32	;' '
   725  10B7  3420               	retlw	32	;' '
   726  10B8  3463               	retlw	99	;'c'
   727  10B9  346F               	retlw	111	;'o'
   728  10BA  346E               	retlw	110	;'n'
   729  10BB  3474               	retlw	116	;'t'
   730  10BC  3461               	retlw	97	;'a'
   731  10BD  3400               	retlw	0
   732                           
   733                           ; #config settings
   734  0000                     
   735                           	psect	cinit
   736  000F                     start_initialization:	
   737  000F                     __initialization:	
   738                           
   739                           ; Clear objects allocated to COMMON
   740  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   741                           
   742                           ; Clear objects allocated to BANK0
   743  0010  1283               	bcf	3,5	;RP0=0, select bank0
   744  0011  1303               	bcf	3,6	;RP1=0, select bank0
   745  0012  01EC               	clrf	__pbssBANK0& (0+127)
   746  0013  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   747                           
   748                           ; Clear objects allocated to BANK1
   749  0014  1383               	bcf	3,7	;select IRP bank0
   750  0015  30BF               	movlw	low __pbssBANK1
   751  0016  0084               	movwf	4
   752  0017  30DA               	movlw	low (__pbssBANK1+27)
   753  0018  160A  158A  248E  120A  118A  	fcall	clear_ram0
   754  001D                     end_of_initialization:	
   755                           ;End of C runtime variable initialization code
   756                           
   757  001D                     __end_of__initialization:	
   758  001D  0183               	clrf	3
   759  001E  160A  118A  2E09   	ljmp	_main	;jump to C main() function
   760                           
   761                           	psect	bssCOMMON
   762  007A                     __pbssCOMMON:	
   763  007A                     _lecturaUSART:	
   764  007A                     	ds	1
   765                           
   766                           	psect	bssBANK0
   767  006C                     __pbssBANK0:	
   768  006C                     _ADC1:	
   769  006C                     	ds	1
   770  006D                     _contador:	
   771  006D                     	ds	1
   772                           
   773                           	psect	bssBANK1
   774  00BF                     __pbssBANK1:	
   775  00BF                     _Volt2:	
   776  00BF                     	ds	3
   777  00C2                     _Volt1:	
   778  00C2                     	ds	3
   779  00C5                     _ADC2:	
   780  00C5                     	ds	1
   781  00C6                     _datos:	
   782  00C6                     	ds	20
   783                           
   784                           	psect	clrtext
   785  1C8E                     clear_ram0:	
   786                           ;	Called with FSR containing the base address, and
   787                           ;	W with the last address+1
   788                           
   789  1C8E  0064               	clrwdt	;clear the watchdog before getting into this loop
   790  1C8F                     clrloop0:	
   791  1C8F  0180               	clrf	0	;clear RAM location pointed to by FSR
   792  1C90  0A84               	incf	4,f	;increment pointer
   793  1C91  0604               	xorwf	4,w	;XOR with final address
   794  1C92  1903               	btfsc	3,2	;have we reached the end yet?
   795  1C93  3400               	retlw	0	;all done for this memory range, return
   796  1C94  0604               	xorwf	4,w	;XOR again to restore value
   797  1C95  2C8F               	goto	clrloop0	;do the next byte
   798                           
   799                           	psect	cstackBANK1
   800  00A0                     __pcstackBANK1:	
   801  00A0                     ??_sprintf:	
   802                           
   803                           ; 1 bytes @ 0x0
   804  00A0                     	ds	6
   805  00A6                     _sprintf$1067:	
   806                           
   807                           ; 3 bytes @ 0x6
   808  00A6                     	ds	3
   809  00A9                     sprintf@ap:	
   810                           
   811                           ; 1 bytes @ 0x9
   812  00A9                     	ds	1
   813  00AA                     sprintf@flag:	
   814                           
   815                           ; 2 bytes @ 0xA
   816  00AA                     	ds	2
   817  00AC                     sprintf@width:	
   818                           
   819                           ; 2 bytes @ 0xC
   820  00AC                     	ds	2
   821  00AE                     sprintf@tmpval:	
   822                           
   823                           ; 4 bytes @ 0xE
   824  00AE                     	ds	4
   825  00B2                     sprintf@val:	
   826                           
   827                           ; 4 bytes @ 0x12
   828  00B2                     	ds	4
   829  00B6                     sprintf@eexp:	
   830                           
   831                           ; 2 bytes @ 0x16
   832  00B6                     	ds	2
   833  00B8                     sprintf@fval:	
   834                           
   835                           ; 3 bytes @ 0x18
   836  00B8                     	ds	3
   837  00BB                     sprintf@sp:	
   838                           
   839                           ; 1 bytes @ 0x1B
   840  00BB                     	ds	1
   841  00BC                     sprintf@prec:	
   842                           
   843                           ; 2 bytes @ 0x1C
   844  00BC                     	ds	2
   845  00BE                     sprintf@c:	
   846                           
   847                           ; 1 bytes @ 0x1E
   848  00BE                     	ds	1
   849                           
   850                           	psect	cstackCOMMON
   851  0070                     __pcstackCOMMON:	
   852  0070                     ?_isdigit:	
   853  0070                     ?_PUERTO:	
   854                           ; 1 bit 
   855                           
   856  0070                     ?_Read_USART:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ??_Read_USART:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_configIO:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_configADC:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_lecADC:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_Write_USART:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_print_LCD_Char:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_comandosLCD:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_LCD_clear:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ?_LCD_Init:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_ISR:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ??_ISR:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_main:	
   893                           ; 1 bytes @ 0x0
   894                           
   895                           
   896                           ; 1 bytes @ 0x0
   897  0070                     	ds	3
   898  0073                     ?___ftge:	
   899  0073                     ??_PUERTO:	
   900                           ; 1 bit 
   901                           
   902  0073                     ??_configIO:	
   903                           ; 1 bytes @ 0x3
   904                           
   905  0073                     ??_configADC:	
   906                           ; 1 bytes @ 0x3
   907                           
   908  0073                     ??_lecADC:	
   909                           ; 1 bytes @ 0x3
   910                           
   911  0073                     ??_Write_USART:	
   912                           ; 1 bytes @ 0x3
   913                           
   914  0073                     ??_isdigit:	
   915                           ; 1 bytes @ 0x3
   916                           
   917  0073                     ??___lldiv:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  0073                     ??___aldiv:	
   921                           ; 1 bytes @ 0x3
   922                           
   923  0073                     ?___wmul:	
   924                           ; 1 bytes @ 0x3
   925                           
   926  0073                     ?___awmod:	
   927                           ; 2 bytes @ 0x3
   928                           
   929  0073                     ?___lwmod:	
   930                           ; 2 bytes @ 0x3
   931                           
   932  0073                     ?___ftpack:	
   933                           ; 2 bytes @ 0x3
   934                           
   935  0073                     ?___ftneg:	
   936                           ; 3 bytes @ 0x3
   937                           
   938  0073                     ?__tdiv_to_l_:	
   939                           ; 3 bytes @ 0x3
   940                           
   941  0073                     ?__div_to_l_:	
   942                           ; 4 bytes @ 0x3
   943                           
   944  0073                     PUERTO@x:	
   945                           ; 4 bytes @ 0x3
   946                           
   947  0073                     Write_USART@a:	
   948                           ; 1 bytes @ 0x3
   949                           
   950  0073                     _isdigit$868:	
   951                           ; 1 bytes @ 0x3
   952                           
   953  0073                     ___wmul@multiplier:	
   954                           ; 1 bytes @ 0x3
   955                           
   956  0073                     ___awmod@divisor:	
   957                           ; 2 bytes @ 0x3
   958                           
   959  0073                     ___lwmod@divisor:	
   960                           ; 2 bytes @ 0x3
   961                           
   962  0073                     __div_to_l_@f1:	
   963                           ; 2 bytes @ 0x3
   964                           
   965  0073                     ___ftpack@arg:	
   966                           ; 3 bytes @ 0x3
   967                           
   968  0073                     __tdiv_to_l_@f1:	
   969                           ; 3 bytes @ 0x3
   970                           
   971  0073                     ___ftge@ff1:	
   972                           ; 3 bytes @ 0x3
   973                           
   974  0073                     ___ftneg@f1:	
   975                           ; 3 bytes @ 0x3
   976                           
   977                           
   978                           ; 3 bytes @ 0x3
   979  0073                     	ds	1
   980  0074                     ?_Write_USART_String:	
   981  0074                     ??_print_LCD_Char:	
   982                           ; 1 bytes @ 0x4
   983                           
   984  0074                     ??_comandosLCD:	
   985                           ; 1 bytes @ 0x4
   986                           
   987  0074                     ___aldiv@counter:	
   988                           ; 1 bytes @ 0x4
   989                           
   990  0074                     isdigit@c:	
   991                           ; 1 bytes @ 0x4
   992                           
   993  0074                     Write_USART_String@a:	
   994                           ; 1 bytes @ 0x4
   995                           
   996  0074                     ___lldiv@quotient:	
   997                           ; 2 bytes @ 0x4
   998                           
   999                           
  1000                           ; 4 bytes @ 0x4
  1001  0074                     	ds	1
  1002  0075                     print_LCD_Char@caracter:	
  1003  0075                     lecADC@x:	
  1004                           ; 1 bytes @ 0x5
  1005                           
  1006  0075                     ___aldiv@sign:	
  1007                           ; 1 bytes @ 0x5
  1008                           
  1009  0075                     ___wmul@multiplicand:	
  1010                           ; 1 bytes @ 0x5
  1011                           
  1012  0075                     ___awmod@dividend:	
  1013                           ; 2 bytes @ 0x5
  1014                           
  1015  0075                     ___lwmod@dividend:	
  1016                           ; 2 bytes @ 0x5
  1017                           
  1018                           
  1019                           ; 2 bytes @ 0x5
  1020  0075                     	ds	1
  1021  0076                     ??_Write_USART_String:	
  1022  0076                     ?_print_LCD_String:	
  1023                           ; 1 bytes @ 0x6
  1024                           
  1025  0076                     ??___ftneg:	
  1026                           ; 1 bytes @ 0x6
  1027                           
  1028  0076                     comandosLCD@x:	
  1029                           ; 1 bytes @ 0x6
  1030                           
  1031  0076                     ___ftpack@exp:	
  1032                           ; 1 bytes @ 0x6
  1033                           
  1034  0076                     print_LCD_String@a:	
  1035                           ; 1 bytes @ 0x6
  1036                           
  1037  0076                     __div_to_l_@f2:	
  1038                           ; 2 bytes @ 0x6
  1039                           
  1040  0076                     __tdiv_to_l_@f2:	
  1041                           ; 3 bytes @ 0x6
  1042                           
  1043  0076                     ___ftge@ff2:	
  1044                           ; 3 bytes @ 0x6
  1045                           
  1046  0076                     ___aldiv@quotient:	
  1047                           ; 3 bytes @ 0x6
  1048                           
  1049                           
  1050                           ; 4 bytes @ 0x6
  1051  0076                     	ds	1
  1052  0077                     ??_LCD_clear:	
  1053  0077                     ??_LCD_Init:	
  1054                           ; 1 bytes @ 0x7
  1055                           
  1056  0077                     ?_LCD_Set_Cursor:	
  1057                           ; 1 bytes @ 0x7
  1058                           
  1059  0077                     ??___wmul:	
  1060                           ; 1 bytes @ 0x7
  1061                           
  1062  0077                     ??___awmod:	
  1063                           ; 1 bytes @ 0x7
  1064                           
  1065  0077                     ??___lwmod:	
  1066                           ; 1 bytes @ 0x7
  1067                           
  1068  0077                     LCD_Set_Cursor@y:	
  1069                           ; 1 bytes @ 0x7
  1070                           
  1071  0077                     Write_USART_String@i:	
  1072                           ; 1 bytes @ 0x7
  1073                           
  1074  0077                     ___ftpack@sign:	
  1075                           ; 1 bytes @ 0x7
  1076                           
  1077  0077                     ___wmul@product:	
  1078                           ; 1 bytes @ 0x7
  1079                           
  1080                           
  1081                           ; 2 bytes @ 0x7
  1082  0077                     	ds	1
  1083  0078                     ??_LCD_Set_Cursor:	
  1084  0078                     ??___awtoft:	
  1085                           ; 1 bytes @ 0x8
  1086                           
  1087  0078                     ??___lltoft:	
  1088                           ; 1 bytes @ 0x8
  1089                           
  1090  0078                     ___lldiv@counter:	
  1091                           ; 1 bytes @ 0x8
  1092                           
  1093  0078                     ___awmod@counter:	
  1094                           ; 1 bytes @ 0x8
  1095                           
  1096  0078                     ___lwmod@counter:	
  1097                           ; 1 bytes @ 0x8
  1098                           
  1099  0078                     print_LCD_String@i:	
  1100                           ; 1 bytes @ 0x8
  1101                           
  1102                           
  1103                           ; 2 bytes @ 0x8
  1104  0078                     	ds	1
  1105  0079                     ??___ftge:	
  1106  0079                     ??___llmod:	
  1107                           ; 1 bytes @ 0x9
  1108                           
  1109  0079                     ??___lwdiv:	
  1110                           ; 1 bytes @ 0x9
  1111                           
  1112  0079                     ___awmod@sign:	
  1113                           ; 1 bytes @ 0x9
  1114                           
  1115  0079                     ___lltoft@exp:	
  1116                           ; 1 bytes @ 0x9
  1117                           
  1118                           
  1119                           ; 1 bytes @ 0x9
  1120  0079                     	ds	1
  1121  007A                     ??___ftsub:	
  1122                           
  1123                           	psect	cstackBANK0
  1124  0020                     __pcstackBANK0:	
  1125                           ; 1 bytes @ 0xA
  1126                           
  1127  0020                     ??__tdiv_to_l_:	
  1128  0020                     ??__div_to_l_:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0020                     ??___ftpack:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0020                     ??_print_LCD_String:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0020                     ?___awdiv:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0020                     ?___lwdiv:	
  1141                           ; 2 bytes @ 0x0
  1142                           
  1143  0020                     ?___lldiv:	
  1144                           ; 2 bytes @ 0x0
  1145                           
  1146  0020                     ?___aldiv:	
  1147                           ; 4 bytes @ 0x0
  1148                           
  1149  0020                     LCD_Set_Cursor@x:	
  1150                           ; 4 bytes @ 0x0
  1151                           
  1152  0020                     ___awdiv@divisor:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0020                     ___lwdiv@divisor:	
  1156                           ; 2 bytes @ 0x0
  1157                           
  1158  0020                     ___lldiv@divisor:	
  1159                           ; 2 bytes @ 0x0
  1160                           
  1161  0020                     ___aldiv@divisor:	
  1162                           ; 4 bytes @ 0x0
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0x0
  1166  0020                     	ds	1
  1167  0021                     LCD_Set_Cursor@a:	
  1168                           
  1169                           ; 1 bytes @ 0x1
  1170  0021                     	ds	1
  1171  0022                     ___awdiv@dividend:	
  1172  0022                     ___lwdiv@dividend:	
  1173                           ; 2 bytes @ 0x2
  1174                           
  1175                           
  1176                           ; 2 bytes @ 0x2
  1177  0022                     	ds	1
  1178  0023                     ?___awtoft:	
  1179  0023                     ?___lltoft:	
  1180                           ; 3 bytes @ 0x3
  1181                           
  1182  0023                     ___awtoft@c:	
  1183                           ; 3 bytes @ 0x3
  1184                           
  1185  0023                     ___lltoft@c:	
  1186                           ; 2 bytes @ 0x3
  1187                           
  1188                           
  1189                           ; 4 bytes @ 0x3
  1190  0023                     	ds	1
  1191  0024                     ??___awdiv:	
  1192  0024                     ___lwdiv@quotient:	
  1193                           ; 1 bytes @ 0x4
  1194                           
  1195  0024                     ___lldiv@dividend:	
  1196                           ; 2 bytes @ 0x4
  1197                           
  1198  0024                     ___aldiv@dividend:	
  1199                           ; 4 bytes @ 0x4
  1200                           
  1201  0024                     __tdiv_to_l_@quot:	
  1202                           ; 4 bytes @ 0x4
  1203                           
  1204                           
  1205                           ; 4 bytes @ 0x4
  1206  0024                     	ds	1
  1207  0025                     ___awdiv@counter:	
  1208                           
  1209                           ; 1 bytes @ 0x5
  1210  0025                     	ds	1
  1211  0026                     ___awdiv@sign:	
  1212  0026                     ___awtoft@sign:	
  1213                           ; 1 bytes @ 0x6
  1214                           
  1215  0026                     ___lwdiv@counter:	
  1216                           ; 1 bytes @ 0x6
  1217                           
  1218                           
  1219                           ; 1 bytes @ 0x6
  1220  0026                     	ds	1
  1221  0027                     ___awdiv@quotient:	
  1222                           
  1223                           ; 2 bytes @ 0x7
  1224  0027                     	ds	1
  1225  0028                     ?_USART_Init:	
  1226  0028                     ?___llmod:	
  1227                           ; 1 bytes @ 0x8
  1228                           
  1229  0028                     __tdiv_to_l_@cntr:	
  1230                           ; 4 bytes @ 0x8
  1231                           
  1232  0028                     USART_Init@baudrate:	
  1233                           ; 1 bytes @ 0x8
  1234                           
  1235  0028                     __div_to_l_@quot:	
  1236                           ; 4 bytes @ 0x8
  1237                           
  1238  0028                     ___llmod@divisor:	
  1239                           ; 4 bytes @ 0x8
  1240                           
  1241                           
  1242                           ; 4 bytes @ 0x8
  1243  0028                     	ds	1
  1244  0029                     ?___bmul:	
  1245  0029                     ___bmul@multiplicand:	
  1246                           ; 1 bytes @ 0x9
  1247                           
  1248  0029                     __tdiv_to_l_@exp1:	
  1249                           ; 1 bytes @ 0x9
  1250                           
  1251                           
  1252                           ; 1 bytes @ 0x9
  1253  0029                     	ds	1
  1254  002A                     ??___bmul:	
  1255                           
  1256                           ; 1 bytes @ 0xA
  1257  002A                     	ds	1
  1258  002B                     ___bmul@product:	
  1259                           
  1260                           ; 1 bytes @ 0xB
  1261  002B                     	ds	1
  1262  002C                     ??_USART_Init:	
  1263  002C                     ___bmul@multiplier:	
  1264                           ; 1 bytes @ 0xC
  1265                           
  1266  002C                     __div_to_l_@cntr:	
  1267                           ; 1 bytes @ 0xC
  1268                           
  1269  002C                     ___llmod@dividend:	
  1270                           ; 1 bytes @ 0xC
  1271                           
  1272                           
  1273                           ; 4 bytes @ 0xC
  1274  002C                     	ds	1
  1275  002D                     ?___ftmul:	
  1276  002D                     __div_to_l_@exp1:	
  1277                           ; 3 bytes @ 0xD
  1278                           
  1279  002D                     ___ftmul@f1:	
  1280                           ; 1 bytes @ 0xD
  1281                           
  1282                           
  1283                           ; 3 bytes @ 0xD
  1284  002D                     	ds	3
  1285  0030                     ___llmod@counter:	
  1286  0030                     ___ftmul@f2:	
  1287                           ; 1 bytes @ 0x10
  1288                           
  1289                           
  1290                           ; 3 bytes @ 0x10
  1291  0030                     	ds	3
  1292  0033                     ??___ftmul:	
  1293                           
  1294                           ; 1 bytes @ 0x13
  1295  0033                     	ds	4
  1296  0037                     ___ftmul@exp:	
  1297                           
  1298                           ; 1 bytes @ 0x17
  1299  0037                     	ds	1
  1300  0038                     USART_Init@x:	
  1301  0038                     ___ftmul@f3_as_product:	
  1302                           ; 2 bytes @ 0x18
  1303                           
  1304                           
  1305                           ; 3 bytes @ 0x18
  1306  0038                     	ds	3
  1307  003B                     ___ftmul@cntr:	
  1308                           
  1309                           ; 1 bytes @ 0x1B
  1310  003B                     	ds	1
  1311  003C                     ___ftmul@sign:	
  1312                           
  1313                           ; 1 bytes @ 0x1C
  1314  003C                     	ds	1
  1315  003D                     ?_conversion:	
  1316  003D                     ?_fround:	
  1317                           ; 3 bytes @ 0x1D
  1318                           
  1319  003D                     ?_scale:	
  1320                           ; 3 bytes @ 0x1D
  1321                           
  1322                           
  1323                           ; 3 bytes @ 0x1D
  1324  003D                     	ds	3
  1325  0040                     ??_conversion:	
  1326  0040                     ??_fround:	
  1327                           ; 1 bytes @ 0x20
  1328                           
  1329  0040                     ??_scale:	
  1330                           ; 1 bytes @ 0x20
  1331                           
  1332                           
  1333                           ; 1 bytes @ 0x20
  1334  0040                     	ds	2
  1335  0042                     conversion@b:	
  1336  0042                     _scale$1066:	
  1337                           ; 1 bytes @ 0x22
  1338                           
  1339                           
  1340                           ; 3 bytes @ 0x22
  1341  0042                     	ds	3
  1342  0045                     scale@scl:	
  1343                           
  1344                           ; 1 bytes @ 0x25
  1345  0045                     	ds	1
  1346  0046                     ?___fttol:	
  1347  0046                     ___fttol@f1:	
  1348                           ; 4 bytes @ 0x26
  1349                           
  1350  0046                     _fround$1065:	
  1351                           ; 3 bytes @ 0x26
  1352                           
  1353                           
  1354                           ; 3 bytes @ 0x26
  1355  0046                     	ds	3
  1356  0049                     _fround$1064:	
  1357                           
  1358                           ; 3 bytes @ 0x29
  1359  0049                     	ds	1
  1360  004A                     ??___fttol:	
  1361                           
  1362                           ; 1 bytes @ 0x2A
  1363  004A                     	ds	2
  1364  004C                     fround@prec:	
  1365                           
  1366                           ; 1 bytes @ 0x2C
  1367  004C                     	ds	1
  1368  004D                     ?___ftadd:	
  1369  004D                     ___ftadd@f1:	
  1370                           ; 3 bytes @ 0x2D
  1371                           
  1372                           
  1373                           ; 3 bytes @ 0x2D
  1374  004D                     	ds	1
  1375  004E                     ___fttol@sign1:	
  1376                           
  1377                           ; 1 bytes @ 0x2E
  1378  004E                     	ds	1
  1379  004F                     ___fttol@lval:	
  1380                           
  1381                           ; 4 bytes @ 0x2F
  1382  004F                     	ds	1
  1383  0050                     ___ftadd@f2:	
  1384                           
  1385                           ; 3 bytes @ 0x30
  1386  0050                     	ds	3
  1387  0053                     ??___ftadd:	
  1388  0053                     ___fttol@exp1:	
  1389                           ; 1 bytes @ 0x33
  1390                           
  1391                           
  1392                           ; 1 bytes @ 0x33
  1393  0053                     	ds	4
  1394  0057                     ___ftadd@sign:	
  1395                           
  1396                           ; 1 bytes @ 0x37
  1397  0057                     	ds	1
  1398  0058                     ___ftadd@exp2:	
  1399                           
  1400                           ; 1 bytes @ 0x38
  1401  0058                     	ds	1
  1402  0059                     ___ftadd@exp1:	
  1403                           
  1404                           ; 1 bytes @ 0x39
  1405  0059                     	ds	1
  1406  005A                     ?___ftsub:	
  1407  005A                     ___ftsub@f2:	
  1408                           ; 3 bytes @ 0x3A
  1409                           
  1410                           
  1411                           ; 3 bytes @ 0x3A
  1412  005A                     	ds	3
  1413  005D                     ___ftsub@f1:	
  1414                           
  1415                           ; 3 bytes @ 0x3D
  1416  005D                     	ds	3
  1417  0060                     ?_sprintf:	
  1418  0060                     sprintf@f:	
  1419                           ; 2 bytes @ 0x40
  1420                           
  1421                           
  1422                           ; 1 bytes @ 0x40
  1423  0060                     	ds	9
  1424  0069                     ??_main:	
  1425                           
  1426                           ; 1 bytes @ 0x49
  1427  0069                     	ds	3
  1428                           
  1429                           	psect	maintext
  1430  1609                     __pmaintext:	
  1431 ;;
  1432 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1433 ;;
  1434 ;; *************** function _main *****************
  1435 ;; Defined at:
  1436 ;;		line 60 in file "LAB3.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : B00/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1450 ;;      Params:         0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0
  1452 ;;      Temps:          0       3       0       0       0
  1453 ;;      Totals:         0       3       0       0       0
  1454 ;;Total ram usage:        3 bytes
  1455 ;; Hardware stack levels required when called:    6
  1456 ;; This function calls:
  1457 ;;		_LCD_Init
  1458 ;;		_LCD_Set_Cursor
  1459 ;;		_LCD_clear
  1460 ;;		_USART_Init
  1461 ;;		_Write_USART
  1462 ;;		_Write_USART_String
  1463 ;;		_configADC
  1464 ;;		_configIO
  1465 ;;		_conversion
  1466 ;;		_lecADC
  1467 ;;		_print_LCD_String
  1468 ;;		_sprintf
  1469 ;; This function is called by:
  1470 ;;		Startup code after reset
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _main
  1476  1609                     _main:	
  1477  1609                     l4266:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1480                           
  1481                           
  1482                           ;LAB3.c: 61:     configIO();
  1483  1609  160A  158A  24BE  160A  118A  	fcall	_configIO
  1484  160E                     l4268:	
  1485                           
  1486                           ;LAB3.c: 62:     configADC();
  1487  160E  160A  158A  2496  160A  118A  	fcall	_configADC
  1488  1613                     l4270:	
  1489                           
  1490                           ;LAB3.c: 63:     USART_Init(9600);
  1491  1613  3000               	movlw	0
  1492  1614  1283               	bcf	3,5	;RP0=0, select bank0
  1493  1615  1303               	bcf	3,6	;RP1=0, select bank0
  1494  1616  00AB               	movwf	USART_Init@baudrate+3
  1495  1617  3000               	movlw	0
  1496  1618  00AA               	movwf	USART_Init@baudrate+2
  1497  1619  3025               	movlw	37
  1498  161A  00A9               	movwf	USART_Init@baudrate+1
  1499  161B  3080               	movlw	128
  1500  161C  00A8               	movwf	USART_Init@baudrate
  1501  161D  160A  118A  2447  160A  118A  	fcall	_USART_Init
  1502  1622                     l4272:	
  1503                           
  1504                           ;LAB3.c: 64:     LCD_Init();
  1505  1622  160A  158A  25D1  160A  118A  	fcall	_LCD_Init
  1506  1627                     l4274:	
  1507                           
  1508                           ;LAB3.c: 65:     LCD_clear();
  1509  1627  160A  158A  247F  160A  118A  	fcall	_LCD_clear
  1510  162C                     l4276:	
  1511                           
  1512                           ;LAB3.c: 67:         ADC1=lecADC(0);
  1513  162C  3000               	movlw	0
  1514  162D  160A  118A  2703  160A  118A  	fcall	_lecADC
  1515  1632  1283               	bcf	3,5	;RP0=0, select bank0
  1516  1633  1303               	bcf	3,6	;RP1=0, select bank0
  1517  1634  00E9               	movwf	??_main
  1518  1635  0869               	movf	??_main,w
  1519  1636  00EC               	movwf	_ADC1
  1520  1637                     l4278:	
  1521                           
  1522                           ;LAB3.c: 68:         ADC2=lecADC(1);
  1523  1637  3001               	movlw	1
  1524  1638  160A  118A  2703  160A  118A  	fcall	_lecADC
  1525  163D  1283               	bcf	3,5	;RP0=0, select bank0
  1526  163E  1303               	bcf	3,6	;RP1=0, select bank0
  1527  163F  00E9               	movwf	??_main
  1528  1640  0869               	movf	??_main,w
  1529  1641  1683               	bsf	3,5	;RP0=1, select bank1
  1530  1642  1303               	bcf	3,6	;RP1=0, select bank1
  1531  1643  00C5               	movwf	_ADC2^(0+128)
  1532  1644                     l4280:	
  1533                           
  1534                           ;LAB3.c: 69:         Volt1=conversion(ADC1);
  1535  1644  1283               	bcf	3,5	;RP0=0, select bank0
  1536  1645  1303               	bcf	3,6	;RP1=0, select bank0
  1537  1646  086C               	movf	_ADC1,w
  1538  1647  160A  158A  25A6  160A  118A  	fcall	_conversion
  1539  164C  1283               	bcf	3,5	;RP0=0, select bank0
  1540  164D  1303               	bcf	3,6	;RP1=0, select bank0
  1541  164E  083D               	movf	?_conversion,w
  1542  164F  1683               	bsf	3,5	;RP0=1, select bank1
  1543  1650  1303               	bcf	3,6	;RP1=0, select bank1
  1544  1651  00C2               	movwf	_Volt1^(0+128)
  1545  1652  1283               	bcf	3,5	;RP0=0, select bank0
  1546  1653  1303               	bcf	3,6	;RP1=0, select bank0
  1547  1654  083E               	movf	?_conversion+1,w
  1548  1655  1683               	bsf	3,5	;RP0=1, select bank1
  1549  1656  1303               	bcf	3,6	;RP1=0, select bank1
  1550  1657  00C3               	movwf	(_Volt1+1)^(0+128)
  1551  1658  1283               	bcf	3,5	;RP0=0, select bank0
  1552  1659  1303               	bcf	3,6	;RP1=0, select bank0
  1553  165A  083F               	movf	?_conversion+2,w
  1554  165B  1683               	bsf	3,5	;RP0=1, select bank1
  1555  165C  1303               	bcf	3,6	;RP1=0, select bank1
  1556  165D  00C4               	movwf	(_Volt1+2)^(0+128)
  1557  165E                     l4282:	
  1558                           
  1559                           ;LAB3.c: 70:         Volt2=conversion(ADC2);
  1560  165E  0845               	movf	_ADC2^(0+128),w
  1561  165F  160A  158A  25A6  160A  118A  	fcall	_conversion
  1562  1664  1283               	bcf	3,5	;RP0=0, select bank0
  1563  1665  1303               	bcf	3,6	;RP1=0, select bank0
  1564  1666  083D               	movf	?_conversion,w
  1565  1667  1683               	bsf	3,5	;RP0=1, select bank1
  1566  1668  1303               	bcf	3,6	;RP1=0, select bank1
  1567  1669  00BF               	movwf	_Volt2^(0+128)
  1568  166A  1283               	bcf	3,5	;RP0=0, select bank0
  1569  166B  1303               	bcf	3,6	;RP1=0, select bank0
  1570  166C  083E               	movf	?_conversion+1,w
  1571  166D  1683               	bsf	3,5	;RP0=1, select bank1
  1572  166E  1303               	bcf	3,6	;RP1=0, select bank1
  1573  166F  00C0               	movwf	(_Volt2+1)^(0+128)
  1574  1670  1283               	bcf	3,5	;RP0=0, select bank0
  1575  1671  1303               	bcf	3,6	;RP1=0, select bank0
  1576  1672  083F               	movf	?_conversion+2,w
  1577  1673  1683               	bsf	3,5	;RP0=1, select bank1
  1578  1674  1303               	bcf	3,6	;RP1=0, select bank1
  1579  1675  00C1               	movwf	(_Volt2+2)^(0+128)
  1580  1676                     l4284:	
  1581                           
  1582                           ;LAB3.c: 71:         Write_USART_String("V1   V2   contador \n");
  1583  1676  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1584  1677  00F4               	movwf	Write_USART_String@a
  1585  1678  3080               	movlw	128
  1586  1679  00F5               	movwf	Write_USART_String@a+1
  1587  167A  160A  158A  257B  160A  118A  	fcall	_Write_USART_String
  1588  167F                     l4286:	
  1589                           
  1590                           ;LAB3.c: 72:         sprintf(datos, "%2.1f   %2.1f   %d", Volt1,Volt2,contador);
  1591  167F  308C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1592  1680  1283               	bcf	3,5	;RP0=0, select bank0
  1593  1681  1303               	bcf	3,6	;RP1=0, select bank0
  1594  1682  00E9               	movwf	??_main
  1595  1683  0869               	movf	??_main,w
  1596  1684  00E0               	movwf	sprintf@f
  1597  1685  1683               	bsf	3,5	;RP0=1, select bank1
  1598  1686  1303               	bcf	3,6	;RP1=0, select bank1
  1599  1687  0842               	movf	_Volt1^(0+128),w
  1600  1688  1283               	bcf	3,5	;RP0=0, select bank0
  1601  1689  1303               	bcf	3,6	;RP1=0, select bank0
  1602  168A  00E1               	movwf	?_sprintf+1
  1603  168B  1683               	bsf	3,5	;RP0=1, select bank1
  1604  168C  1303               	bcf	3,6	;RP1=0, select bank1
  1605  168D  0843               	movf	(_Volt1+1)^(0+128),w
  1606  168E  1283               	bcf	3,5	;RP0=0, select bank0
  1607  168F  1303               	bcf	3,6	;RP1=0, select bank0
  1608  1690  00E2               	movwf	?_sprintf+2
  1609  1691  1683               	bsf	3,5	;RP0=1, select bank1
  1610  1692  1303               	bcf	3,6	;RP1=0, select bank1
  1611  1693  0844               	movf	(_Volt1+2)^(0+128),w
  1612  1694  1283               	bcf	3,5	;RP0=0, select bank0
  1613  1695  1303               	bcf	3,6	;RP1=0, select bank0
  1614  1696  00E3               	movwf	?_sprintf+3
  1615  1697  1683               	bsf	3,5	;RP0=1, select bank1
  1616  1698  1303               	bcf	3,6	;RP1=0, select bank1
  1617  1699  083F               	movf	_Volt2^(0+128),w
  1618  169A  1283               	bcf	3,5	;RP0=0, select bank0
  1619  169B  1303               	bcf	3,6	;RP1=0, select bank0
  1620  169C  00E4               	movwf	?_sprintf+4
  1621  169D  1683               	bsf	3,5	;RP0=1, select bank1
  1622  169E  1303               	bcf	3,6	;RP1=0, select bank1
  1623  169F  0840               	movf	(_Volt2+1)^(0+128),w
  1624  16A0  1283               	bcf	3,5	;RP0=0, select bank0
  1625  16A1  1303               	bcf	3,6	;RP1=0, select bank0
  1626  16A2  00E5               	movwf	?_sprintf+5
  1627  16A3  1683               	bsf	3,5	;RP0=1, select bank1
  1628  16A4  1303               	bcf	3,6	;RP1=0, select bank1
  1629  16A5  0841               	movf	(_Volt2+2)^(0+128),w
  1630  16A6  1283               	bcf	3,5	;RP0=0, select bank0
  1631  16A7  1303               	bcf	3,6	;RP1=0, select bank0
  1632  16A8  00E6               	movwf	?_sprintf+6
  1633  16A9  086D               	movf	_contador,w
  1634  16AA  00EA               	movwf	??_main+1
  1635  16AB  01EB               	clrf	??_main+2
  1636  16AC  086A               	movf	??_main+1,w
  1637  16AD  00E7               	movwf	?_sprintf+7
  1638  16AE  086B               	movf	??_main+2,w
  1639  16AF  00E8               	movwf	?_sprintf+8
  1640  16B0  30C6               	movlw	(low (_datos| 0))& (0+255)
  1641  16B1  120A  158A  228B  160A  118A  	fcall	_sprintf
  1642  16B6                     l4288:	
  1643                           
  1644                           ;LAB3.c: 73:         Write_USART_String(datos);
  1645  16B6  30C6               	movlw	(low (_datos| 0))& (0+255)
  1646  16B7  00F4               	movwf	Write_USART_String@a
  1647  16B8  3000               	movlw	0
  1648  16B9  00F5               	movwf	Write_USART_String@a+1
  1649  16BA  160A  158A  257B  160A  118A  	fcall	_Write_USART_String
  1650  16BF                     l4290:	
  1651                           
  1652                           ;LAB3.c: 74:         Write_USART(13);
  1653  16BF  300D               	movlw	13
  1654  16C0  160A  158A  24A0  160A  118A  	fcall	_Write_USART
  1655  16C5                     l4292:	
  1656                           
  1657                           ;LAB3.c: 75:         Write_USART(10);
  1658  16C5  300A               	movlw	10
  1659  16C6  160A  158A  24A0  160A  118A  	fcall	_Write_USART
  1660  16CB                     l4294:	
  1661                           
  1662                           ;LAB3.c: 76:         LCD_clear();
  1663  16CB  160A  158A  247F  160A  118A  	fcall	_LCD_clear
  1664  16D0                     l4296:	
  1665                           
  1666                           ;LAB3.c: 77:         LCD_Set_Cursor(1,1);
  1667  16D0  01F7               	clrf	LCD_Set_Cursor@y
  1668  16D1  0AF7               	incf	LCD_Set_Cursor@y,f
  1669  16D2  3001               	movlw	1
  1670  16D3  160A  158A  2555  160A  118A  	fcall	_LCD_Set_Cursor
  1671  16D8                     l4298:	
  1672                           
  1673                           ;LAB3.c: 78:         print_LCD_String("V1   V2   conta");
  1674  16D8  309F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1675  16D9  00F6               	movwf	print_LCD_String@a
  1676  16DA  3080               	movlw	128
  1677  16DB  00F7               	movwf	print_LCD_String@a+1
  1678  16DC  160A  158A  270D  160A  118A  	fcall	_print_LCD_String
  1679  16E1                     l4300:	
  1680                           
  1681                           ;LAB3.c: 79:         LCD_Set_Cursor(2,0);
  1682  16E1  01F7               	clrf	LCD_Set_Cursor@y
  1683  16E2  3002               	movlw	2
  1684  16E3  160A  158A  2555  160A  118A  	fcall	_LCD_Set_Cursor
  1685  16E8                     l4302:	
  1686                           
  1687                           ;LAB3.c: 80:         print_LCD_String(datos);
  1688  16E8  30C6               	movlw	(low (_datos| 0))& (0+255)
  1689  16E9  00F6               	movwf	print_LCD_String@a
  1690  16EA  3000               	movlw	0
  1691  16EB  00F7               	movwf	print_LCD_String@a+1
  1692  16EC  160A  158A  270D  160A  118A  	fcall	_print_LCD_String
  1693  16F1                     l4304:	
  1694                           
  1695                           ;LAB3.c: 81:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1696  16F1  3003               	movlw	3
  1697  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  1698  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  1699  16F4  00EB               	movwf	??_main+2
  1700  16F5  308A               	movlw	138
  1701  16F6  00EA               	movwf	??_main+1
  1702  16F7  3055               	movlw	85
  1703  16F8  00E9               	movwf	??_main
  1704  16F9                     u6607:	
  1705  16F9  0BE9               	decfsz	??_main,f
  1706  16FA  2EF9               	goto	u6607
  1707  16FB  0BEA               	decfsz	??_main+1,f
  1708  16FC  2EF9               	goto	u6607
  1709  16FD  0BEB               	decfsz	??_main+2,f
  1710  16FE  2EF9               	goto	u6607
  1711  16FF  2E2C               	goto	l4276
  1712  1700  120A  118A  280C   	ljmp	start
  1713  1703                     __end_of_main:	
  1714                           
  1715                           	psect	text1
  1716  0A8B                     __ptext1:	
  1717 ;; *************** function _sprintf *****************
  1718 ;; Defined at:
  1719 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  sp              1    wreg     PTR unsigned char 
  1722 ;;		 -> datos(20), 
  1723 ;;  f               1   64[BANK0 ] PTR const unsigned char 
  1724 ;;		 -> STR_2(19), 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1727 ;;		 -> datos(20), 
  1728 ;;  val             4   18[BANK1 ] unsigned long 
  1729 ;;  tmpval          4   14[BANK1 ] struct .
  1730 ;;  fval            3   24[BANK1 ] struct .
  1731 ;;  prec            2   28[BANK1 ] int 
  1732 ;;  eexp            2   22[BANK1 ] int 
  1733 ;;  width           2   12[BANK1 ] int 
  1734 ;;  flag            2   10[BANK1 ] unsigned short 
  1735 ;;  cp              2    0        PTR const unsigned char 
  1736 ;;  len             2    0        unsigned int 
  1737 ;;  c               1   30[BANK1 ] unsigned char 
  1738 ;;  ap              1    9[BANK1 ] PTR void [1]
  1739 ;;		 -> ?_sprintf(2), 
  1740 ;;  d               1    0        unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2   64[BANK0 ] int 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       9       0       0       0
  1751 ;;      Locals:         0       0      25       0       0
  1752 ;;      Temps:          0       0       6       0       0
  1753 ;;      Totals:         0       9      31       0       0
  1754 ;;Total ram usage:       40 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    5
  1757 ;; This function calls:
  1758 ;;		___awdiv
  1759 ;;		___ftadd
  1760 ;;		___ftge
  1761 ;;		___ftmul
  1762 ;;		___ftneg
  1763 ;;		___ftsub
  1764 ;;		___fttol
  1765 ;;		___lldiv
  1766 ;;		___llmod
  1767 ;;		___lltoft
  1768 ;;		___wmul
  1769 ;;		__div_to_l_
  1770 ;;		__tdiv_to_l_
  1771 ;;		_fround
  1772 ;;		_isdigit
  1773 ;;		_scale
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _sprintf
  1781  0A8B                     _sprintf:	
  1782                           
  1783                           ;incstack = 0
  1784                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1785                           ;sprintf@sp stored from wreg
  1786  0A8B  1683               	bsf	3,5	;RP0=1, select bank1
  1787  0A8C  1303               	bcf	3,6	;RP1=0, select bank1
  1788  0A8D  00BB               	movwf	sprintf@sp^(0+128)
  1789  0A8E                     l3974:	
  1790                           
  1791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1792  0A8E  3061               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1793  0A8F  00A0               	movwf	??_sprintf^(0+128)
  1794  0A90  0820               	movf	??_sprintf^(0+128),w
  1795  0A91  00A9               	movwf	sprintf@ap^(0+128)
  1796  0A92                     L1:	
  1797                           
  1798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1799  0A92  120A  118A  2E1B   	goto	l4254
  1800  0A95                     l3976:	
  1801                           
  1802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1803  0A95  3025               	movlw	37
  1804  0A96  063E               	xorwf	sprintf@c^(0+128),w
  1805  0A97  1903               	btfsc	3,2
  1806  0A98  2A9A               	goto	u6061
  1807  0A99  2A9B               	goto	u6060
  1808  0A9A                     u6061:	
  1809  0A9A  2AA7               	goto	l3982
  1810  0A9B                     u6060:	
  1811  0A9B                     l3978:	
  1812                           
  1813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1814  0A9B  083E               	movf	sprintf@c^(0+128),w
  1815  0A9C  00A0               	movwf	??_sprintf^(0+128)
  1816  0A9D  083B               	movf	sprintf@sp^(0+128),w
  1817  0A9E  0084               	movwf	4
  1818  0A9F  0820               	movf	??_sprintf^(0+128),w
  1819  0AA0  1383               	bcf	3,7	;select IRP bank0
  1820  0AA1  0080               	movwf	0
  1821  0AA2                     l3980:	
  1822  0AA2  3001               	movlw	1
  1823  0AA3  00A0               	movwf	??_sprintf^(0+128)
  1824  0AA4  0820               	movf	??_sprintf^(0+128),w
  1825  0AA5  07BB               	addwf	sprintf@sp^(0+128),f
  1826                           
  1827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1828  0AA6  2A92               	goto	L1
  1829  0AA7                     l3982:	
  1830                           
  1831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  1832  0AA7  01AC               	clrf	sprintf@width^(0+128)
  1833  0AA8  01AD               	clrf	(sprintf@width+1)^(0+128)
  1834                           
  1835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1836  0AA9  01AA               	clrf	sprintf@flag^(0+128)
  1837  0AAA  01AB               	clrf	(sprintf@flag+1)^(0+128)
  1838  0AAB                     l3984:	
  1839                           
  1840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  1841  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0AAC  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0AAD  0860               	movf	sprintf@f,w
  1844  0AAE  0084               	movwf	4
  1845  0AAF  160A  118A  200A  120A  158A  	fcall	stringdir
  1846  0AB4  160A  158A  24AC  120A  158A  	fcall	_isdigit
  1847  0AB9  1C03               	btfss	3,0
  1848  0ABA  2ABC               	goto	u6071
  1849  0ABB  2ABD               	goto	u6070
  1850  0ABC                     u6071:	
  1851  0ABC  2B03               	goto	l3996
  1852  0ABD                     u6070:	
  1853  0ABD                     l3986:	
  1854                           
  1855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  1856  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
  1857  0ABE  1303               	bcf	3,6	;RP1=0, select bank1
  1858  0ABF  01AC               	clrf	sprintf@width^(0+128)
  1859  0AC0  01AD               	clrf	(sprintf@width+1)^(0+128)
  1860  0AC1                     l3988:	
  1861                           
  1862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  1863  0AC1  300A               	movlw	10
  1864  0AC2  00F3               	movwf	___wmul@multiplier
  1865  0AC3  3000               	movlw	0
  1866  0AC4  00F4               	movwf	___wmul@multiplier+1
  1867  0AC5  1683               	bsf	3,5	;RP0=1, select bank1
  1868  0AC6  1303               	bcf	3,6	;RP1=0, select bank1
  1869  0AC7  082D               	movf	(sprintf@width+1)^(0+128),w
  1870  0AC8  00F6               	movwf	___wmul@multiplicand+1
  1871  0AC9  082C               	movf	sprintf@width^(0+128),w
  1872  0ACA  00F5               	movwf	___wmul@multiplicand
  1873  0ACB  160A  158A  2530  120A  158A  	fcall	___wmul
  1874  0AD0  0874               	movf	?___wmul+1,w
  1875  0AD1  1683               	bsf	3,5	;RP0=1, select bank1
  1876  0AD2  1303               	bcf	3,6	;RP1=0, select bank1
  1877  0AD3  00AD               	movwf	(sprintf@width+1)^(0+128)
  1878  0AD4  0873               	movf	?___wmul,w
  1879  0AD5  00AC               	movwf	sprintf@width^(0+128)
  1880  0AD6                     l3990:	
  1881                           
  1882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  1883  0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0AD8  0860               	movf	sprintf@f,w
  1886  0AD9  0084               	movwf	4
  1887  0ADA  160A  118A  200A  120A  158A  	fcall	stringdir
  1888  0ADF  3ED0               	addlw	208
  1889  0AE0  1683               	bsf	3,5	;RP0=1, select bank1
  1890  0AE1  1303               	bcf	3,6	;RP1=0, select bank1
  1891  0AE2  00A0               	movwf	??_sprintf^(0+128)
  1892  0AE3  30FF               	movlw	255
  1893  0AE4  1803               	skipnc
  1894  0AE5  3000               	movlw	0
  1895  0AE6  00A1               	movwf	(??_sprintf^(0+128)+1)
  1896  0AE7  0820               	movf	??_sprintf^(0+128),w
  1897  0AE8  07AC               	addwf	sprintf@width^(0+128),f
  1898  0AE9  1803               	skipnc
  1899  0AEA  0AAD               	incf	(sprintf@width+1)^(0+128),f
  1900  0AEB  0821               	movf	(??_sprintf+1)^(0+128),w
  1901  0AEC  07AD               	addwf	(sprintf@width+1)^(0+128),f
  1902  0AED                     l3992:	
  1903  0AED  3001               	movlw	1
  1904  0AEE  00A0               	movwf	??_sprintf^(0+128)
  1905  0AEF  0820               	movf	??_sprintf^(0+128),w
  1906  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0AF2  07E0               	addwf	sprintf@f,f
  1909  0AF3                     l3994:	
  1910                           
  1911                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  1912  0AF3  0860               	movf	sprintf@f,w
  1913  0AF4  0084               	movwf	4
  1914  0AF5  160A  118A  200A  120A  158A  	fcall	stringdir
  1915  0AFA  160A  158A  24AC  120A  158A  	fcall	_isdigit
  1916  0AFF  1803               	btfsc	3,0
  1917  0B00  2B02               	goto	u6081
  1918  0B01  2B03               	goto	u6080
  1919  0B02                     u6081:	
  1920  0B02  2AC1               	goto	l3988
  1921  0B03                     u6080:	
  1922  0B03                     l3996:	
  1923                           
  1924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1925  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  1927  0B05  0860               	movf	sprintf@f,w
  1928  0B06  0084               	movwf	4
  1929  0B07  160A  118A  200A  120A  158A  	fcall	stringdir
  1930  0B0C  3A2E               	xorlw	46
  1931  0B0D  1D03               	skipz
  1932  0B0E  2B10               	goto	u6091
  1933  0B0F  2B11               	goto	u6090
  1934  0B10                     u6091:	
  1935  0B10  2B63               	goto	l4012
  1936  0B11                     u6090:	
  1937  0B11                     l3998:	
  1938                           
  1939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  1940  0B11  1683               	bsf	3,5	;RP0=1, select bank1
  1941  0B12  1303               	bcf	3,6	;RP1=0, select bank1
  1942  0B13  172B               	bsf	(sprintf@flag^(0+128)+1),6
  1943  0B14                     l4000:	
  1944                           
  1945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1946  0B14  3001               	movlw	1
  1947  0B15  00A0               	movwf	??_sprintf^(0+128)
  1948  0B16  0820               	movf	??_sprintf^(0+128),w
  1949  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0B19  07E0               	addwf	sprintf@f,f
  1952  0B1A                     l4002:	
  1953                           
  1954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1955  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  1956  0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  1957  0B1C  01BC               	clrf	sprintf@prec^(0+128)
  1958  0B1D  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1959                           
  1960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1961  0B1E  2B51               	goto	l4010
  1962  0B1F                     l4004:	
  1963                           
  1964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1965  0B1F  300A               	movlw	10
  1966  0B20  00F3               	movwf	___wmul@multiplier
  1967  0B21  3000               	movlw	0
  1968  0B22  00F4               	movwf	___wmul@multiplier+1
  1969  0B23  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0B24  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0B25  083D               	movf	(sprintf@prec+1)^(0+128),w
  1972  0B26  00F6               	movwf	___wmul@multiplicand+1
  1973  0B27  083C               	movf	sprintf@prec^(0+128),w
  1974  0B28  00F5               	movwf	___wmul@multiplicand
  1975  0B29  160A  158A  2530  120A  158A  	fcall	___wmul
  1976  0B2E  0874               	movf	?___wmul+1,w
  1977  0B2F  1683               	bsf	3,5	;RP0=1, select bank1
  1978  0B30  1303               	bcf	3,6	;RP1=0, select bank1
  1979  0B31  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1980  0B32  0873               	movf	?___wmul,w
  1981  0B33  00BC               	movwf	sprintf@prec^(0+128)
  1982  0B34                     l4006:	
  1983                           
  1984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1985  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0B36  0860               	movf	sprintf@f,w
  1988  0B37  0084               	movwf	4
  1989  0B38  160A  118A  200A  120A  158A  	fcall	stringdir
  1990  0B3D  3ED0               	addlw	208
  1991  0B3E  1683               	bsf	3,5	;RP0=1, select bank1
  1992  0B3F  1303               	bcf	3,6	;RP1=0, select bank1
  1993  0B40  00A0               	movwf	??_sprintf^(0+128)
  1994  0B41  30FF               	movlw	255
  1995  0B42  1803               	skipnc
  1996  0B43  3000               	movlw	0
  1997  0B44  00A1               	movwf	(??_sprintf^(0+128)+1)
  1998  0B45  0820               	movf	??_sprintf^(0+128),w
  1999  0B46  07BC               	addwf	sprintf@prec^(0+128),f
  2000  0B47  1803               	skipnc
  2001  0B48  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2002  0B49  0821               	movf	(??_sprintf+1)^(0+128),w
  2003  0B4A  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2004  0B4B                     l4008:	
  2005  0B4B  3001               	movlw	1
  2006  0B4C  00A0               	movwf	??_sprintf^(0+128)
  2007  0B4D  0820               	movf	??_sprintf^(0+128),w
  2008  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0B50  07E0               	addwf	sprintf@f,f
  2011  0B51                     l4010:	
  2012                           
  2013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  2014  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0B52  0860               	movf	sprintf@f,w
  2016  0B53  0084               	movwf	4
  2017  0B54  160A  118A  200A  120A  158A  	fcall	stringdir
  2018  0B59  160A  158A  24AC  120A  158A  	fcall	_isdigit
  2019  0B5E  1803               	btfsc	3,0
  2020  0B5F  2B61               	goto	u6101
  2021  0B60  2B62               	goto	u6100
  2022  0B61                     u6101:	
  2023  0B61  2B1F               	goto	l4004
  2024  0B62                     u6100:	
  2025  0B62  2B6B               	goto	l4018
  2026  0B63                     l4012:	
  2027                           
  2028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  2029  0B63  1683               	bsf	3,5	;RP0=1, select bank1
  2030  0B64  1303               	bcf	3,6	;RP1=0, select bank1
  2031  0B65  01BC               	clrf	sprintf@prec^(0+128)
  2032  0B66  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2033  0B67                     l4014:	
  2034                           
  2035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  2036  0B67  162B               	bsf	(sprintf@flag^(0+128)+1),4
  2037  0B68  2B6B               	goto	l4018
  2038  0B69                     l376:	
  2039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  2040                           
  2041                           
  2042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  2043  0B69  152B               	bsf	(sprintf@flag^(0+128)+1),2
  2044                           
  2045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  2046  0B6A  2B8F               	goto	l4020
  2047  0B6B                     l4018:	
  2048  0B6B  3001               	movlw	1
  2049  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0B6E  07E0               	addwf	sprintf@f,f
  2052  0B6F  30FF               	movlw	-1
  2053  0B70  0760               	addwf	sprintf@f,w
  2054  0B71  0084               	movwf	4
  2055  0B72  160A  118A  200A  120A  158A  	fcall	stringdir
  2056  0B77  1683               	bsf	3,5	;RP0=1, select bank1
  2057  0B78  1303               	bcf	3,6	;RP1=0, select bank1
  2058  0B79  00BE               	movwf	sprintf@c^(0+128)
  2059  0B7A  00A0               	movwf	??_sprintf^(0+128)
  2060  0B7B  01A1               	clrf	(??_sprintf^(0+128)+1)
  2061                           
  2062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2063                           ; Switch size 1, requested type "simple"
  2064                           ; Number of cases is 1, Range of values is 0 to 0
  2065                           ; switch strategies available:
  2066                           ; Name         Instructions Cycles
  2067                           ; simple_byte            4     3 (average)
  2068                           ; direct_byte           11     8 (fixed)
  2069                           ; jumptable            260     6 (fixed)
  2070                           ;	Chosen strategy is simple_byte
  2071  0B7C  0821               	movf	(??_sprintf+1)^(0+128),w
  2072  0B7D  3A00               	xorlw	0	; case 0
  2073  0B7E  1903               	skipnz
  2074  0B7F  2B81               	goto	l4356
  2075  0B80  2A92               	goto	L1
  2076  0B81                     l4356:	
  2077                           
  2078                           ; Switch size 1, requested type "simple"
  2079                           ; Number of cases is 4, Range of values is 0 to 105
  2080                           ; switch strategies available:
  2081                           ; Name         Instructions Cycles
  2082                           ; simple_byte           13     7 (average)
  2083                           ; jumptable            260     6 (fixed)
  2084                           ;	Chosen strategy is simple_byte
  2085  0B81  0820               	movf	??_sprintf^(0+128),w
  2086  0B82  3A00               	xorlw	0	; case 0
  2087  0B83  1903               	skipnz
  2088  0B84  2D42               	goto	L3
  2089  0B85  3A64               	xorlw	100	; case 100
  2090  0B86  1903               	skipnz
  2091  0B87  2B8F               	goto	l4020
  2092  0B88  3A02               	xorlw	2	; case 102
  2093  0B89  1903               	skipnz
  2094  0B8A  2B69               	goto	l376
  2095  0B8B  3A0F               	xorlw	15	; case 105
  2096  0B8C  1903               	skipnz
  2097  0B8D  2B8F               	goto	l4020
  2098  0B8E  2A92               	goto	L1
  2099  0B8F                     l4020:	
  2100                           
  2101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  2102  0B8F  3000               	movlw	0
  2103  0B90  052A               	andwf	sprintf@flag^(0+128),w
  2104  0B91  00A0               	movwf	??_sprintf^(0+128)
  2105  0B92  3007               	movlw	7
  2106  0B93  052B               	andwf	(sprintf@flag+1)^(0+128),w
  2107  0B94  00A1               	movwf	(??_sprintf+1)^(0+128)
  2108  0B95  0820               	movf	??_sprintf^(0+128),w
  2109  0B96  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2110  0B97  1903               	btfsc	3,2
  2111  0B98  2B9A               	goto	u6111
  2112  0B99  2B9D               	goto	u6110
  2113  0B9A                     u6111:	
  2114  0B9A  120A  118A  2C6C   	goto	l4176
  2115  0B9D                     u6110:	
  2116  0B9D                     l4022:	
  2117                           
  2118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  2119  0B9D  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  2120  0B9E  2BA0               	goto	u6121
  2121  0B9F  2BA1               	goto	u6120
  2122  0BA0                     u6121:	
  2123  0BA0  2BA5               	goto	l4026
  2124  0BA1                     u6120:	
  2125  0BA1                     l4024:	
  2126                           
  2127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  2128  0BA1  3006               	movlw	6
  2129  0BA2  00BC               	movwf	sprintf@prec^(0+128)
  2130  0BA3  3000               	movlw	0
  2131  0BA4  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2132  0BA5                     l4026:	
  2133                           
  2134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2135  0BA5  0829               	movf	sprintf@ap^(0+128),w
  2136  0BA6  0084               	movwf	4
  2137  0BA7  1383               	bcf	3,7	;select IRP bank0
  2138  0BA8  0800               	movf	0,w
  2139  0BA9  00B8               	movwf	sprintf@fval^(0+128)
  2140  0BAA  0A84               	incf	4,f
  2141  0BAB  0800               	movf	0,w
  2142  0BAC  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2143  0BAD  0A84               	incf	4,f
  2144  0BAE  0800               	movf	0,w
  2145  0BAF  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2146  0BB0                     l4028:	
  2147  0BB0  3003               	movlw	3
  2148  0BB1  00A0               	movwf	??_sprintf^(0+128)
  2149  0BB2  0820               	movf	??_sprintf^(0+128),w
  2150  0BB3  07A9               	addwf	sprintf@ap^(0+128),f
  2151  0BB4                     l4030:	
  2152                           
  2153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  2154  0BB4  0838               	movf	sprintf@fval^(0+128),w
  2155  0BB5  00F3               	movwf	___ftge@ff1
  2156  0BB6  0839               	movf	(sprintf@fval+1)^(0+128),w
  2157  0BB7  00F4               	movwf	___ftge@ff1+1
  2158  0BB8  083A               	movf	(sprintf@fval+2)^(0+128),w
  2159  0BB9  00F5               	movwf	___ftge@ff1+2
  2160  0BBA  3000               	movlw	0
  2161  0BBB  00F6               	movwf	___ftge@ff2
  2162  0BBC  3000               	movlw	0
  2163  0BBD  00F7               	movwf	___ftge@ff2+1
  2164  0BBE  3000               	movlw	0
  2165  0BBF  00F8               	movwf	___ftge@ff2+2
  2166  0BC0  160A  158A  265D  120A  158A  	fcall	___ftge
  2167  0BC5  1803               	btfsc	3,0
  2168  0BC6  2BC8               	goto	u6131
  2169  0BC7  2BC9               	goto	u6130
  2170  0BC8                     u6131:	
  2171  0BC8  2BE2               	goto	l4036
  2172  0BC9                     u6130:	
  2173  0BC9                     l4032:	
  2174                           
  2175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  2176  0BC9  1683               	bsf	3,5	;RP0=1, select bank1
  2177  0BCA  1303               	bcf	3,6	;RP1=0, select bank1
  2178  0BCB  0838               	movf	sprintf@fval^(0+128),w
  2179  0BCC  00F3               	movwf	___ftneg@f1
  2180  0BCD  0839               	movf	(sprintf@fval+1)^(0+128),w
  2181  0BCE  00F4               	movwf	___ftneg@f1+1
  2182  0BCF  083A               	movf	(sprintf@fval+2)^(0+128),w
  2183  0BD0  00F5               	movwf	___ftneg@f1+2
  2184  0BD1  160A  118A  20BE  120A  158A  	fcall	___ftneg
  2185  0BD6  0873               	movf	?___ftneg,w
  2186  0BD7  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0BD8  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0BD9  00B8               	movwf	sprintf@fval^(0+128)
  2189  0BDA  0874               	movf	?___ftneg+1,w
  2190  0BDB  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2191  0BDC  0875               	movf	?___ftneg+2,w
  2192  0BDD  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2193  0BDE                     l4034:	
  2194                           
  2195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  2196  0BDE  3003               	movlw	3
  2197  0BDF  04AA               	iorwf	sprintf@flag^(0+128),f
  2198  0BE0  3000               	movlw	0
  2199  0BE1  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  2200  0BE2                     l4036:	
  2201                           
  2202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  2203  0BE2  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0BE3  1303               	bcf	3,6	;RP1=0, select bank1
  2205  0BE4  01B6               	clrf	sprintf@eexp^(0+128)
  2206  0BE5  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  2207  0BE6                     l4038:	
  2208                           
  2209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  2210  0BE6  083A               	movf	(sprintf@fval+2)^(0+128),w
  2211  0BE7  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  2212  0BE8  0438               	iorwf	sprintf@fval^(0+128),w
  2213  0BE9  1903               	skipnz
  2214  0BEA  2BEC               	goto	u6141
  2215  0BEB  2BED               	goto	u6140
  2216  0BEC                     u6141:	
  2217  0BEC  2CE7               	goto	l4064
  2218  0BED                     u6140:	
  2219  0BED                     l4040:	
  2220                           
  2221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2222  0BED  30B8               	movlw	low (sprintf@fval| 0)
  2223  0BEE  0084               	movwf	4
  2224  0BEF  1383               	bcf	3,7	;select IRP bank1
  2225  0BF0  0800               	movf	0,w
  2226  0BF1  00A0               	movwf	??_sprintf^(0+128)
  2227  0BF2  0A84               	incf	4,f
  2228  0BF3  0800               	movf	0,w
  2229  0BF4  00A1               	movwf	(??_sprintf^(0+128)+1)
  2230  0BF5  0A84               	incf	4,f
  2231  0BF6  0800               	movf	0,w
  2232  0BF7  00A2               	movwf	(??_sprintf^(0+128)+2)
  2233  0BF8  0A84               	incf	4,f
  2234  0BF9  0800               	movf	0,w
  2235  0BFA  00A3               	movwf	(??_sprintf^(0+128)+3)
  2236  0BFB  300F               	movlw	15
  2237  0BFC                     u6155:	
  2238  0BFC  1003               	clrc
  2239  0BFD  0CA3               	rrf	(??_sprintf^(0+128)+3),f
  2240  0BFE  0CA2               	rrf	(??_sprintf^(0+128)+2),f
  2241  0BFF  0CA1               	rrf	(??_sprintf^(0+128)+1),f
  2242  0C00  0CA0               	rrf	??_sprintf^(0+128),f
  2243  0C01                     u6150:	
  2244  0C01  3EFF               	addlw	-1
  2245  0C02  1D03               	skipz
  2246  0C03  2BFC               	goto	u6155
  2247  0C04  30FF               	movlw	255
  2248  0C05  0520               	andwf	??_sprintf^(0+128),w
  2249  0C06  00A4               	movwf	(??_sprintf+4)^(0+128)
  2250  0C07  3000               	movlw	0
  2251  0C08  0521               	andwf	(??_sprintf+1)^(0+128),w
  2252  0C09  00A5               	movwf	(??_sprintf+5)^(0+128)
  2253  0C0A  0824               	movf	(??_sprintf+4)^(0+128),w
  2254  0C0B  3E82               	addlw	130
  2255  0C0C  00B6               	movwf	sprintf@eexp^(0+128)
  2256  0C0D  0825               	movf	(??_sprintf+5)^(0+128),w
  2257  0C0E  1803               	skipnc
  2258  0C0F  3E01               	addlw	1
  2259  0C10  3EFF               	addlw	255
  2260  0C11  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2261  0C12                     l4042:	
  2262                           
  2263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2264  0C12  30FF               	movlw	255
  2265  0C13  07B6               	addwf	sprintf@eexp^(0+128),f
  2266  0C14  1803               	skipnc
  2267  0C15  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2268  0C16  30FF               	movlw	255
  2269  0C17  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2270  0C18                     l4044:	
  2271                           
  2272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2273  0C18  3003               	movlw	3
  2274  0C19  00F3               	movwf	___wmul@multiplier
  2275  0C1A  3000               	movlw	0
  2276  0C1B  00F4               	movwf	___wmul@multiplier+1
  2277  0C1C  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2278  0C1D  00F6               	movwf	___wmul@multiplicand+1
  2279  0C1E  0836               	movf	sprintf@eexp^(0+128),w
  2280  0C1F  00F5               	movwf	___wmul@multiplicand
  2281  0C20  160A  158A  2530  120A  158A  	fcall	___wmul
  2282  0C25  0874               	movf	?___wmul+1,w
  2283  0C26  1683               	bsf	3,5	;RP0=1, select bank1
  2284  0C27  1303               	bcf	3,6	;RP1=0, select bank1
  2285  0C28  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2286  0C29  0873               	movf	?___wmul,w
  2287  0C2A  00B6               	movwf	sprintf@eexp^(0+128)
  2288  0C2B                     l4046:	
  2289                           
  2290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2291  0C2B  300A               	movlw	10
  2292  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0C2E  00A0               	movwf	___awdiv@divisor
  2295  0C2F  3000               	movlw	0
  2296  0C30  00A1               	movwf	___awdiv@divisor+1
  2297  0C31  1683               	bsf	3,5	;RP0=1, select bank1
  2298  0C32  1303               	bcf	3,6	;RP1=0, select bank1
  2299  0C33  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2300  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0C35  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0C36  00A3               	movwf	___awdiv@dividend+1
  2303  0C37  1683               	bsf	3,5	;RP0=1, select bank1
  2304  0C38  1303               	bcf	3,6	;RP1=0, select bank1
  2305  0C39  0836               	movf	sprintf@eexp^(0+128),w
  2306  0C3A  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0C3B  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0C3C  00A2               	movwf	___awdiv@dividend
  2309  0C3D  160A  118A  2176  120A  158A  	fcall	___awdiv
  2310  0C42  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0C43  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0C44  0821               	movf	?___awdiv+1,w
  2313  0C45  1683               	bsf	3,5	;RP0=1, select bank1
  2314  0C46  1303               	bcf	3,6	;RP1=0, select bank1
  2315  0C47  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  2316  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0C4A  0820               	movf	?___awdiv,w
  2319  0C4B  1683               	bsf	3,5	;RP0=1, select bank1
  2320  0C4C  1303               	bcf	3,6	;RP1=0, select bank1
  2321  0C4D  00B6               	movwf	sprintf@eexp^(0+128)
  2322  0C4E                     l4048:	
  2323                           
  2324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2325  0C4E  1FB7               	btfss	(sprintf@eexp+1)^(0+128),7
  2326  0C4F  2C51               	goto	u6161
  2327  0C50  2C52               	goto	u6160
  2328  0C51                     u6161:	
  2329  0C51  2C58               	goto	l4052
  2330  0C52                     u6160:	
  2331  0C52                     l4050:	
  2332                           
  2333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2334  0C52  30FF               	movlw	255
  2335  0C53  07B6               	addwf	sprintf@eexp^(0+128),f
  2336  0C54  1803               	skipnc
  2337  0C55  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2338  0C56  30FF               	movlw	255
  2339  0C57  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2340  0C58                     l4052:	
  2341                           
  2342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2343  0C58  0336               	decf	sprintf@eexp^(0+128),w
  2344  0C59  3AFF               	xorlw	255
  2345  0C5A  120A  158A  2545  120A  158A  	fcall	_scale
  2346  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0C61  083D               	movf	?_scale,w
  2349  0C62  1683               	bsf	3,5	;RP0=1, select bank1
  2350  0C63  1303               	bcf	3,6	;RP1=0, select bank1
  2351  0C64  00AE               	movwf	sprintf@tmpval^(0+128)
  2352  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0C67  083E               	movf	?_scale+1,w
  2355  0C68  1683               	bsf	3,5	;RP0=1, select bank1
  2356  0C69  1303               	bcf	3,6	;RP1=0, select bank1
  2357  0C6A  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2358  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0C6D  083F               	movf	?_scale+2,w
  2361  0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  2362  0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  2363  0C70  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2364  0C71                     l4054:	
  2365                           
  2366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2367  0C71  0838               	movf	sprintf@fval^(0+128),w
  2368  0C72  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0C73  1303               	bcf	3,6	;RP1=0, select bank0
  2370  0C74  00AD               	movwf	___ftmul@f1
  2371  0C75  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0C76  1303               	bcf	3,6	;RP1=0, select bank1
  2373  0C77  0839               	movf	(sprintf@fval+1)^(0+128),w
  2374  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  2376  0C7A  00AE               	movwf	___ftmul@f1+1
  2377  0C7B  1683               	bsf	3,5	;RP0=1, select bank1
  2378  0C7C  1303               	bcf	3,6	;RP1=0, select bank1
  2379  0C7D  083A               	movf	(sprintf@fval+2)^(0+128),w
  2380  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  2381  0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  2382  0C80  00AF               	movwf	___ftmul@f1+2
  2383  0C81  1683               	bsf	3,5	;RP0=1, select bank1
  2384  0C82  1303               	bcf	3,6	;RP1=0, select bank1
  2385  0C83  082E               	movf	sprintf@tmpval^(0+128),w
  2386  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0C86  00B0               	movwf	___ftmul@f2
  2389  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  2390  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  2391  0C89  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2392  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  2394  0C8C  00B1               	movwf	___ftmul@f2+1
  2395  0C8D  1683               	bsf	3,5	;RP0=1, select bank1
  2396  0C8E  1303               	bcf	3,6	;RP1=0, select bank1
  2397  0C8F  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2398  0C90  1283               	bcf	3,5	;RP0=0, select bank0
  2399  0C91  1303               	bcf	3,6	;RP1=0, select bank0
  2400  0C92  00B2               	movwf	___ftmul@f2+2
  2401  0C93  160A  118A  2524  120A  158A  	fcall	___ftmul
  2402  0C98  1283               	bcf	3,5	;RP0=0, select bank0
  2403  0C99  1303               	bcf	3,6	;RP1=0, select bank0
  2404  0C9A  082D               	movf	?___ftmul,w
  2405  0C9B  1683               	bsf	3,5	;RP0=1, select bank1
  2406  0C9C  1303               	bcf	3,6	;RP1=0, select bank1
  2407  0C9D  00AE               	movwf	sprintf@tmpval^(0+128)
  2408  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0CA0  082E               	movf	?___ftmul+1,w
  2411  0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  2412  0CA2  1303               	bcf	3,6	;RP1=0, select bank1
  2413  0CA3  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  2414  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  2415  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  2416  0CA6  082F               	movf	?___ftmul+2,w
  2417  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  2418  0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  2419  0CA9  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  2420  0CAA                     l4056:	
  2421                           
  2422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2423  0CAA  082E               	movf	sprintf@tmpval^(0+128),w
  2424  0CAB  00F3               	movwf	___ftge@ff1
  2425  0CAC  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2426  0CAD  00F4               	movwf	___ftge@ff1+1
  2427  0CAE  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2428  0CAF  00F5               	movwf	___ftge@ff1+2
  2429  0CB0  3000               	movlw	0
  2430  0CB1  00F6               	movwf	___ftge@ff2
  2431  0CB2  3080               	movlw	128
  2432  0CB3  00F7               	movwf	___ftge@ff2+1
  2433  0CB4  303F               	movlw	63
  2434  0CB5  00F8               	movwf	___ftge@ff2+2
  2435  0CB6  160A  158A  265D  120A  158A  	fcall	___ftge
  2436  0CBB  1803               	btfsc	3,0
  2437  0CBC  2CBE               	goto	u6171
  2438  0CBD  2CBF               	goto	u6170
  2439  0CBE                     u6171:	
  2440  0CBE  2CC8               	goto	l4060
  2441  0CBF                     u6170:	
  2442  0CBF                     l4058:	
  2443                           
  2444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2445  0CBF  30FF               	movlw	255
  2446  0CC0  1683               	bsf	3,5	;RP0=1, select bank1
  2447  0CC1  1303               	bcf	3,6	;RP1=0, select bank1
  2448  0CC2  07B6               	addwf	sprintf@eexp^(0+128),f
  2449  0CC3  1803               	skipnc
  2450  0CC4  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2451  0CC5  30FF               	movlw	255
  2452  0CC6  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2453  0CC7  2CE7               	goto	l4064
  2454  0CC8                     l4060:	
  2455  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  2456  0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  2457  0CCA  082E               	movf	sprintf@tmpval^(0+128),w
  2458  0CCB  00F3               	movwf	___ftge@ff1
  2459  0CCC  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  2460  0CCD  00F4               	movwf	___ftge@ff1+1
  2461  0CCE  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  2462  0CCF  00F5               	movwf	___ftge@ff1+2
  2463  0CD0  3000               	movlw	0
  2464  0CD1  00F6               	movwf	___ftge@ff2
  2465  0CD2  3020               	movlw	32
  2466  0CD3  00F7               	movwf	___ftge@ff2+1
  2467  0CD4  3041               	movlw	65
  2468  0CD5  00F8               	movwf	___ftge@ff2+2
  2469  0CD6  160A  158A  265D  120A  158A  	fcall	___ftge
  2470  0CDB  1C03               	btfss	3,0
  2471  0CDC  2CDE               	goto	u6181
  2472  0CDD  2CDF               	goto	u6180
  2473  0CDE                     u6181:	
  2474  0CDE  2CE7               	goto	l4064
  2475  0CDF                     u6180:	
  2476  0CDF                     l4062:	
  2477                           
  2478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2479  0CDF  3001               	movlw	1
  2480  0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  2481  0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  2482  0CE2  07B6               	addwf	sprintf@eexp^(0+128),f
  2483  0CE3  1803               	skipnc
  2484  0CE4  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  2485  0CE5  3000               	movlw	0
  2486  0CE6  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  2487  0CE7                     l4064:	
  2488                           
  2489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2490  0CE7  1683               	bsf	3,5	;RP0=1, select bank1
  2491  0CE8  1303               	bcf	3,6	;RP1=0, select bank1
  2492  0CE9  083D               	movf	(sprintf@prec+1)^(0+128),w
  2493  0CEA  3A80               	xorlw	128
  2494  0CEB  00FF               	movwf	btemp+1
  2495  0CEC  3080               	movlw	128
  2496  0CED  027F               	subwf	btemp+1,w
  2497  0CEE  1D03               	skipz
  2498  0CEF  2CF2               	goto	u6195
  2499  0CF0  300D               	movlw	13
  2500  0CF1  023C               	subwf	sprintf@prec^(0+128),w
  2501  0CF2                     u6195:	
  2502  0CF2  1803               	skipnc
  2503  0CF3  2CF5               	goto	u6191
  2504  0CF4  2CF6               	goto	u6190
  2505  0CF5                     u6191:	
  2506  0CF5  2D2F               	goto	l4068
  2507  0CF6                     u6190:	
  2508  0CF6                     l4066:	
  2509                           
  2510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2511  0CF6  1683               	bsf	3,5	;RP0=1, select bank1
  2512  0CF7  1303               	bcf	3,6	;RP1=0, select bank1
  2513  0CF8  083C               	movf	sprintf@prec^(0+128),w
  2514  0CF9  120A  118A  2638  120A  158A  	fcall	_fround
  2515  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  2516  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  2517  0D00  083D               	movf	?_fround,w
  2518  0D01  00CD               	movwf	___ftadd@f1
  2519  0D02  083E               	movf	?_fround+1,w
  2520  0D03  00CE               	movwf	___ftadd@f1+1
  2521  0D04  083F               	movf	?_fround+2,w
  2522  0D05  00CF               	movwf	___ftadd@f1+2
  2523  0D06  1683               	bsf	3,5	;RP0=1, select bank1
  2524  0D07  1303               	bcf	3,6	;RP1=0, select bank1
  2525  0D08  0838               	movf	sprintf@fval^(0+128),w
  2526  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0D0B  00D0               	movwf	___ftadd@f2
  2529  0D0C  1683               	bsf	3,5	;RP0=1, select bank1
  2530  0D0D  1303               	bcf	3,6	;RP1=0, select bank1
  2531  0D0E  0839               	movf	(sprintf@fval+1)^(0+128),w
  2532  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0D10  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0D11  00D1               	movwf	___ftadd@f2+1
  2535  0D12  1683               	bsf	3,5	;RP0=1, select bank1
  2536  0D13  1303               	bcf	3,6	;RP1=0, select bank1
  2537  0D14  083A               	movf	(sprintf@fval+2)^(0+128),w
  2538  0D15  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0D16  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0D17  00D2               	movwf	___ftadd@f2+2
  2541  0D18  120A  158A  2155  120A  158A  	fcall	___ftadd
  2542  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0D1F  084D               	movf	?___ftadd,w
  2545  0D20  1683               	bsf	3,5	;RP0=1, select bank1
  2546  0D21  1303               	bcf	3,6	;RP1=0, select bank1
  2547  0D22  00B8               	movwf	sprintf@fval^(0+128)
  2548  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0D25  084E               	movf	?___ftadd+1,w
  2551  0D26  1683               	bsf	3,5	;RP0=1, select bank1
  2552  0D27  1303               	bcf	3,6	;RP1=0, select bank1
  2553  0D28  00B9               	movwf	(sprintf@fval+1)^(0+128)
  2554  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0D2B  084F               	movf	?___ftadd+2,w
  2557  0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  2558  0D2D  1303               	bcf	3,6	;RP1=0, select bank1
  2559  0D2E  00BA               	movwf	(sprintf@fval+2)^(0+128)
  2560  0D2F                     l4068:	
  2561                           
  2562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2563  0D2F  1683               	bsf	3,5	;RP0=1, select bank1
  2564  0D30  1303               	bcf	3,6	;RP1=0, select bank1
  2565  0D31  0837               	movf	(sprintf@eexp+1)^(0+128),w
  2566  0D32  3A80               	xorlw	128
  2567  0D33  00FF               	movwf	btemp+1
  2568  0D34  3080               	movlw	128
  2569  0D35  027F               	subwf	btemp+1,w
  2570  0D36  1D03               	skipz
  2571  0D37  2D3A               	goto	u6205
  2572  0D38  300A               	movlw	10
  2573  0D39  0236               	subwf	sprintf@eexp^(0+128),w
  2574  0D3A                     u6205:	
  2575  0D3A  1803               	skipnc
  2576  0D3B  2D3F               	goto	u6201
  2577  0D3C  120A  118A  2821   	goto	u6200
  2578  0D3F                     u6201:	
  2579  0D3F  120A  118A  2858   	goto	l4076
  2580  0D42                     L3:	
  2581  0D42                     L2:	
  2582  0D42  120A  118A  2E33   	ljmp	l4256
  2583                           
  2584                           	psect	text2
  2585  0D45                     __ptext2:	
  2586 ;; *************** function _scale *****************
  2587 ;; Defined at:
  2588 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  scl             1    wreg     char 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  scl             1   37[BANK0 ] char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  3   29[BANK0 ] char 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2602 ;;      Params:         0       3       0       0       0
  2603 ;;      Locals:         0       4       0       0       0
  2604 ;;      Temps:          0       2       0       0       0
  2605 ;;      Totals:         0       9       0       0       0
  2606 ;;Total ram usage:        9 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    4
  2609 ;; This function calls:
  2610 ;;		___awdiv
  2611 ;;		___awmod
  2612 ;;		___bmul
  2613 ;;		___ftmul
  2614 ;; This function is called by:
  2615 ;;		_sprintf
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           
  2620                           ;psect for function _scale
  2621  0D45                     _scale:	
  2622                           
  2623                           ;incstack = 0
  2624                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2625                           ;scale@scl stored from wreg
  2626  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2628  0D47  00C5               	movwf	scale@scl
  2629  0D48                     l3754:	
  2630                           
  2631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  2632  0D48  1FC5               	btfss	scale@scl,7
  2633  0D49  2D4B               	goto	u5611
  2634  0D4A  2D4C               	goto	u5610
  2635  0D4B                     u5611:	
  2636  0D4B  2EA7               	goto	l3776
  2637  0D4C                     u5610:	
  2638  0D4C                     l3756:	
  2639                           
  2640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  2641  0D4C  09C5               	comf	scale@scl,f
  2642  0D4D  0AC5               	incf	scale@scl,f
  2643  0D4E                     l3758:	
  2644                           
  2645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  2646  0D4E  0845               	movf	scale@scl,w
  2647  0D4F  3A80               	xorlw	128
  2648  0D50  3E12               	addlw	-238
  2649  0D51  1C03               	skipc
  2650  0D52  2D54               	goto	u5621
  2651  0D53  2D55               	goto	u5620
  2652  0D54                     u5621:	
  2653  0D54  2E13               	goto	l3766
  2654  0D55                     u5620:	
  2655  0D55                     l3760:	
  2656                           
  2657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2658  0D55  3003               	movlw	3
  2659  0D56  00C0               	movwf	??_scale
  2660  0D57  0840               	movf	??_scale,w
  2661  0D58  00A9               	movwf	___bmul@multiplicand
  2662  0D59  0845               	movf	scale@scl,w
  2663  0D5A  00F5               	movwf	___awmod@dividend
  2664  0D5B  01F6               	clrf	___awmod@dividend+1
  2665  0D5C  1BF5               	btfsc	___awmod@dividend,7
  2666  0D5D  03F6               	decf	___awmod@dividend+1,f
  2667  0D5E  3064               	movlw	100
  2668  0D5F  00F3               	movwf	___awmod@divisor
  2669  0D60  3000               	movlw	0
  2670  0D61  00F4               	movwf	___awmod@divisor+1
  2671  0D62  160A  158A  27A7  120A  158A  	fcall	___awmod
  2672  0D67  0874               	movf	?___awmod+1,w
  2673  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0D6A  00A3               	movwf	___awdiv@dividend+1
  2676  0D6B  0873               	movf	?___awmod,w
  2677  0D6C  00A2               	movwf	___awdiv@dividend
  2678  0D6D  300A               	movlw	10
  2679  0D6E  00A0               	movwf	___awdiv@divisor
  2680  0D6F  3000               	movlw	0
  2681  0D70  00A1               	movwf	___awdiv@divisor+1
  2682  0D71  160A  118A  2176  120A  158A  	fcall	___awdiv
  2683  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  2684  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  2685  0D78  0820               	movf	?___awdiv,w
  2686  0D79  160A  158A  24D4  120A  158A  	fcall	___bmul
  2687  0D7E  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2688  0D7F  0084               	movwf	4
  2689  0D80  160A  118A  200A  120A  158A  	fcall	stringdir
  2690  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0D86  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0D87  00AD               	movwf	___ftmul@f1
  2693  0D88  160A  118A  200A  120A  158A  	fcall	stringdir
  2694  0D8D  00AE               	movwf	___ftmul@f1+1
  2695  0D8E  160A  118A  200A  120A  158A  	fcall	stringdir
  2696  0D93  00AF               	movwf	___ftmul@f1+2
  2697  0D94  3003               	movlw	3
  2698  0D95  00C1               	movwf	??_scale+1
  2699  0D96  0841               	movf	??_scale+1,w
  2700  0D97  00A9               	movwf	___bmul@multiplicand
  2701  0D98  0845               	movf	scale@scl,w
  2702  0D99  00A2               	movwf	___awdiv@dividend
  2703  0D9A  01A3               	clrf	___awdiv@dividend+1
  2704  0D9B  1BA2               	btfsc	___awdiv@dividend,7
  2705  0D9C  03A3               	decf	___awdiv@dividend+1,f
  2706  0D9D  3064               	movlw	100
  2707  0D9E  00A0               	movwf	___awdiv@divisor
  2708  0D9F  3000               	movlw	0
  2709  0DA0  00A1               	movwf	___awdiv@divisor+1
  2710  0DA1  160A  118A  2176  120A  158A  	fcall	___awdiv
  2711  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0DA8  0820               	movf	?___awdiv,w
  2714  0DA9  160A  158A  24D4  120A  158A  	fcall	___bmul
  2715  0DAE  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  2716  0DAF  0084               	movwf	4
  2717  0DB0  160A  118A  200A  120A  158A  	fcall	stringdir
  2718  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0DB7  00B0               	movwf	___ftmul@f2
  2721  0DB8  160A  118A  200A  120A  158A  	fcall	stringdir
  2722  0DBD  00B1               	movwf	___ftmul@f2+1
  2723  0DBE  160A  118A  200A  120A  158A  	fcall	stringdir
  2724  0DC3  00B2               	movwf	___ftmul@f2+2
  2725  0DC4  160A  118A  2524  120A  158A  	fcall	___ftmul
  2726  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  2727  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  2728  0DCB  082D               	movf	?___ftmul,w
  2729  0DCC  00C2               	movwf	_scale$1066
  2730  0DCD  082E               	movf	?___ftmul+1,w
  2731  0DCE  00C3               	movwf	_scale$1066+1
  2732  0DCF  082F               	movf	?___ftmul+2,w
  2733  0DD0  00C4               	movwf	_scale$1066+2
  2734                           
  2735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2736  0DD1  3003               	movlw	3
  2737  0DD2  00C0               	movwf	??_scale
  2738  0DD3  0840               	movf	??_scale,w
  2739  0DD4  00A9               	movwf	___bmul@multiplicand
  2740  0DD5  0845               	movf	scale@scl,w
  2741  0DD6  00F5               	movwf	___awmod@dividend
  2742  0DD7  01F6               	clrf	___awmod@dividend+1
  2743  0DD8  1BF5               	btfsc	___awmod@dividend,7
  2744  0DD9  03F6               	decf	___awmod@dividend+1,f
  2745  0DDA  300A               	movlw	10
  2746  0DDB  00F3               	movwf	___awmod@divisor
  2747  0DDC  3000               	movlw	0
  2748  0DDD  00F4               	movwf	___awmod@divisor+1
  2749  0DDE  160A  158A  27A7  120A  158A  	fcall	___awmod
  2750  0DE3  0873               	movf	?___awmod,w
  2751  0DE4  160A  158A  24D4  120A  158A  	fcall	___bmul
  2752  0DE9  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2753  0DEA  0084               	movwf	4
  2754  0DEB  160A  118A  200A  120A  158A  	fcall	stringdir
  2755  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  2756  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  2757  0DF2  00AD               	movwf	___ftmul@f1
  2758  0DF3  160A  118A  200A  120A  158A  	fcall	stringdir
  2759  0DF8  00AE               	movwf	___ftmul@f1+1
  2760  0DF9  160A  118A  200A  120A  158A  	fcall	stringdir
  2761  0DFE  00AF               	movwf	___ftmul@f1+2
  2762  0DFF  0842               	movf	_scale$1066,w
  2763  0E00  00B0               	movwf	___ftmul@f2
  2764  0E01  0843               	movf	_scale$1066+1,w
  2765  0E02  00B1               	movwf	___ftmul@f2+1
  2766  0E03  0844               	movf	_scale$1066+2,w
  2767  0E04  00B2               	movwf	___ftmul@f2+2
  2768  0E05  160A  118A  2524  120A  158A  	fcall	___ftmul
  2769  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0E0C  082D               	movf	?___ftmul,w
  2772  0E0D  00BD               	movwf	?_scale
  2773  0E0E  082E               	movf	?___ftmul+1,w
  2774  0E0F  00BE               	movwf	?_scale+1
  2775  0E10  082F               	movf	?___ftmul+2,w
  2776  0E11  00BF               	movwf	?_scale+2
  2777  0E12  2FFF               	goto	l354
  2778  0E13                     l3766:	
  2779  0E13  0845               	movf	scale@scl,w
  2780  0E14  3A80               	xorlw	128
  2781  0E15  3E75               	addlw	-139
  2782  0E16  1C03               	skipc
  2783  0E17  2E19               	goto	u5631
  2784  0E18  2E1A               	goto	u5630
  2785  0E19                     u5631:	
  2786  0E19  2E86               	goto	l3772
  2787  0E1A                     u5630:	
  2788  0E1A                     l3768:	
  2789                           
  2790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2791  0E1A  3003               	movlw	3
  2792  0E1B  00C0               	movwf	??_scale
  2793  0E1C  0840               	movf	??_scale,w
  2794  0E1D  00A9               	movwf	___bmul@multiplicand
  2795  0E1E  0845               	movf	scale@scl,w
  2796  0E1F  00F5               	movwf	___awmod@dividend
  2797  0E20  01F6               	clrf	___awmod@dividend+1
  2798  0E21  1BF5               	btfsc	___awmod@dividend,7
  2799  0E22  03F6               	decf	___awmod@dividend+1,f
  2800  0E23  300A               	movlw	10
  2801  0E24  00F3               	movwf	___awmod@divisor
  2802  0E25  3000               	movlw	0
  2803  0E26  00F4               	movwf	___awmod@divisor+1
  2804  0E27  160A  158A  27A7  120A  158A  	fcall	___awmod
  2805  0E2C  0873               	movf	?___awmod,w
  2806  0E2D  160A  158A  24D4  120A  158A  	fcall	___bmul
  2807  0E32  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2808  0E33  0084               	movwf	4
  2809  0E34  160A  118A  200A  120A  158A  	fcall	stringdir
  2810  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0E3B  00AD               	movwf	___ftmul@f1
  2813  0E3C  160A  118A  200A  120A  158A  	fcall	stringdir
  2814  0E41  00AE               	movwf	___ftmul@f1+1
  2815  0E42  160A  118A  200A  120A  158A  	fcall	stringdir
  2816  0E47  00AF               	movwf	___ftmul@f1+2
  2817  0E48  3003               	movlw	3
  2818  0E49  00C1               	movwf	??_scale+1
  2819  0E4A  0841               	movf	??_scale+1,w
  2820  0E4B  00A9               	movwf	___bmul@multiplicand
  2821  0E4C  0845               	movf	scale@scl,w
  2822  0E4D  00A2               	movwf	___awdiv@dividend
  2823  0E4E  01A3               	clrf	___awdiv@dividend+1
  2824  0E4F  1BA2               	btfsc	___awdiv@dividend,7
  2825  0E50  03A3               	decf	___awdiv@dividend+1,f
  2826  0E51  300A               	movlw	10
  2827  0E52  00A0               	movwf	___awdiv@divisor
  2828  0E53  3000               	movlw	0
  2829  0E54  00A1               	movwf	___awdiv@divisor+1
  2830  0E55  160A  118A  2176  120A  158A  	fcall	___awdiv
  2831  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  2833  0E5C  0820               	movf	?___awdiv,w
  2834  0E5D  160A  158A  24D4  120A  158A  	fcall	___bmul
  2835  0E62  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  2836  0E63  0084               	movwf	4
  2837  0E64  160A  118A  200A  120A  158A  	fcall	stringdir
  2838  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  2840  0E6B  00B0               	movwf	___ftmul@f2
  2841  0E6C  160A  118A  200A  120A  158A  	fcall	stringdir
  2842  0E71  00B1               	movwf	___ftmul@f2+1
  2843  0E72  160A  118A  200A  120A  158A  	fcall	stringdir
  2844  0E77  00B2               	movwf	___ftmul@f2+2
  2845  0E78  160A  118A  2524  120A  158A  	fcall	___ftmul
  2846  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0E7F  082D               	movf	?___ftmul,w
  2849  0E80  00BD               	movwf	?_scale
  2850  0E81  082E               	movf	?___ftmul+1,w
  2851  0E82  00BE               	movwf	?_scale+1
  2852  0E83  082F               	movf	?___ftmul+2,w
  2853  0E84  00BF               	movwf	?_scale+2
  2854  0E85  2FFF               	goto	l354
  2855  0E86                     l3772:	
  2856                           
  2857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  2858  0E86  3003               	movlw	3
  2859  0E87  00C0               	movwf	??_scale
  2860  0E88  0840               	movf	??_scale,w
  2861  0E89  00A9               	movwf	___bmul@multiplicand
  2862  0E8A  0845               	movf	scale@scl,w
  2863  0E8B  160A  158A  24D4  120A  158A  	fcall	___bmul
  2864  0E90  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2865  0E91  0084               	movwf	4
  2866  0E92  160A  118A  200A  120A  158A  	fcall	stringdir
  2867  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0E99  00BD               	movwf	?_scale
  2870  0E9A  160A  118A  200A  120A  158A  	fcall	stringdir
  2871  0E9F  00BE               	movwf	?_scale+1
  2872  0EA0  160A  118A  200A  120A  158A  	fcall	stringdir
  2873  0EA5  00BF               	movwf	?_scale+2
  2874  0EA6  2FFF               	goto	l354
  2875  0EA7                     l3776:	
  2876                           
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  2878  0EA7  0845               	movf	scale@scl,w
  2879  0EA8  3A80               	xorlw	128
  2880  0EA9  3E12               	addlw	-238
  2881  0EAA  1C03               	skipc
  2882  0EAB  2EAD               	goto	u5641
  2883  0EAC  2EAE               	goto	u5640
  2884  0EAD                     u5641:	
  2885  0EAD  2F6C               	goto	l3784
  2886  0EAE                     u5640:	
  2887  0EAE                     l3778:	
  2888                           
  2889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  2890  0EAE  3003               	movlw	3
  2891  0EAF  00C0               	movwf	??_scale
  2892  0EB0  0840               	movf	??_scale,w
  2893  0EB1  00A9               	movwf	___bmul@multiplicand
  2894  0EB2  0845               	movf	scale@scl,w
  2895  0EB3  00F5               	movwf	___awmod@dividend
  2896  0EB4  01F6               	clrf	___awmod@dividend+1
  2897  0EB5  1BF5               	btfsc	___awmod@dividend,7
  2898  0EB6  03F6               	decf	___awmod@dividend+1,f
  2899  0EB7  3064               	movlw	100
  2900  0EB8  00F3               	movwf	___awmod@divisor
  2901  0EB9  3000               	movlw	0
  2902  0EBA  00F4               	movwf	___awmod@divisor+1
  2903  0EBB  160A  158A  27A7  120A  158A  	fcall	___awmod
  2904  0EC0  0874               	movf	?___awmod+1,w
  2905  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0EC3  00A3               	movwf	___awdiv@dividend+1
  2908  0EC4  0873               	movf	?___awmod,w
  2909  0EC5  00A2               	movwf	___awdiv@dividend
  2910  0EC6  300A               	movlw	10
  2911  0EC7  00A0               	movwf	___awdiv@divisor
  2912  0EC8  3000               	movlw	0
  2913  0EC9  00A1               	movwf	___awdiv@divisor+1
  2914  0ECA  160A  118A  2176  120A  158A  	fcall	___awdiv
  2915  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0ED1  0820               	movf	?___awdiv,w
  2918  0ED2  160A  158A  24D4  120A  158A  	fcall	___bmul
  2919  0ED7  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  2920  0ED8  0084               	movwf	4
  2921  0ED9  160A  118A  200A  120A  158A  	fcall	stringdir
  2922  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0EE0  00AD               	movwf	___ftmul@f1
  2925  0EE1  160A  118A  200A  120A  158A  	fcall	stringdir
  2926  0EE6  00AE               	movwf	___ftmul@f1+1
  2927  0EE7  160A  118A  200A  120A  158A  	fcall	stringdir
  2928  0EEC  00AF               	movwf	___ftmul@f1+2
  2929  0EED  3003               	movlw	3
  2930  0EEE  00C1               	movwf	??_scale+1
  2931  0EEF  0841               	movf	??_scale+1,w
  2932  0EF0  00A9               	movwf	___bmul@multiplicand
  2933  0EF1  0845               	movf	scale@scl,w
  2934  0EF2  00A2               	movwf	___awdiv@dividend
  2935  0EF3  01A3               	clrf	___awdiv@dividend+1
  2936  0EF4  1BA2               	btfsc	___awdiv@dividend,7
  2937  0EF5  03A3               	decf	___awdiv@dividend+1,f
  2938  0EF6  3064               	movlw	100
  2939  0EF7  00A0               	movwf	___awdiv@divisor
  2940  0EF8  3000               	movlw	0
  2941  0EF9  00A1               	movwf	___awdiv@divisor+1
  2942  0EFA  160A  118A  2176  120A  158A  	fcall	___awdiv
  2943  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0F01  0820               	movf	?___awdiv,w
  2946  0F02  160A  158A  24D4  120A  158A  	fcall	___bmul
  2947  0F07  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  2948  0F08  0084               	movwf	4
  2949  0F09  160A  118A  200A  120A  158A  	fcall	stringdir
  2950  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2951  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2952  0F10  00B0               	movwf	___ftmul@f2
  2953  0F11  160A  118A  200A  120A  158A  	fcall	stringdir
  2954  0F16  00B1               	movwf	___ftmul@f2+1
  2955  0F17  160A  118A  200A  120A  158A  	fcall	stringdir
  2956  0F1C  00B2               	movwf	___ftmul@f2+2
  2957  0F1D  160A  118A  2524  120A  158A  	fcall	___ftmul
  2958  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0F24  082D               	movf	?___ftmul,w
  2961  0F25  00C2               	movwf	_scale$1066
  2962  0F26  082E               	movf	?___ftmul+1,w
  2963  0F27  00C3               	movwf	_scale$1066+1
  2964  0F28  082F               	movf	?___ftmul+2,w
  2965  0F29  00C4               	movwf	_scale$1066+2
  2966                           
  2967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  2968  0F2A  3003               	movlw	3
  2969  0F2B  00C0               	movwf	??_scale
  2970  0F2C  0840               	movf	??_scale,w
  2971  0F2D  00A9               	movwf	___bmul@multiplicand
  2972  0F2E  0845               	movf	scale@scl,w
  2973  0F2F  00F5               	movwf	___awmod@dividend
  2974  0F30  01F6               	clrf	___awmod@dividend+1
  2975  0F31  1BF5               	btfsc	___awmod@dividend,7
  2976  0F32  03F6               	decf	___awmod@dividend+1,f
  2977  0F33  300A               	movlw	10
  2978  0F34  00F3               	movwf	___awmod@divisor
  2979  0F35  3000               	movlw	0
  2980  0F36  00F4               	movwf	___awmod@divisor+1
  2981  0F37  160A  158A  27A7  120A  158A  	fcall	___awmod
  2982  0F3C  0873               	movf	?___awmod,w
  2983  0F3D  160A  158A  24D4  120A  158A  	fcall	___bmul
  2984  0F42  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2985  0F43  0084               	movwf	4
  2986  0F44  160A  118A  200A  120A  158A  	fcall	stringdir
  2987  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0F4B  00AD               	movwf	___ftmul@f1
  2990  0F4C  160A  118A  200A  120A  158A  	fcall	stringdir
  2991  0F51  00AE               	movwf	___ftmul@f1+1
  2992  0F52  160A  118A  200A  120A  158A  	fcall	stringdir
  2993  0F57  00AF               	movwf	___ftmul@f1+2
  2994  0F58  0842               	movf	_scale$1066,w
  2995  0F59  00B0               	movwf	___ftmul@f2
  2996  0F5A  0843               	movf	_scale$1066+1,w
  2997  0F5B  00B1               	movwf	___ftmul@f2+1
  2998  0F5C  0844               	movf	_scale$1066+2,w
  2999  0F5D  00B2               	movwf	___ftmul@f2+2
  3000  0F5E  160A  118A  2524  120A  158A  	fcall	___ftmul
  3001  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0F65  082D               	movf	?___ftmul,w
  3004  0F66  00BD               	movwf	?_scale
  3005  0F67  082E               	movf	?___ftmul+1,w
  3006  0F68  00BE               	movwf	?_scale+1
  3007  0F69  082F               	movf	?___ftmul+2,w
  3008  0F6A  00BF               	movwf	?_scale+2
  3009  0F6B  2FFF               	goto	l354
  3010  0F6C                     l3784:	
  3011  0F6C  0845               	movf	scale@scl,w
  3012  0F6D  3A80               	xorlw	128
  3013  0F6E  3E75               	addlw	-139
  3014  0F6F  1C03               	skipc
  3015  0F70  2F72               	goto	u5651
  3016  0F71  2F73               	goto	u5650
  3017  0F72                     u5651:	
  3018  0F72  2FDF               	goto	l3790
  3019  0F73                     u5650:	
  3020  0F73                     l3786:	
  3021                           
  3022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3023  0F73  3003               	movlw	3
  3024  0F74  00C0               	movwf	??_scale
  3025  0F75  0840               	movf	??_scale,w
  3026  0F76  00A9               	movwf	___bmul@multiplicand
  3027  0F77  0845               	movf	scale@scl,w
  3028  0F78  00F5               	movwf	___awmod@dividend
  3029  0F79  01F6               	clrf	___awmod@dividend+1
  3030  0F7A  1BF5               	btfsc	___awmod@dividend,7
  3031  0F7B  03F6               	decf	___awmod@dividend+1,f
  3032  0F7C  300A               	movlw	10
  3033  0F7D  00F3               	movwf	___awmod@divisor
  3034  0F7E  3000               	movlw	0
  3035  0F7F  00F4               	movwf	___awmod@divisor+1
  3036  0F80  160A  158A  27A7  120A  158A  	fcall	___awmod
  3037  0F85  0873               	movf	?___awmod,w
  3038  0F86  160A  158A  24D4  120A  158A  	fcall	___bmul
  3039  0F8B  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3040  0F8C  0084               	movwf	4
  3041  0F8D  160A  118A  200A  120A  158A  	fcall	stringdir
  3042  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  3044  0F94  00AD               	movwf	___ftmul@f1
  3045  0F95  160A  118A  200A  120A  158A  	fcall	stringdir
  3046  0F9A  00AE               	movwf	___ftmul@f1+1
  3047  0F9B  160A  118A  200A  120A  158A  	fcall	stringdir
  3048  0FA0  00AF               	movwf	___ftmul@f1+2
  3049  0FA1  3003               	movlw	3
  3050  0FA2  00C1               	movwf	??_scale+1
  3051  0FA3  0841               	movf	??_scale+1,w
  3052  0FA4  00A9               	movwf	___bmul@multiplicand
  3053  0FA5  0845               	movf	scale@scl,w
  3054  0FA6  00A2               	movwf	___awdiv@dividend
  3055  0FA7  01A3               	clrf	___awdiv@dividend+1
  3056  0FA8  1BA2               	btfsc	___awdiv@dividend,7
  3057  0FA9  03A3               	decf	___awdiv@dividend+1,f
  3058  0FAA  300A               	movlw	10
  3059  0FAB  00A0               	movwf	___awdiv@divisor
  3060  0FAC  3000               	movlw	0
  3061  0FAD  00A1               	movwf	___awdiv@divisor+1
  3062  0FAE  160A  118A  2176  120A  158A  	fcall	___awdiv
  3063  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  3064  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  3065  0FB5  0820               	movf	?___awdiv,w
  3066  0FB6  160A  158A  24D4  120A  158A  	fcall	___bmul
  3067  0FBB  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  3068  0FBC  0084               	movwf	4
  3069  0FBD  160A  118A  200A  120A  158A  	fcall	stringdir
  3070  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0FC4  00B0               	movwf	___ftmul@f2
  3073  0FC5  160A  118A  200A  120A  158A  	fcall	stringdir
  3074  0FCA  00B1               	movwf	___ftmul@f2+1
  3075  0FCB  160A  118A  200A  120A  158A  	fcall	stringdir
  3076  0FD0  00B2               	movwf	___ftmul@f2+2
  3077  0FD1  160A  118A  2524  120A  158A  	fcall	___ftmul
  3078  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  3079  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  3080  0FD8  082D               	movf	?___ftmul,w
  3081  0FD9  00BD               	movwf	?_scale
  3082  0FDA  082E               	movf	?___ftmul+1,w
  3083  0FDB  00BE               	movwf	?_scale+1
  3084  0FDC  082F               	movf	?___ftmul+2,w
  3085  0FDD  00BF               	movwf	?_scale+2
  3086  0FDE  2FFF               	goto	l354
  3087  0FDF                     l3790:	
  3088                           
  3089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3090  0FDF  3003               	movlw	3
  3091  0FE0  00C0               	movwf	??_scale
  3092  0FE1  0840               	movf	??_scale,w
  3093  0FE2  00A9               	movwf	___bmul@multiplicand
  3094  0FE3  0845               	movf	scale@scl,w
  3095  0FE4  160A  158A  24D4  120A  158A  	fcall	___bmul
  3096  0FE9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3097  0FEA  0084               	movwf	4
  3098  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  3099  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  3101  0FF2  00BD               	movwf	?_scale
  3102  0FF3  160A  118A  200A  120A  158A  	fcall	stringdir
  3103  0FF8  00BE               	movwf	?_scale+1
  3104  0FF9  160A  118A  200A  120A  158A  	fcall	stringdir
  3105  0FFE  00BF               	movwf	?_scale+2
  3106  0FFF                     l354:	
  3107  0FFF  0008               	return
  3108  1000                     __end_of_scale:	
  3109                           
  3110                           	psect	text3
  3111  1FA7                     __ptext3:	
  3112 ;; *************** function ___awmod *****************
  3113 ;; Defined at:
  3114 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  divisor         2    3[COMMON] int 
  3117 ;;  dividend        2    5[COMMON] int 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  sign            1    9[COMMON] unsigned char 
  3120 ;;  counter         1    8[COMMON] unsigned char 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  2    3[COMMON] int 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2, status,0
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3130 ;;      Params:         4       0       0       0       0
  3131 ;;      Locals:         2       0       0       0       0
  3132 ;;      Temps:          1       0       0       0       0
  3133 ;;      Totals:         7       0       0       0       0
  3134 ;;Total ram usage:        7 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    2
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_scale
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function ___awmod
  3146  1FA7                     ___awmod:	
  3147  1FA7                     l2330:	
  3148                           ;incstack = 0
  3149                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3150                           
  3151  1FA7  01F9               	clrf	___awmod@sign
  3152  1FA8                     l2332:	
  3153  1FA8  1FF6               	btfss	___awmod@dividend+1,7
  3154  1FA9  2FAB               	goto	u2781
  3155  1FAA  2FAC               	goto	u2780
  3156  1FAB                     u2781:	
  3157  1FAB  2FB3               	goto	l2338
  3158  1FAC                     u2780:	
  3159  1FAC                     l2334:	
  3160  1FAC  09F5               	comf	___awmod@dividend,f
  3161  1FAD  09F6               	comf	___awmod@dividend+1,f
  3162  1FAE  0AF5               	incf	___awmod@dividend,f
  3163  1FAF  1903               	skipnz
  3164  1FB0  0AF6               	incf	___awmod@dividend+1,f
  3165  1FB1                     l2336:	
  3166  1FB1  01F9               	clrf	___awmod@sign
  3167  1FB2  0AF9               	incf	___awmod@sign,f
  3168  1FB3                     l2338:	
  3169  1FB3  1FF4               	btfss	___awmod@divisor+1,7
  3170  1FB4  2FB6               	goto	u2791
  3171  1FB5  2FB7               	goto	u2790
  3172  1FB6                     u2791:	
  3173  1FB6  2FBC               	goto	l2342
  3174  1FB7                     u2790:	
  3175  1FB7                     l2340:	
  3176  1FB7  09F3               	comf	___awmod@divisor,f
  3177  1FB8  09F4               	comf	___awmod@divisor+1,f
  3178  1FB9  0AF3               	incf	___awmod@divisor,f
  3179  1FBA  1903               	skipnz
  3180  1FBB  0AF4               	incf	___awmod@divisor+1,f
  3181  1FBC                     l2342:	
  3182  1FBC  0873               	movf	___awmod@divisor,w
  3183  1FBD  0474               	iorwf	___awmod@divisor+1,w
  3184  1FBE  1903               	btfsc	3,2
  3185  1FBF  2FC1               	goto	u2801
  3186  1FC0  2FC2               	goto	u2800
  3187  1FC1                     u2801:	
  3188  1FC1  2FF1               	goto	l2360
  3189  1FC2                     u2800:	
  3190  1FC2                     l2344:	
  3191  1FC2  01F8               	clrf	___awmod@counter
  3192  1FC3  0AF8               	incf	___awmod@counter,f
  3193  1FC4  2FD0               	goto	l2350
  3194  1FC5                     l2346:	
  3195  1FC5  3001               	movlw	1
  3196  1FC6                     u2815:	
  3197  1FC6  1003               	clrc
  3198  1FC7  0DF3               	rlf	___awmod@divisor,f
  3199  1FC8  0DF4               	rlf	___awmod@divisor+1,f
  3200  1FC9  3EFF               	addlw	-1
  3201  1FCA  1D03               	skipz
  3202  1FCB  2FC6               	goto	u2815
  3203  1FCC                     l2348:	
  3204  1FCC  3001               	movlw	1
  3205  1FCD  00F7               	movwf	??___awmod
  3206  1FCE  0877               	movf	??___awmod,w
  3207  1FCF  07F8               	addwf	___awmod@counter,f
  3208  1FD0                     l2350:	
  3209  1FD0  1FF4               	btfss	___awmod@divisor+1,7
  3210  1FD1  2FD3               	goto	u2821
  3211  1FD2  2FD4               	goto	u2820
  3212  1FD3                     u2821:	
  3213  1FD3  2FC5               	goto	l2346
  3214  1FD4                     u2820:	
  3215  1FD4                     l2352:	
  3216  1FD4  0874               	movf	___awmod@divisor+1,w
  3217  1FD5  0276               	subwf	___awmod@dividend+1,w
  3218  1FD6  1D03               	skipz
  3219  1FD7  2FDA               	goto	u2835
  3220  1FD8  0873               	movf	___awmod@divisor,w
  3221  1FD9  0275               	subwf	___awmod@dividend,w
  3222  1FDA                     u2835:	
  3223  1FDA  1C03               	skipc
  3224  1FDB  2FDD               	goto	u2831
  3225  1FDC  2FDE               	goto	u2830
  3226  1FDD                     u2831:	
  3227  1FDD  2FE4               	goto	l2356
  3228  1FDE                     u2830:	
  3229  1FDE                     l2354:	
  3230  1FDE  0873               	movf	___awmod@divisor,w
  3231  1FDF  02F5               	subwf	___awmod@dividend,f
  3232  1FE0  0874               	movf	___awmod@divisor+1,w
  3233  1FE1  1C03               	skipc
  3234  1FE2  03F6               	decf	___awmod@dividend+1,f
  3235  1FE3  02F6               	subwf	___awmod@dividend+1,f
  3236  1FE4                     l2356:	
  3237  1FE4  3001               	movlw	1
  3238  1FE5                     u2845:	
  3239  1FE5  1003               	clrc
  3240  1FE6  0CF4               	rrf	___awmod@divisor+1,f
  3241  1FE7  0CF3               	rrf	___awmod@divisor,f
  3242  1FE8  3EFF               	addlw	-1
  3243  1FE9  1D03               	skipz
  3244  1FEA  2FE5               	goto	u2845
  3245  1FEB                     l2358:	
  3246  1FEB  3001               	movlw	1
  3247  1FEC  02F8               	subwf	___awmod@counter,f
  3248  1FED  1D03               	btfss	3,2
  3249  1FEE  2FF0               	goto	u2851
  3250  1FEF  2FF1               	goto	u2850
  3251  1FF0                     u2851:	
  3252  1FF0  2FD4               	goto	l2352
  3253  1FF1                     u2850:	
  3254  1FF1                     l2360:	
  3255  1FF1  0879               	movf	___awmod@sign,w
  3256  1FF2  1903               	btfsc	3,2
  3257  1FF3  2FF5               	goto	u2861
  3258  1FF4  2FF6               	goto	u2860
  3259  1FF5                     u2861:	
  3260  1FF5  2FFB               	goto	l2364
  3261  1FF6                     u2860:	
  3262  1FF6                     l2362:	
  3263  1FF6  09F5               	comf	___awmod@dividend,f
  3264  1FF7  09F6               	comf	___awmod@dividend+1,f
  3265  1FF8  0AF5               	incf	___awmod@dividend,f
  3266  1FF9  1903               	skipnz
  3267  1FFA  0AF6               	incf	___awmod@dividend+1,f
  3268  1FFB                     l2364:	
  3269  1FFB  0876               	movf	___awmod@dividend+1,w
  3270  1FFC  00F4               	movwf	?___awmod+1
  3271  1FFD  0875               	movf	___awmod@dividend,w
  3272  1FFE  00F3               	movwf	?___awmod
  3273  1FFF                     l646:	
  3274  1FFF  0008               	return
  3275  2000                     __end_of___awmod:	
  3276                           
  3277                           	psect	text4
  3278  1176                     __ptext4:	
  3279 ;; *************** function ___awdiv *****************
  3280 ;; Defined at:
  3281 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  divisor         2    0[BANK0 ] int 
  3284 ;;  dividend        2    2[BANK0 ] int 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  quotient        2    7[BANK0 ] int 
  3287 ;;  sign            1    6[BANK0 ] unsigned char 
  3288 ;;  counter         1    5[BANK0 ] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  2    0[BANK0 ] int 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3298 ;;      Params:         0       4       0       0       0
  3299 ;;      Locals:         0       4       0       0       0
  3300 ;;      Temps:          0       1       0       0       0
  3301 ;;      Totals:         0       9       0       0       0
  3302 ;;Total ram usage:        9 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    2
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_scale
  3309 ;;		_sprintf
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function ___awdiv
  3315  1176                     ___awdiv:	
  3316  1176                     l3540:	
  3317                           ;incstack = 0
  3318                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3319                           
  3320  1176  1283               	bcf	3,5	;RP0=0, select bank0
  3321  1177  1303               	bcf	3,6	;RP1=0, select bank0
  3322  1178  01A6               	clrf	___awdiv@sign
  3323  1179                     l3542:	
  3324  1179  1FA1               	btfss	___awdiv@divisor+1,7
  3325  117A  297C               	goto	u5111
  3326  117B  297D               	goto	u5110
  3327  117C                     u5111:	
  3328  117C  2984               	goto	l3548
  3329  117D                     u5110:	
  3330  117D                     l3544:	
  3331  117D  09A0               	comf	___awdiv@divisor,f
  3332  117E  09A1               	comf	___awdiv@divisor+1,f
  3333  117F  0AA0               	incf	___awdiv@divisor,f
  3334  1180  1903               	skipnz
  3335  1181  0AA1               	incf	___awdiv@divisor+1,f
  3336  1182                     l3546:	
  3337  1182  01A6               	clrf	___awdiv@sign
  3338  1183  0AA6               	incf	___awdiv@sign,f
  3339  1184                     l3548:	
  3340  1184  1FA3               	btfss	___awdiv@dividend+1,7
  3341  1185  2987               	goto	u5121
  3342  1186  2988               	goto	u5120
  3343  1187                     u5121:	
  3344  1187  2991               	goto	l3554
  3345  1188                     u5120:	
  3346  1188                     l3550:	
  3347  1188  09A2               	comf	___awdiv@dividend,f
  3348  1189  09A3               	comf	___awdiv@dividend+1,f
  3349  118A  0AA2               	incf	___awdiv@dividend,f
  3350  118B  1903               	skipnz
  3351  118C  0AA3               	incf	___awdiv@dividend+1,f
  3352  118D                     l3552:	
  3353  118D  3001               	movlw	1
  3354  118E  00A4               	movwf	??___awdiv
  3355  118F  0824               	movf	??___awdiv,w
  3356  1190  06A6               	xorwf	___awdiv@sign,f
  3357  1191                     l3554:	
  3358  1191  01A7               	clrf	___awdiv@quotient
  3359  1192  01A8               	clrf	___awdiv@quotient+1
  3360  1193                     l3556:	
  3361  1193  0820               	movf	___awdiv@divisor,w
  3362  1194  0421               	iorwf	___awdiv@divisor+1,w
  3363  1195  1903               	btfsc	3,2
  3364  1196  2998               	goto	u5131
  3365  1197  2999               	goto	u5130
  3366  1198                     u5131:	
  3367  1198  29D0               	goto	l3576
  3368  1199                     u5130:	
  3369  1199                     l3558:	
  3370  1199  01A5               	clrf	___awdiv@counter
  3371  119A  0AA5               	incf	___awdiv@counter,f
  3372  119B  29A7               	goto	l3564
  3373  119C                     l3560:	
  3374  119C  3001               	movlw	1
  3375  119D                     u5145:	
  3376  119D  1003               	clrc
  3377  119E  0DA0               	rlf	___awdiv@divisor,f
  3378  119F  0DA1               	rlf	___awdiv@divisor+1,f
  3379  11A0  3EFF               	addlw	-1
  3380  11A1  1D03               	skipz
  3381  11A2  299D               	goto	u5145
  3382  11A3                     l3562:	
  3383  11A3  3001               	movlw	1
  3384  11A4  00A4               	movwf	??___awdiv
  3385  11A5  0824               	movf	??___awdiv,w
  3386  11A6  07A5               	addwf	___awdiv@counter,f
  3387  11A7                     l3564:	
  3388  11A7  1FA1               	btfss	___awdiv@divisor+1,7
  3389  11A8  29AA               	goto	u5151
  3390  11A9  29AB               	goto	u5150
  3391  11AA                     u5151:	
  3392  11AA  299C               	goto	l3560
  3393  11AB                     u5150:	
  3394  11AB                     l3566:	
  3395  11AB  3001               	movlw	1
  3396  11AC                     u5165:	
  3397  11AC  1003               	clrc
  3398  11AD  0DA7               	rlf	___awdiv@quotient,f
  3399  11AE  0DA8               	rlf	___awdiv@quotient+1,f
  3400  11AF  3EFF               	addlw	-1
  3401  11B0  1D03               	skipz
  3402  11B1  29AC               	goto	u5165
  3403  11B2  0821               	movf	___awdiv@divisor+1,w
  3404  11B3  0223               	subwf	___awdiv@dividend+1,w
  3405  11B4  1D03               	skipz
  3406  11B5  29B8               	goto	u5175
  3407  11B6  0820               	movf	___awdiv@divisor,w
  3408  11B7  0222               	subwf	___awdiv@dividend,w
  3409  11B8                     u5175:	
  3410  11B8  1C03               	skipc
  3411  11B9  29BB               	goto	u5171
  3412  11BA  29BC               	goto	u5170
  3413  11BB                     u5171:	
  3414  11BB  29C3               	goto	l3572
  3415  11BC                     u5170:	
  3416  11BC                     l3568:	
  3417  11BC  0820               	movf	___awdiv@divisor,w
  3418  11BD  02A2               	subwf	___awdiv@dividend,f
  3419  11BE  0821               	movf	___awdiv@divisor+1,w
  3420  11BF  1C03               	skipc
  3421  11C0  03A3               	decf	___awdiv@dividend+1,f
  3422  11C1  02A3               	subwf	___awdiv@dividend+1,f
  3423  11C2                     l3570:	
  3424  11C2  1427               	bsf	___awdiv@quotient,0
  3425  11C3                     l3572:	
  3426  11C3  3001               	movlw	1
  3427  11C4                     u5185:	
  3428  11C4  1003               	clrc
  3429  11C5  0CA1               	rrf	___awdiv@divisor+1,f
  3430  11C6  0CA0               	rrf	___awdiv@divisor,f
  3431  11C7  3EFF               	addlw	-1
  3432  11C8  1D03               	skipz
  3433  11C9  29C4               	goto	u5185
  3434  11CA                     l3574:	
  3435  11CA  3001               	movlw	1
  3436  11CB  02A5               	subwf	___awdiv@counter,f
  3437  11CC  1D03               	btfss	3,2
  3438  11CD  29CF               	goto	u5191
  3439  11CE  29D0               	goto	u5190
  3440  11CF                     u5191:	
  3441  11CF  29AB               	goto	l3566
  3442  11D0                     u5190:	
  3443  11D0                     l3576:	
  3444  11D0  0826               	movf	___awdiv@sign,w
  3445  11D1  1903               	btfsc	3,2
  3446  11D2  29D4               	goto	u5201
  3447  11D3  29D5               	goto	u5200
  3448  11D4                     u5201:	
  3449  11D4  29DA               	goto	l3580
  3450  11D5                     u5200:	
  3451  11D5                     l3578:	
  3452  11D5  09A7               	comf	___awdiv@quotient,f
  3453  11D6  09A8               	comf	___awdiv@quotient+1,f
  3454  11D7  0AA7               	incf	___awdiv@quotient,f
  3455  11D8  1903               	skipnz
  3456  11D9  0AA8               	incf	___awdiv@quotient+1,f
  3457  11DA                     l3580:	
  3458  11DA  0828               	movf	___awdiv@quotient+1,w
  3459  11DB  00A1               	movwf	?___awdiv+1
  3460  11DC  0827               	movf	___awdiv@quotient,w
  3461  11DD  00A0               	movwf	?___awdiv
  3462  11DE                     l633:	
  3463  11DE  0008               	return
  3464  11DF                     __end_of___awdiv:	
  3465                           
  3466                           	psect	text5
  3467  1CAC                     __ptext5:	
  3468 ;; *************** function _isdigit *****************
  3469 ;; Defined at:
  3470 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  c               1    wreg     unsigned char 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  c               1    4[COMMON] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;		None               void
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3484 ;;      Params:         0       0       0       0       0
  3485 ;;      Locals:         2       0       0       0       0
  3486 ;;      Temps:          0       0       0       0       0
  3487 ;;      Totals:         2       0       0       0       0
  3488 ;;Total ram usage:        2 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    2
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_sprintf
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           
  3499                           ;psect for function _isdigit
  3500  1CAC                     _isdigit:	
  3501                           
  3502                           ;incstack = 0
  3503                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3504                           ;isdigit@c stored from wreg
  3505  1CAC  00F4               	movwf	isdigit@c
  3506  1CAD                     l2630:	
  3507  1CAD  01F3               	clrf	_isdigit$868
  3508  1CAE                     l2632:	
  3509  1CAE  303A               	movlw	58
  3510  1CAF  0274               	subwf	isdigit@c,w
  3511  1CB0  1803               	skipnc
  3512  1CB1  2CB3               	goto	u3461
  3513  1CB2  2CB4               	goto	u3460
  3514  1CB3                     u3461:	
  3515  1CB3  2CBC               	goto	l2638
  3516  1CB4                     u3460:	
  3517  1CB4                     l2634:	
  3518  1CB4  3030               	movlw	48
  3519  1CB5  0274               	subwf	isdigit@c,w
  3520  1CB6  1C03               	skipc
  3521  1CB7  2CB9               	goto	u3471
  3522  1CB8  2CBA               	goto	u3470
  3523  1CB9                     u3471:	
  3524  1CB9  2CBC               	goto	l2638
  3525  1CBA                     u3470:	
  3526  1CBA                     l2636:	
  3527  1CBA  01F3               	clrf	_isdigit$868
  3528  1CBB  0AF3               	incf	_isdigit$868,f
  3529  1CBC                     l2638:	
  3530  1CBC  0C73               	rrf	_isdigit$868,w
  3531  1CBD                     l912:	
  3532  1CBD  0008               	return
  3533  1CBE                     __end_of_isdigit:	
  3534                           
  3535                           	psect	text6
  3536  0638                     __ptext6:	
  3537 ;; *************** function _fround *****************
  3538 ;; Defined at:
  3539 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  prec            1    wreg     unsigned char 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  prec            1   44[BANK0 ] unsigned char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  3   29[BANK0 ] unsigned char 
  3546 ;; Registers used:
  3547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3553 ;;      Params:         0       3       0       0       0
  3554 ;;      Locals:         0       7       0       0       0
  3555 ;;      Temps:          0       6       0       0       0
  3556 ;;      Totals:         0      16       0       0       0
  3557 ;;Total ram usage:       16 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    4
  3560 ;; This function calls:
  3561 ;;		___bmul
  3562 ;;		___ftmul
  3563 ;;		___lwdiv
  3564 ;;		___lwmod
  3565 ;; This function is called by:
  3566 ;;		_sprintf
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           
  3571                           ;psect for function _fround
  3572  0638                     _fround:	
  3573                           
  3574                           ;incstack = 0
  3575                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3576                           ;fround@prec stored from wreg
  3577  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3578  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3579  063A  00CC               	movwf	fround@prec
  3580  063B                     l3732:	
  3581                           
  3582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  3583  063B  306E               	movlw	110
  3584  063C  024C               	subwf	fround@prec,w
  3585  063D  1C03               	skipc
  3586  063E  2E40               	goto	u5591
  3587  063F  2E41               	goto	u5590
  3588  0640                     u5591:	
  3589  0640  2F1E               	goto	l3742
  3590  0641                     u5590:	
  3591  0641                     l3734:	
  3592                           
  3593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3594  0641  3003               	movlw	3
  3595  0642  00C0               	movwf	??_fround
  3596  0643  0840               	movf	??_fround,w
  3597  0644  00A9               	movwf	___bmul@multiplicand
  3598  0645  084C               	movf	fround@prec,w
  3599  0646  00C1               	movwf	??_fround+1
  3600  0647  01C2               	clrf	??_fround+2
  3601  0648  0841               	movf	??_fround+1,w
  3602  0649  00F5               	movwf	___lwmod@dividend
  3603  064A  0842               	movf	??_fround+2,w
  3604  064B  00F6               	movwf	___lwmod@dividend+1
  3605  064C  3064               	movlw	100
  3606  064D  00F3               	movwf	___lwmod@divisor
  3607  064E  3000               	movlw	0
  3608  064F  00F4               	movwf	___lwmod@divisor+1
  3609  0650  160A  158A  2695  120A  118A  	fcall	___lwmod
  3610  0655  0874               	movf	?___lwmod+1,w
  3611  0656  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0657  1303               	bcf	3,6	;RP1=0, select bank0
  3613  0658  00A3               	movwf	___lwdiv@dividend+1
  3614  0659  0873               	movf	?___lwmod,w
  3615  065A  00A2               	movwf	___lwdiv@dividend
  3616  065B  300A               	movlw	10
  3617  065C  00A0               	movwf	___lwdiv@divisor
  3618  065D  3000               	movlw	0
  3619  065E  00A1               	movwf	___lwdiv@divisor+1
  3620  065F  160A  118A  20C8  120A  118A  	fcall	___lwdiv
  3621  0664  1283               	bcf	3,5	;RP0=0, select bank0
  3622  0665  1303               	bcf	3,6	;RP1=0, select bank0
  3623  0666  0820               	movf	?___lwdiv,w
  3624  0667  160A  158A  24D4  120A  118A  	fcall	___bmul
  3625  066C  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3626  066D  0084               	movwf	4
  3627  066E  160A  118A  200A  120A  118A  	fcall	stringdir
  3628  0673  1283               	bcf	3,5	;RP0=0, select bank0
  3629  0674  1303               	bcf	3,6	;RP1=0, select bank0
  3630  0675  00AD               	movwf	___ftmul@f1
  3631  0676  160A  118A  200A  120A  118A  	fcall	stringdir
  3632  067B  00AE               	movwf	___ftmul@f1+1
  3633  067C  160A  118A  200A  120A  118A  	fcall	stringdir
  3634  0681  00AF               	movwf	___ftmul@f1+2
  3635  0682  3003               	movlw	3
  3636  0683  00C3               	movwf	??_fround+3
  3637  0684  0843               	movf	??_fround+3,w
  3638  0685  00A9               	movwf	___bmul@multiplicand
  3639  0686  084C               	movf	fround@prec,w
  3640  0687  00C4               	movwf	??_fround+4
  3641  0688  01C5               	clrf	??_fround+5
  3642  0689  0844               	movf	??_fround+4,w
  3643  068A  00A2               	movwf	___lwdiv@dividend
  3644  068B  0845               	movf	??_fround+5,w
  3645  068C  00A3               	movwf	___lwdiv@dividend+1
  3646  068D  3064               	movlw	100
  3647  068E  00A0               	movwf	___lwdiv@divisor
  3648  068F  3000               	movlw	0
  3649  0690  00A1               	movwf	___lwdiv@divisor+1
  3650  0691  160A  118A  20C8  120A  118A  	fcall	___lwdiv
  3651  0696  1283               	bcf	3,5	;RP0=0, select bank0
  3652  0697  1303               	bcf	3,6	;RP1=0, select bank0
  3653  0698  0820               	movf	?___lwdiv,w
  3654  0699  160A  158A  24D4  120A  118A  	fcall	___bmul
  3655  069E  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  3656  069F  0084               	movwf	4
  3657  06A0  160A  118A  200A  120A  118A  	fcall	stringdir
  3658  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3659  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3660  06A7  00B0               	movwf	___ftmul@f2
  3661  06A8  160A  118A  200A  120A  118A  	fcall	stringdir
  3662  06AD  00B1               	movwf	___ftmul@f2+1
  3663  06AE  160A  118A  200A  120A  118A  	fcall	stringdir
  3664  06B3  00B2               	movwf	___ftmul@f2+2
  3665  06B4  160A  118A  2524  120A  118A  	fcall	___ftmul
  3666  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3667  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3668  06BB  082D               	movf	?___ftmul,w
  3669  06BC  00C9               	movwf	_fround$1064
  3670  06BD  082E               	movf	?___ftmul+1,w
  3671  06BE  00CA               	movwf	_fround$1064+1
  3672  06BF  082F               	movf	?___ftmul+2,w
  3673  06C0  00CB               	movwf	_fround$1064+2
  3674                           
  3675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3676  06C1  3003               	movlw	3
  3677  06C2  00C0               	movwf	??_fround
  3678  06C3  0840               	movf	??_fround,w
  3679  06C4  00A9               	movwf	___bmul@multiplicand
  3680  06C5  084C               	movf	fround@prec,w
  3681  06C6  00C1               	movwf	??_fround+1
  3682  06C7  01C2               	clrf	??_fround+2
  3683  06C8  0841               	movf	??_fround+1,w
  3684  06C9  00F5               	movwf	___lwmod@dividend
  3685  06CA  0842               	movf	??_fround+2,w
  3686  06CB  00F6               	movwf	___lwmod@dividend+1
  3687  06CC  300A               	movlw	10
  3688  06CD  00F3               	movwf	___lwmod@divisor
  3689  06CE  3000               	movlw	0
  3690  06CF  00F4               	movwf	___lwmod@divisor+1
  3691  06D0  160A  158A  2695  120A  118A  	fcall	___lwmod
  3692  06D5  0873               	movf	?___lwmod,w
  3693  06D6  160A  158A  24D4  120A  118A  	fcall	___bmul
  3694  06DB  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3695  06DC  0084               	movwf	4
  3696  06DD  160A  118A  200A  120A  118A  	fcall	stringdir
  3697  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3698  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3699  06E4  00AD               	movwf	___ftmul@f1
  3700  06E5  160A  118A  200A  120A  118A  	fcall	stringdir
  3701  06EA  00AE               	movwf	___ftmul@f1+1
  3702  06EB  160A  118A  200A  120A  118A  	fcall	stringdir
  3703  06F0  00AF               	movwf	___ftmul@f1+2
  3704  06F1  0849               	movf	_fround$1064,w
  3705  06F2  00B0               	movwf	___ftmul@f2
  3706  06F3  084A               	movf	_fround$1064+1,w
  3707  06F4  00B1               	movwf	___ftmul@f2+1
  3708  06F5  084B               	movf	_fround$1064+2,w
  3709  06F6  00B2               	movwf	___ftmul@f2+2
  3710  06F7  160A  118A  2524  120A  118A  	fcall	___ftmul
  3711  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  3712  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  3713  06FE  082D               	movf	?___ftmul,w
  3714  06FF  00C6               	movwf	_fround$1065
  3715  0700  082E               	movf	?___ftmul+1,w
  3716  0701  00C7               	movwf	_fround$1065+1
  3717  0702  082F               	movf	?___ftmul+2,w
  3718  0703  00C8               	movwf	_fround$1065+2
  3719  0704                     l3736:	
  3720                           
  3721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3722  0704  3000               	movlw	0
  3723  0705  00AD               	movwf	___ftmul@f1
  3724  0706  3000               	movlw	0
  3725  0707  00AE               	movwf	___ftmul@f1+1
  3726  0708  303F               	movlw	63
  3727  0709  00AF               	movwf	___ftmul@f1+2
  3728  070A  0846               	movf	_fround$1065,w
  3729  070B  00B0               	movwf	___ftmul@f2
  3730  070C  0847               	movf	_fround$1065+1,w
  3731  070D  00B1               	movwf	___ftmul@f2+1
  3732  070E  0848               	movf	_fround$1065+2,w
  3733  070F  00B2               	movwf	___ftmul@f2+2
  3734  0710  160A  118A  2524  120A  118A  	fcall	___ftmul
  3735  0715  1283               	bcf	3,5	;RP0=0, select bank0
  3736  0716  1303               	bcf	3,6	;RP1=0, select bank0
  3737  0717  082D               	movf	?___ftmul,w
  3738  0718  00BD               	movwf	?_fround
  3739  0719  082E               	movf	?___ftmul+1,w
  3740  071A  00BE               	movwf	?_fround+1
  3741  071B  082F               	movf	?___ftmul+2,w
  3742  071C  00BF               	movwf	?_fround+2
  3743  071D  2FE0               	goto	l347
  3744  071E                     l3742:	
  3745  071E  300B               	movlw	11
  3746  071F  024C               	subwf	fround@prec,w
  3747  0720  1C03               	skipc
  3748  0721  2F23               	goto	u5601
  3749  0722  2F24               	goto	u5600
  3750  0723                     u5601:	
  3751  0723  2FAD               	goto	l3750
  3752  0724                     u5600:	
  3753  0724                     l3744:	
  3754                           
  3755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3756  0724  3003               	movlw	3
  3757  0725  00C0               	movwf	??_fround
  3758  0726  0840               	movf	??_fround,w
  3759  0727  00A9               	movwf	___bmul@multiplicand
  3760  0728  084C               	movf	fround@prec,w
  3761  0729  00C1               	movwf	??_fround+1
  3762  072A  01C2               	clrf	??_fround+2
  3763  072B  0841               	movf	??_fround+1,w
  3764  072C  00F5               	movwf	___lwmod@dividend
  3765  072D  0842               	movf	??_fround+2,w
  3766  072E  00F6               	movwf	___lwmod@dividend+1
  3767  072F  300A               	movlw	10
  3768  0730  00F3               	movwf	___lwmod@divisor
  3769  0731  3000               	movlw	0
  3770  0732  00F4               	movwf	___lwmod@divisor+1
  3771  0733  160A  158A  2695  120A  118A  	fcall	___lwmod
  3772  0738  0873               	movf	?___lwmod,w
  3773  0739  160A  158A  24D4  120A  118A  	fcall	___bmul
  3774  073E  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3775  073F  0084               	movwf	4
  3776  0740  160A  118A  200A  120A  118A  	fcall	stringdir
  3777  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3778  0746  1303               	bcf	3,6	;RP1=0, select bank0
  3779  0747  00AD               	movwf	___ftmul@f1
  3780  0748  160A  118A  200A  120A  118A  	fcall	stringdir
  3781  074D  00AE               	movwf	___ftmul@f1+1
  3782  074E  160A  118A  200A  120A  118A  	fcall	stringdir
  3783  0753  00AF               	movwf	___ftmul@f1+2
  3784  0754  3003               	movlw	3
  3785  0755  00C3               	movwf	??_fround+3
  3786  0756  0843               	movf	??_fround+3,w
  3787  0757  00A9               	movwf	___bmul@multiplicand
  3788  0758  084C               	movf	fround@prec,w
  3789  0759  00C4               	movwf	??_fround+4
  3790  075A  01C5               	clrf	??_fround+5
  3791  075B  0844               	movf	??_fround+4,w
  3792  075C  00A2               	movwf	___lwdiv@dividend
  3793  075D  0845               	movf	??_fround+5,w
  3794  075E  00A3               	movwf	___lwdiv@dividend+1
  3795  075F  300A               	movlw	10
  3796  0760  00A0               	movwf	___lwdiv@divisor
  3797  0761  3000               	movlw	0
  3798  0762  00A1               	movwf	___lwdiv@divisor+1
  3799  0763  160A  118A  20C8  120A  118A  	fcall	___lwdiv
  3800  0768  1283               	bcf	3,5	;RP0=0, select bank0
  3801  0769  1303               	bcf	3,6	;RP1=0, select bank0
  3802  076A  0820               	movf	?___lwdiv,w
  3803  076B  160A  158A  24D4  120A  118A  	fcall	___bmul
  3804  0770  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  3805  0771  0084               	movwf	4
  3806  0772  160A  118A  200A  120A  118A  	fcall	stringdir
  3807  0777  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0778  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0779  00B0               	movwf	___ftmul@f2
  3810  077A  160A  118A  200A  120A  118A  	fcall	stringdir
  3811  077F  00B1               	movwf	___ftmul@f2+1
  3812  0780  160A  118A  200A  120A  118A  	fcall	stringdir
  3813  0785  00B2               	movwf	___ftmul@f2+2
  3814  0786  160A  118A  2524  120A  118A  	fcall	___ftmul
  3815  078B  1283               	bcf	3,5	;RP0=0, select bank0
  3816  078C  1303               	bcf	3,6	;RP1=0, select bank0
  3817  078D  082D               	movf	?___ftmul,w
  3818  078E  00C9               	movwf	_fround$1064
  3819  078F  082E               	movf	?___ftmul+1,w
  3820  0790  00CA               	movwf	_fround$1064+1
  3821  0791  082F               	movf	?___ftmul+2,w
  3822  0792  00CB               	movwf	_fround$1064+2
  3823  0793                     l3746:	
  3824                           
  3825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3826  0793  3000               	movlw	0
  3827  0794  00AD               	movwf	___ftmul@f1
  3828  0795  3000               	movlw	0
  3829  0796  00AE               	movwf	___ftmul@f1+1
  3830  0797  303F               	movlw	63
  3831  0798  00AF               	movwf	___ftmul@f1+2
  3832  0799  0849               	movf	_fround$1064,w
  3833  079A  00B0               	movwf	___ftmul@f2
  3834  079B  084A               	movf	_fround$1064+1,w
  3835  079C  00B1               	movwf	___ftmul@f2+1
  3836  079D  084B               	movf	_fround$1064+2,w
  3837  079E  00B2               	movwf	___ftmul@f2+2
  3838  079F  160A  118A  2524  120A  118A  	fcall	___ftmul
  3839  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  3840  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  3841  07A6  082D               	movf	?___ftmul,w
  3842  07A7  00BD               	movwf	?_fround
  3843  07A8  082E               	movf	?___ftmul+1,w
  3844  07A9  00BE               	movwf	?_fround+1
  3845  07AA  082F               	movf	?___ftmul+2,w
  3846  07AB  00BF               	movwf	?_fround+2
  3847  07AC  2FE0               	goto	l347
  3848  07AD                     l3750:	
  3849                           
  3850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  3851  07AD  3000               	movlw	0
  3852  07AE  00AD               	movwf	___ftmul@f1
  3853  07AF  3000               	movlw	0
  3854  07B0  00AE               	movwf	___ftmul@f1+1
  3855  07B1  303F               	movlw	63
  3856  07B2  00AF               	movwf	___ftmul@f1+2
  3857  07B3  3003               	movlw	3
  3858  07B4  00C0               	movwf	??_fround
  3859  07B5  0840               	movf	??_fround,w
  3860  07B6  00A9               	movwf	___bmul@multiplicand
  3861  07B7  084C               	movf	fround@prec,w
  3862  07B8  160A  158A  24D4  120A  118A  	fcall	___bmul
  3863  07BD  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3864  07BE  0084               	movwf	4
  3865  07BF  160A  118A  200A  120A  118A  	fcall	stringdir
  3866  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  3867  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  3868  07C6  00B0               	movwf	___ftmul@f2
  3869  07C7  160A  118A  200A  120A  118A  	fcall	stringdir
  3870  07CC  00B1               	movwf	___ftmul@f2+1
  3871  07CD  160A  118A  200A  120A  118A  	fcall	stringdir
  3872  07D2  00B2               	movwf	___ftmul@f2+2
  3873  07D3  160A  118A  2524  120A  118A  	fcall	___ftmul
  3874  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  3875  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  3876  07DA  082D               	movf	?___ftmul,w
  3877  07DB  00BD               	movwf	?_fround
  3878  07DC  082E               	movf	?___ftmul+1,w
  3879  07DD  00BE               	movwf	?_fround+1
  3880  07DE  082F               	movf	?___ftmul+2,w
  3881  07DF  00BF               	movwf	?_fround+2
  3882  07E0                     l347:	
  3883  07E0  0008               	return
  3884  07E1                     __end_of_fround:	
  3885                           
  3886                           	psect	text7
  3887  1E95                     __ptext7:	
  3888 ;; *************** function ___lwmod *****************
  3889 ;; Defined at:
  3890 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  divisor         2    3[COMMON] unsigned int 
  3893 ;;  dividend        2    5[COMMON] unsigned int 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  counter         1    8[COMMON] unsigned char 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  2    3[COMMON] unsigned int 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3905 ;;      Params:         4       0       0       0       0
  3906 ;;      Locals:         1       0       0       0       0
  3907 ;;      Temps:          1       0       0       0       0
  3908 ;;      Totals:         6       0       0       0       0
  3909 ;;Total ram usage:        6 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    2
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_fround
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           
  3920                           ;psect for function ___lwmod
  3921  1E95                     ___lwmod:	
  3922  1E95                     l2514:	
  3923                           ;incstack = 0
  3924                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3925                           
  3926  1E95  0873               	movf	___lwmod@divisor,w
  3927  1E96  0474               	iorwf	___lwmod@divisor+1,w
  3928  1E97  1903               	btfsc	3,2
  3929  1E98  2E9A               	goto	u3321
  3930  1E99  2E9B               	goto	u3320
  3931  1E9A                     u3321:	
  3932  1E9A  2ECA               	goto	l2532
  3933  1E9B                     u3320:	
  3934  1E9B                     l2516:	
  3935  1E9B  01F8               	clrf	___lwmod@counter
  3936  1E9C  0AF8               	incf	___lwmod@counter,f
  3937  1E9D  2EA9               	goto	l2522
  3938  1E9E                     l2518:	
  3939  1E9E  3001               	movlw	1
  3940  1E9F                     u3335:	
  3941  1E9F  1003               	clrc
  3942  1EA0  0DF3               	rlf	___lwmod@divisor,f
  3943  1EA1  0DF4               	rlf	___lwmod@divisor+1,f
  3944  1EA2  3EFF               	addlw	-1
  3945  1EA3  1D03               	skipz
  3946  1EA4  2E9F               	goto	u3335
  3947  1EA5                     l2520:	
  3948  1EA5  3001               	movlw	1
  3949  1EA6  00F7               	movwf	??___lwmod
  3950  1EA7  0877               	movf	??___lwmod,w
  3951  1EA8  07F8               	addwf	___lwmod@counter,f
  3952  1EA9                     l2522:	
  3953  1EA9  1FF4               	btfss	___lwmod@divisor+1,7
  3954  1EAA  2EAC               	goto	u3341
  3955  1EAB  2EAD               	goto	u3340
  3956  1EAC                     u3341:	
  3957  1EAC  2E9E               	goto	l2518
  3958  1EAD                     u3340:	
  3959  1EAD                     l2524:	
  3960  1EAD  0874               	movf	___lwmod@divisor+1,w
  3961  1EAE  0276               	subwf	___lwmod@dividend+1,w
  3962  1EAF  1D03               	skipz
  3963  1EB0  2EB3               	goto	u3355
  3964  1EB1  0873               	movf	___lwmod@divisor,w
  3965  1EB2  0275               	subwf	___lwmod@dividend,w
  3966  1EB3                     u3355:	
  3967  1EB3  1C03               	skipc
  3968  1EB4  2EB6               	goto	u3351
  3969  1EB5  2EB7               	goto	u3350
  3970  1EB6                     u3351:	
  3971  1EB6  2EBD               	goto	l2528
  3972  1EB7                     u3350:	
  3973  1EB7                     l2526:	
  3974  1EB7  0873               	movf	___lwmod@divisor,w
  3975  1EB8  02F5               	subwf	___lwmod@dividend,f
  3976  1EB9  0874               	movf	___lwmod@divisor+1,w
  3977  1EBA  1C03               	skipc
  3978  1EBB  03F6               	decf	___lwmod@dividend+1,f
  3979  1EBC  02F6               	subwf	___lwmod@dividend+1,f
  3980  1EBD                     l2528:	
  3981  1EBD  3001               	movlw	1
  3982  1EBE                     u3365:	
  3983  1EBE  1003               	clrc
  3984  1EBF  0CF4               	rrf	___lwmod@divisor+1,f
  3985  1EC0  0CF3               	rrf	___lwmod@divisor,f
  3986  1EC1  3EFF               	addlw	-1
  3987  1EC2  1D03               	skipz
  3988  1EC3  2EBE               	goto	u3365
  3989  1EC4                     l2530:	
  3990  1EC4  3001               	movlw	1
  3991  1EC5  02F8               	subwf	___lwmod@counter,f
  3992  1EC6  1D03               	btfss	3,2
  3993  1EC7  2EC9               	goto	u3371
  3994  1EC8  2ECA               	goto	u3370
  3995  1EC9                     u3371:	
  3996  1EC9  2EAD               	goto	l2524
  3997  1ECA                     u3370:	
  3998  1ECA                     l2532:	
  3999  1ECA  0876               	movf	___lwmod@dividend+1,w
  4000  1ECB  00F4               	movwf	?___lwmod+1
  4001  1ECC  0875               	movf	___lwmod@dividend,w
  4002  1ECD  00F3               	movwf	?___lwmod
  4003  1ECE                     l902:	
  4004  1ECE  0008               	return
  4005  1ECF                     __end_of___lwmod:	
  4006                           
  4007                           	psect	text8
  4008  10C8                     __ptext8:	
  4009 ;; *************** function ___lwdiv *****************
  4010 ;; Defined at:
  4011 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  divisor         2    0[BANK0 ] unsigned int 
  4014 ;;  dividend        2    2[BANK0 ] unsigned int 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  quotient        2    4[BANK0 ] unsigned int 
  4017 ;;  counter         1    6[BANK0 ] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  2    0[BANK0 ] unsigned int 
  4020 ;; Registers used:
  4021 ;;		wreg, status,2, status,0
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4027 ;;      Params:         0       4       0       0       0
  4028 ;;      Locals:         0       3       0       0       0
  4029 ;;      Temps:          1       0       0       0       0
  4030 ;;      Totals:         1       7       0       0       0
  4031 ;;Total ram usage:        8 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    2
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_fround
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           
  4042                           ;psect for function ___lwdiv
  4043  10C8                     ___lwdiv:	
  4044  10C8                     l2488:	
  4045                           ;incstack = 0
  4046                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4047                           
  4048  10C8  1283               	bcf	3,5	;RP0=0, select bank0
  4049  10C9  1303               	bcf	3,6	;RP1=0, select bank0
  4050  10CA  01A4               	clrf	___lwdiv@quotient
  4051  10CB  01A5               	clrf	___lwdiv@quotient+1
  4052  10CC                     l2490:	
  4053  10CC  0820               	movf	___lwdiv@divisor,w
  4054  10CD  0421               	iorwf	___lwdiv@divisor+1,w
  4055  10CE  1903               	btfsc	3,2
  4056  10CF  28D1               	goto	u3251
  4057  10D0  28D2               	goto	u3250
  4058  10D1                     u3251:	
  4059  10D1  2909               	goto	l2510
  4060  10D2                     u3250:	
  4061  10D2                     l2492:	
  4062  10D2  01A6               	clrf	___lwdiv@counter
  4063  10D3  0AA6               	incf	___lwdiv@counter,f
  4064  10D4  28E0               	goto	l2498
  4065  10D5                     l2494:	
  4066  10D5  3001               	movlw	1
  4067  10D6                     u3265:	
  4068  10D6  1003               	clrc
  4069  10D7  0DA0               	rlf	___lwdiv@divisor,f
  4070  10D8  0DA1               	rlf	___lwdiv@divisor+1,f
  4071  10D9  3EFF               	addlw	-1
  4072  10DA  1D03               	skipz
  4073  10DB  28D6               	goto	u3265
  4074  10DC                     l2496:	
  4075  10DC  3001               	movlw	1
  4076  10DD  00F9               	movwf	??___lwdiv
  4077  10DE  0879               	movf	??___lwdiv,w
  4078  10DF  07A6               	addwf	___lwdiv@counter,f
  4079  10E0                     l2498:	
  4080  10E0  1FA1               	btfss	___lwdiv@divisor+1,7
  4081  10E1  28E3               	goto	u3271
  4082  10E2  28E4               	goto	u3270
  4083  10E3                     u3271:	
  4084  10E3  28D5               	goto	l2494
  4085  10E4                     u3270:	
  4086  10E4                     l2500:	
  4087  10E4  3001               	movlw	1
  4088  10E5                     u3285:	
  4089  10E5  1003               	clrc
  4090  10E6  0DA4               	rlf	___lwdiv@quotient,f
  4091  10E7  0DA5               	rlf	___lwdiv@quotient+1,f
  4092  10E8  3EFF               	addlw	-1
  4093  10E9  1D03               	skipz
  4094  10EA  28E5               	goto	u3285
  4095  10EB  0821               	movf	___lwdiv@divisor+1,w
  4096  10EC  0223               	subwf	___lwdiv@dividend+1,w
  4097  10ED  1D03               	skipz
  4098  10EE  28F1               	goto	u3295
  4099  10EF  0820               	movf	___lwdiv@divisor,w
  4100  10F0  0222               	subwf	___lwdiv@dividend,w
  4101  10F1                     u3295:	
  4102  10F1  1C03               	skipc
  4103  10F2  28F4               	goto	u3291
  4104  10F3  28F5               	goto	u3290
  4105  10F4                     u3291:	
  4106  10F4  28FC               	goto	l2506
  4107  10F5                     u3290:	
  4108  10F5                     l2502:	
  4109  10F5  0820               	movf	___lwdiv@divisor,w
  4110  10F6  02A2               	subwf	___lwdiv@dividend,f
  4111  10F7  0821               	movf	___lwdiv@divisor+1,w
  4112  10F8  1C03               	skipc
  4113  10F9  03A3               	decf	___lwdiv@dividend+1,f
  4114  10FA  02A3               	subwf	___lwdiv@dividend+1,f
  4115  10FB                     l2504:	
  4116  10FB  1424               	bsf	___lwdiv@quotient,0
  4117  10FC                     l2506:	
  4118  10FC  3001               	movlw	1
  4119  10FD                     u3305:	
  4120  10FD  1003               	clrc
  4121  10FE  0CA1               	rrf	___lwdiv@divisor+1,f
  4122  10FF  0CA0               	rrf	___lwdiv@divisor,f
  4123  1100  3EFF               	addlw	-1
  4124  1101  1D03               	skipz
  4125  1102  28FD               	goto	u3305
  4126  1103                     l2508:	
  4127  1103  3001               	movlw	1
  4128  1104  02A6               	subwf	___lwdiv@counter,f
  4129  1105  1D03               	btfss	3,2
  4130  1106  2908               	goto	u3311
  4131  1107  2909               	goto	u3310
  4132  1108                     u3311:	
  4133  1108  28E4               	goto	l2500
  4134  1109                     u3310:	
  4135  1109                     l2510:	
  4136  1109  0825               	movf	___lwdiv@quotient+1,w
  4137  110A  00A1               	movwf	?___lwdiv+1
  4138  110B  0824               	movf	___lwdiv@quotient,w
  4139  110C  00A0               	movwf	?___lwdiv
  4140  110D                     l892:	
  4141  110D  0008               	return
  4142  110E                     __end_of___lwdiv:	
  4143                           
  4144                           	psect	text9
  4145  1CD4                     __ptext9:	
  4146 ;; *************** function ___bmul *****************
  4147 ;; Defined at:
  4148 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  multiplier      1    wreg     unsigned char 
  4151 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  multiplier      1   12[BANK0 ] unsigned char 
  4154 ;;  product         1   11[BANK0 ] unsigned char 
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      unsigned char 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4164 ;;      Params:         0       1       0       0       0
  4165 ;;      Locals:         0       2       0       0       0
  4166 ;;      Temps:          0       1       0       0       0
  4167 ;;      Totals:         0       4       0       0       0
  4168 ;;Total ram usage:        4 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; Hardware stack levels required when called:    2
  4171 ;; This function calls:
  4172 ;;		Nothing
  4173 ;; This function is called by:
  4174 ;;		_fround
  4175 ;;		_scale
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           
  4180                           ;psect for function ___bmul
  4181  1CD4                     ___bmul:	
  4182                           
  4183                           ;incstack = 0
  4184                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4185                           ;___bmul@multiplier stored from wreg
  4186  1CD4  1283               	bcf	3,5	;RP0=0, select bank0
  4187  1CD5  1303               	bcf	3,6	;RP1=0, select bank0
  4188  1CD6  00AC               	movwf	___bmul@multiplier
  4189  1CD7                     l2272:	
  4190  1CD7  01AB               	clrf	___bmul@product
  4191  1CD8                     l2274:	
  4192  1CD8  1C2C               	btfss	___bmul@multiplier,0
  4193  1CD9  2CDB               	goto	u2661
  4194  1CDA  2CDC               	goto	u2660
  4195  1CDB                     u2661:	
  4196  1CDB  2CE0               	goto	l2278
  4197  1CDC                     u2660:	
  4198  1CDC                     l2276:	
  4199  1CDC  0829               	movf	___bmul@multiplicand,w
  4200  1CDD  00AA               	movwf	??___bmul
  4201  1CDE  082A               	movf	??___bmul,w
  4202  1CDF  07AB               	addwf	___bmul@product,f
  4203  1CE0                     l2278:	
  4204  1CE0  1003               	clrc
  4205  1CE1  0DA9               	rlf	___bmul@multiplicand,f
  4206  1CE2                     l2280:	
  4207  1CE2  1003               	clrc
  4208  1CE3  0CAC               	rrf	___bmul@multiplier,f
  4209  1CE4  082C               	movf	___bmul@multiplier,w
  4210  1CE5  1D03               	btfss	3,2
  4211  1CE6  2CE8               	goto	u2671
  4212  1CE7  2CE9               	goto	u2670
  4213  1CE8                     u2671:	
  4214  1CE8  2CD8               	goto	l2274
  4215  1CE9                     u2670:	
  4216  1CE9                     l2282:	
  4217  1CE9  082B               	movf	___bmul@product,w
  4218  1CEA                     l476:	
  4219  1CEA  0008               	return
  4220  1CEB                     __end_of___bmul:	
  4221                           
  4222                           	psect	text10
  4223  138A                     __ptext10:	
  4224 ;; *************** function __tdiv_to_l_ *****************
  4225 ;; Defined at:
  4226 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  f1              3    3[COMMON] float 
  4229 ;;  f2              3    6[COMMON] float 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  quot            4    4[BANK0 ] unsigned long 
  4232 ;;  exp1            1    9[BANK0 ] unsigned char 
  4233 ;;  cntr            1    8[BANK0 ] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  4    3[COMMON] unsigned long 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4243 ;;      Params:         6       0       0       0       0
  4244 ;;      Locals:         0       6       0       0       0
  4245 ;;      Temps:          0       4       0       0       0
  4246 ;;      Totals:         6      10       0       0       0
  4247 ;;Total ram usage:       16 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    2
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_sprintf
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           
  4258                           ;psect for function __tdiv_to_l_
  4259  138A                     __tdiv_to_l_:	
  4260  138A                     l2642:	
  4261                           ;incstack = 0
  4262                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4263                           
  4264  138A  0873               	movf	__tdiv_to_l_@f1,w
  4265  138B  1283               	bcf	3,5	;RP0=0, select bank0
  4266  138C  1303               	bcf	3,6	;RP1=0, select bank0
  4267  138D  00A0               	movwf	??__tdiv_to_l_
  4268  138E  0874               	movf	__tdiv_to_l_@f1+1,w
  4269  138F  00A1               	movwf	??__tdiv_to_l_+1
  4270  1390  0875               	movf	__tdiv_to_l_@f1+2,w
  4271  1391  00A2               	movwf	??__tdiv_to_l_+2
  4272  1392  1003               	clrc
  4273  1393  0D21               	rlf	??__tdiv_to_l_+1,w
  4274  1394  0D22               	rlf	??__tdiv_to_l_+2,w
  4275  1395  00A3               	movwf	??__tdiv_to_l_+3
  4276  1396  0823               	movf	??__tdiv_to_l_+3,w
  4277  1397  00A9               	movwf	__tdiv_to_l_@exp1
  4278  1398  0829               	movf	__tdiv_to_l_@exp1,w
  4279  1399  1D03               	btfss	3,2
  4280  139A  2B9C               	goto	u3481
  4281  139B  2B9D               	goto	u3480
  4282  139C                     u3481:	
  4283  139C  2BA6               	goto	l2648
  4284  139D                     u3480:	
  4285  139D                     l2644:	
  4286  139D  3000               	movlw	0
  4287  139E  00F6               	movwf	?__tdiv_to_l_+3
  4288  139F  3000               	movlw	0
  4289  13A0  00F5               	movwf	?__tdiv_to_l_+2
  4290  13A1  3000               	movlw	0
  4291  13A2  00F4               	movwf	?__tdiv_to_l_+1
  4292  13A3  3000               	movlw	0
  4293  13A4  00F3               	movwf	?__tdiv_to_l_
  4294  13A5  2C46               	goto	l735
  4295  13A6                     l2648:	
  4296  13A6  0876               	movf	__tdiv_to_l_@f2,w
  4297  13A7  00A0               	movwf	??__tdiv_to_l_
  4298  13A8  0877               	movf	__tdiv_to_l_@f2+1,w
  4299  13A9  00A1               	movwf	??__tdiv_to_l_+1
  4300  13AA  0878               	movf	__tdiv_to_l_@f2+2,w
  4301  13AB  00A2               	movwf	??__tdiv_to_l_+2
  4302  13AC  1003               	clrc
  4303  13AD  0D21               	rlf	??__tdiv_to_l_+1,w
  4304  13AE  0D22               	rlf	??__tdiv_to_l_+2,w
  4305  13AF  00A3               	movwf	??__tdiv_to_l_+3
  4306  13B0  0823               	movf	??__tdiv_to_l_+3,w
  4307  13B1  00A8               	movwf	__tdiv_to_l_@cntr
  4308  13B2  0828               	movf	__tdiv_to_l_@cntr,w
  4309  13B3  1D03               	btfss	3,2
  4310  13B4  2BB6               	goto	u3491
  4311  13B5  2BB7               	goto	u3490
  4312  13B6                     u3491:	
  4313  13B6  2BB8               	goto	l736
  4314  13B7                     u3490:	
  4315  13B7  2B9D               	goto	l2644
  4316  13B8                     l736:	
  4317  13B8  17F4               	bsf	__tdiv_to_l_@f1+1,7
  4318  13B9                     l2654:	
  4319  13B9  30FF               	movlw	255
  4320  13BA  05F3               	andwf	__tdiv_to_l_@f1,f
  4321  13BB  30FF               	movlw	255
  4322  13BC  05F4               	andwf	__tdiv_to_l_@f1+1,f
  4323  13BD  3000               	movlw	0
  4324  13BE  05F5               	andwf	__tdiv_to_l_@f1+2,f
  4325  13BF                     l2656:	
  4326  13BF  17F7               	bsf	__tdiv_to_l_@f2+1,7
  4327  13C0  30FF               	movlw	255
  4328  13C1  05F6               	andwf	__tdiv_to_l_@f2,f
  4329  13C2  30FF               	movlw	255
  4330  13C3  05F7               	andwf	__tdiv_to_l_@f2+1,f
  4331  13C4  3000               	movlw	0
  4332  13C5  05F8               	andwf	__tdiv_to_l_@f2+2,f
  4333  13C6  3000               	movlw	0
  4334  13C7  00A7               	movwf	__tdiv_to_l_@quot+3
  4335  13C8  3000               	movlw	0
  4336  13C9  00A6               	movwf	__tdiv_to_l_@quot+2
  4337  13CA  3000               	movlw	0
  4338  13CB  00A5               	movwf	__tdiv_to_l_@quot+1
  4339  13CC  3000               	movlw	0
  4340  13CD  00A4               	movwf	__tdiv_to_l_@quot
  4341  13CE                     l2658:	
  4342  13CE  307F               	movlw	127
  4343  13CF  02A9               	subwf	__tdiv_to_l_@exp1,f
  4344  13D0                     l2660:	
  4345  13D0  3098               	movlw	152
  4346  13D1  0728               	addwf	__tdiv_to_l_@cntr,w
  4347  13D2  00A0               	movwf	??__tdiv_to_l_
  4348  13D3  0820               	movf	??__tdiv_to_l_,w
  4349  13D4  02A9               	subwf	__tdiv_to_l_@exp1,f
  4350  13D5  3018               	movlw	24
  4351  13D6  00A0               	movwf	??__tdiv_to_l_
  4352  13D7  0820               	movf	??__tdiv_to_l_,w
  4353  13D8  00A8               	movwf	__tdiv_to_l_@cntr
  4354  13D9                     l2662:	
  4355  13D9  3001               	movlw	1
  4356  13DA  00A0               	movwf	??__tdiv_to_l_
  4357  13DB                     u3505:	
  4358  13DB  1003               	clrc
  4359  13DC  0DA4               	rlf	__tdiv_to_l_@quot,f
  4360  13DD  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4361  13DE  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4362  13DF  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4363  13E0  0BA0               	decfsz	??__tdiv_to_l_,f
  4364  13E1  2BDB               	goto	u3505
  4365  13E2                     l2664:	
  4366  13E2  0878               	movf	__tdiv_to_l_@f2+2,w
  4367  13E3  0275               	subwf	__tdiv_to_l_@f1+2,w
  4368  13E4  1D03               	skipz
  4369  13E5  2BEC               	goto	u3515
  4370  13E6  0877               	movf	__tdiv_to_l_@f2+1,w
  4371  13E7  0274               	subwf	__tdiv_to_l_@f1+1,w
  4372  13E8  1D03               	skipz
  4373  13E9  2BEC               	goto	u3515
  4374  13EA  0876               	movf	__tdiv_to_l_@f2,w
  4375  13EB  0273               	subwf	__tdiv_to_l_@f1,w
  4376  13EC                     u3515:	
  4377  13EC  1C03               	skipc
  4378  13ED  2BEF               	goto	u3511
  4379  13EE  2BF0               	goto	u3510
  4380  13EF                     u3511:	
  4381  13EF  2BFB               	goto	l2670
  4382  13F0                     u3510:	
  4383  13F0                     l2666:	
  4384  13F0  0876               	movf	__tdiv_to_l_@f2,w
  4385  13F1  02F3               	subwf	__tdiv_to_l_@f1,f
  4386  13F2  0877               	movf	__tdiv_to_l_@f2+1,w
  4387  13F3  1C03               	skipc
  4388  13F4  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  4389  13F5  02F4               	subwf	__tdiv_to_l_@f1+1,f
  4390  13F6  0878               	movf	__tdiv_to_l_@f2+2,w
  4391  13F7  1C03               	skipc
  4392  13F8  0A78               	incf	__tdiv_to_l_@f2+2,w
  4393  13F9  02F5               	subwf	__tdiv_to_l_@f1+2,f
  4394  13FA                     l2668:	
  4395  13FA  1424               	bsf	__tdiv_to_l_@quot,0
  4396  13FB                     l2670:	
  4397  13FB  3001               	movlw	1
  4398  13FC                     u3525:	
  4399  13FC  1003               	clrc
  4400  13FD  0DF3               	rlf	__tdiv_to_l_@f1,f
  4401  13FE  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  4402  13FF  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  4403  1400  3EFF               	addlw	-1
  4404  1401  1D03               	skipz
  4405  1402  2BFC               	goto	u3525
  4406  1403                     l2672:	
  4407  1403  3001               	movlw	1
  4408  1404  02A8               	subwf	__tdiv_to_l_@cntr,f
  4409  1405  1D03               	btfss	3,2
  4410  1406  2C08               	goto	u3531
  4411  1407  2C09               	goto	u3530
  4412  1408                     u3531:	
  4413  1408  2BD9               	goto	l2662
  4414  1409                     u3530:	
  4415  1409                     l739:	
  4416  1409  1FA9               	btfss	__tdiv_to_l_@exp1,7
  4417  140A  2C0C               	goto	u3541
  4418  140B  2C0D               	goto	u3540
  4419  140C                     u3541:	
  4420  140C  2C27               	goto	l2682
  4421  140D                     u3540:	
  4422  140D                     l2674:	
  4423  140D  0829               	movf	__tdiv_to_l_@exp1,w
  4424  140E  3A80               	xorlw	128
  4425  140F  3E97               	addlw	151
  4426  1410  1803               	skipnc
  4427  1411  2C13               	goto	u3551
  4428  1412  2C14               	goto	u3550
  4429  1413                     u3551:	
  4430  1413  2C15               	goto	l2680
  4431  1414                     u3550:	
  4432  1414  2B9D               	goto	l2644
  4433  1415                     l2680:	
  4434  1415  3001               	movlw	1
  4435  1416                     u3565:	
  4436  1416  1003               	clrc
  4437  1417  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  4438  1418  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  4439  1419  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  4440  141A  0CA4               	rrf	__tdiv_to_l_@quot,f
  4441  141B  3EFF               	addlw	-1
  4442  141C  1D03               	skipz
  4443  141D  2C16               	goto	u3565
  4444  141E  3001               	movlw	1
  4445  141F  00A0               	movwf	??__tdiv_to_l_
  4446  1420  0820               	movf	??__tdiv_to_l_,w
  4447  1421  07A9               	addwf	__tdiv_to_l_@exp1,f
  4448  1422  1D03               	btfss	3,2
  4449  1423  2C25               	goto	u3571
  4450  1424  2C26               	goto	u3570
  4451  1425                     u3571:	
  4452  1425  2C15               	goto	l2680
  4453  1426                     u3570:	
  4454  1426  2C3E               	goto	l2690
  4455  1427                     l2682:	
  4456  1427  3018               	movlw	24
  4457  1428  0229               	subwf	__tdiv_to_l_@exp1,w
  4458  1429  1C03               	skipc
  4459  142A  2C2C               	goto	u3581
  4460  142B  2C2D               	goto	u3580
  4461  142C                     u3581:	
  4462  142C  2C39               	goto	l746
  4463  142D                     u3580:	
  4464  142D  2B9D               	goto	l2644
  4465  142E                     l2688:	
  4466  142E  3001               	movlw	1
  4467  142F  00A0               	movwf	??__tdiv_to_l_
  4468  1430                     u3595:	
  4469  1430  1003               	clrc
  4470  1431  0DA4               	rlf	__tdiv_to_l_@quot,f
  4471  1432  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  4472  1433  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  4473  1434  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  4474  1435  0BA0               	decfsz	??__tdiv_to_l_,f
  4475  1436  2C30               	goto	u3595
  4476  1437  3001               	movlw	1
  4477  1438  02A9               	subwf	__tdiv_to_l_@exp1,f
  4478  1439                     l746:	
  4479  1439  0829               	movf	__tdiv_to_l_@exp1,w
  4480  143A  1D03               	btfss	3,2
  4481  143B  2C3D               	goto	u3601
  4482  143C  2C3E               	goto	u3600
  4483  143D                     u3601:	
  4484  143D  2C2E               	goto	l2688
  4485  143E                     u3600:	
  4486  143E                     l2690:	
  4487  143E  0827               	movf	__tdiv_to_l_@quot+3,w
  4488  143F  00F6               	movwf	?__tdiv_to_l_+3
  4489  1440  0826               	movf	__tdiv_to_l_@quot+2,w
  4490  1441  00F5               	movwf	?__tdiv_to_l_+2
  4491  1442  0825               	movf	__tdiv_to_l_@quot+1,w
  4492  1443  00F4               	movwf	?__tdiv_to_l_+1
  4493  1444  0824               	movf	__tdiv_to_l_@quot,w
  4494  1445  00F3               	movwf	?__tdiv_to_l_
  4495  1446                     l735:	
  4496  1446  0008               	return
  4497  1447                     __end_of__tdiv_to_l_:	
  4498                           
  4499                           	psect	text11
  4500  0829                     __ptext11:	
  4501 ;; *************** function __div_to_l_ *****************
  4502 ;; Defined at:
  4503 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  f1              3    3[COMMON] unsigned long 
  4506 ;;  f2              3    6[COMMON] unsigned long 
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  quot            4    8[BANK0 ] unsigned long 
  4509 ;;  exp1            1   13[BANK0 ] unsigned char 
  4510 ;;  cntr            1   12[BANK0 ] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  4    3[COMMON] unsigned long 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4520 ;;      Params:         6       0       0       0       0
  4521 ;;      Locals:         0       6       0       0       0
  4522 ;;      Temps:          0       8       0       0       0
  4523 ;;      Totals:         6      14       0       0       0
  4524 ;;Total ram usage:       20 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    2
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_sprintf
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           
  4535                           ;psect for function __div_to_l_
  4536  0829                     __div_to_l_:	
  4537  0829                     l2694:	
  4538                           ;incstack = 0
  4539                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  4540                           
  4541  0829  3073               	movlw	low (__div_to_l_@f1| 0)
  4542  082A  0084               	movwf	4
  4543  082B  0800               	movf	0,w
  4544  082C  1283               	bcf	3,5	;RP0=0, select bank0
  4545  082D  1303               	bcf	3,6	;RP1=0, select bank0
  4546  082E  00A0               	movwf	??__div_to_l_
  4547  082F  0A84               	incf	4,f
  4548  0830  0800               	movf	0,w
  4549  0831  00A1               	movwf	??__div_to_l_+1
  4550  0832  0A84               	incf	4,f
  4551  0833  0800               	movf	0,w
  4552  0834  00A2               	movwf	??__div_to_l_+2
  4553  0835  0A84               	incf	4,f
  4554  0836  0800               	movf	0,w
  4555  0837  00A3               	movwf	??__div_to_l_+3
  4556  0838  1003               	clrc
  4557  0839  0D22               	rlf	??__div_to_l_+2,w
  4558  083A  0D23               	rlf	??__div_to_l_+3,w
  4559  083B  00A4               	movwf	??__div_to_l_+4
  4560  083C  0824               	movf	??__div_to_l_+4,w
  4561  083D  00AD               	movwf	__div_to_l_@exp1
  4562  083E  082D               	movf	__div_to_l_@exp1,w
  4563  083F  1D03               	btfss	3,2
  4564  0840  2842               	goto	u3611
  4565  0841  2843               	goto	u3610
  4566  0842                     u3611:	
  4567  0842  284C               	goto	l2700
  4568  0843                     u3610:	
  4569  0843                     l2696:	
  4570  0843  3000               	movlw	0
  4571  0844  00F6               	movwf	?__div_to_l_+3
  4572  0845  3000               	movlw	0
  4573  0846  00F5               	movwf	?__div_to_l_+2
  4574  0847  3000               	movlw	0
  4575  0848  00F4               	movwf	?__div_to_l_+1
  4576  0849  3000               	movlw	0
  4577  084A  00F3               	movwf	?__div_to_l_
  4578  084B  2954               	goto	l656
  4579  084C                     l2700:	
  4580  084C  3076               	movlw	low (__div_to_l_@f2| 0)
  4581  084D  0084               	movwf	4
  4582  084E  0800               	movf	0,w
  4583  084F  00A0               	movwf	??__div_to_l_
  4584  0850  0A84               	incf	4,f
  4585  0851  0800               	movf	0,w
  4586  0852  00A1               	movwf	??__div_to_l_+1
  4587  0853  0A84               	incf	4,f
  4588  0854  0800               	movf	0,w
  4589  0855  00A2               	movwf	??__div_to_l_+2
  4590  0856  0A84               	incf	4,f
  4591  0857  0800               	movf	0,w
  4592  0858  00A3               	movwf	??__div_to_l_+3
  4593  0859  1003               	clrc
  4594  085A  0D22               	rlf	??__div_to_l_+2,w
  4595  085B  0D23               	rlf	??__div_to_l_+3,w
  4596  085C  00A4               	movwf	??__div_to_l_+4
  4597  085D  0824               	movf	??__div_to_l_+4,w
  4598  085E  00AC               	movwf	__div_to_l_@cntr
  4599  085F  082C               	movf	__div_to_l_@cntr,w
  4600  0860  1D03               	btfss	3,2
  4601  0861  2863               	goto	u3621
  4602  0862  2864               	goto	u3620
  4603  0863                     u3621:	
  4604  0863  2865               	goto	l2706
  4605  0864                     u3620:	
  4606  0864  2843               	goto	l2696
  4607  0865                     l2706:	
  4608  0865  3073               	movlw	low (__div_to_l_@f1| 0)
  4609  0866  0084               	movwf	4
  4610  0867  3000               	movlw	0
  4611  0868  0480               	iorwf	0,f
  4612  0869  0A84               	incf	4,f
  4613  086A  3000               	movlw	0
  4614  086B  0480               	iorwf	0,f
  4615  086C  0A84               	incf	4,f
  4616  086D  3080               	movlw	128
  4617  086E  0480               	iorwf	0,f
  4618  086F  0A84               	incf	4,f
  4619  0870  3000               	movlw	0
  4620  0871  0480               	iorwf	0,f
  4621  0872  3073               	movlw	low (__div_to_l_@f1| 0)
  4622  0873  0084               	movwf	4
  4623  0874  30FF               	movlw	255
  4624  0875  0580               	andwf	0,f
  4625  0876  0A84               	incf	4,f
  4626  0877  30FF               	movlw	255
  4627  0878  0580               	andwf	0,f
  4628  0879  0A84               	incf	4,f
  4629  087A  30FF               	movlw	255
  4630  087B  0580               	andwf	0,f
  4631  087C  0A84               	incf	4,f
  4632  087D  3000               	movlw	0
  4633  087E  0580               	andwf	0,f
  4634  087F  3076               	movlw	low (__div_to_l_@f2| 0)
  4635  0880  0084               	movwf	4
  4636  0881  3000               	movlw	0
  4637  0882  0480               	iorwf	0,f
  4638  0883  0A84               	incf	4,f
  4639  0884  3000               	movlw	0
  4640  0885  0480               	iorwf	0,f
  4641  0886  0A84               	incf	4,f
  4642  0887  3080               	movlw	128
  4643  0888  0480               	iorwf	0,f
  4644  0889  0A84               	incf	4,f
  4645  088A  3000               	movlw	0
  4646  088B  0480               	iorwf	0,f
  4647  088C  3076               	movlw	low (__div_to_l_@f2| 0)
  4648  088D  0084               	movwf	4
  4649  088E  30FF               	movlw	255
  4650  088F  0580               	andwf	0,f
  4651  0890  0A84               	incf	4,f
  4652  0891  30FF               	movlw	255
  4653  0892  0580               	andwf	0,f
  4654  0893  0A84               	incf	4,f
  4655  0894  30FF               	movlw	255
  4656  0895  0580               	andwf	0,f
  4657  0896  0A84               	incf	4,f
  4658  0897  3000               	movlw	0
  4659  0898  0580               	andwf	0,f
  4660  0899                     l2708:	
  4661  0899  3000               	movlw	0
  4662  089A  00AB               	movwf	__div_to_l_@quot+3
  4663  089B  3000               	movlw	0
  4664  089C  00AA               	movwf	__div_to_l_@quot+2
  4665  089D  3000               	movlw	0
  4666  089E  00A9               	movwf	__div_to_l_@quot+1
  4667  089F  3000               	movlw	0
  4668  08A0  00A8               	movwf	__div_to_l_@quot
  4669  08A1                     l2710:	
  4670  08A1  307F               	movlw	127
  4671  08A2  02AD               	subwf	__div_to_l_@exp1,f
  4672  08A3                     l2712:	
  4673  08A3  30A0               	movlw	160
  4674  08A4  072C               	addwf	__div_to_l_@cntr,w
  4675  08A5  00A0               	movwf	??__div_to_l_
  4676  08A6  0820               	movf	??__div_to_l_,w
  4677  08A7  02AD               	subwf	__div_to_l_@exp1,f
  4678  08A8                     l2714:	
  4679  08A8  3020               	movlw	32
  4680  08A9  00A0               	movwf	??__div_to_l_
  4681  08AA  0820               	movf	??__div_to_l_,w
  4682  08AB  00AC               	movwf	__div_to_l_@cntr
  4683  08AC                     l2716:	
  4684  08AC  3001               	movlw	1
  4685  08AD  00A0               	movwf	??__div_to_l_
  4686  08AE                     u3635:	
  4687  08AE  1003               	clrc
  4688  08AF  0DA8               	rlf	__div_to_l_@quot,f
  4689  08B0  0DA9               	rlf	__div_to_l_@quot+1,f
  4690  08B1  0DAA               	rlf	__div_to_l_@quot+2,f
  4691  08B2  0DAB               	rlf	__div_to_l_@quot+3,f
  4692  08B3  0BA0               	decfsz	??__div_to_l_,f
  4693  08B4  28AE               	goto	u3635
  4694  08B5                     l2718:	
  4695  08B5  3076               	movlw	low (__div_to_l_@f2| 0)
  4696  08B6  0084               	movwf	4
  4697  08B7  0800               	movf	0,w
  4698  08B8  00A0               	movwf	??__div_to_l_
  4699  08B9  0A84               	incf	4,f
  4700  08BA  0800               	movf	0,w
  4701  08BB  00A1               	movwf	??__div_to_l_+1
  4702  08BC  0A84               	incf	4,f
  4703  08BD  0800               	movf	0,w
  4704  08BE  00A2               	movwf	??__div_to_l_+2
  4705  08BF  0A84               	incf	4,f
  4706  08C0  0800               	movf	0,w
  4707  08C1  00A3               	movwf	??__div_to_l_+3
  4708  08C2  3073               	movlw	low (__div_to_l_@f1| 0)
  4709  08C3  0084               	movwf	4
  4710  08C4  0800               	movf	0,w
  4711  08C5  00A4               	movwf	??__div_to_l_+4
  4712  08C6  0A84               	incf	4,f
  4713  08C7  0800               	movf	0,w
  4714  08C8  00A5               	movwf	??__div_to_l_+5
  4715  08C9  0A84               	incf	4,f
  4716  08CA  0800               	movf	0,w
  4717  08CB  00A6               	movwf	??__div_to_l_+6
  4718  08CC  0A84               	incf	4,f
  4719  08CD  0800               	movf	0,w
  4720  08CE  00A7               	movwf	??__div_to_l_+7
  4721  08CF  0823               	movf	??__div_to_l_+3,w
  4722  08D0  0227               	subwf	??__div_to_l_+7,w
  4723  08D1  1D03               	skipz
  4724  08D2  28DD               	goto	u3645
  4725  08D3  0822               	movf	??__div_to_l_+2,w
  4726  08D4  0226               	subwf	??__div_to_l_+6,w
  4727  08D5  1D03               	skipz
  4728  08D6  28DD               	goto	u3645
  4729  08D7  0821               	movf	??__div_to_l_+1,w
  4730  08D8  0225               	subwf	??__div_to_l_+5,w
  4731  08D9  1D03               	skipz
  4732  08DA  28DD               	goto	u3645
  4733  08DB  0820               	movf	??__div_to_l_,w
  4734  08DC  0224               	subwf	??__div_to_l_+4,w
  4735  08DD                     u3645:	
  4736  08DD  1C03               	skipc
  4737  08DE  28E0               	goto	u3641
  4738  08DF  28E1               	goto	u3640
  4739  08E0                     u3641:	
  4740  08E0  2904               	goto	l659
  4741  08E1                     u3640:	
  4742  08E1                     l2720:	
  4743  08E1  3076               	movlw	low (__div_to_l_@f2| 0)
  4744  08E2  0084               	movwf	4
  4745  08E3  0800               	movf	0,w
  4746  08E4  00A0               	movwf	??__div_to_l_
  4747  08E5  0A84               	incf	4,f
  4748  08E6  0800               	movf	0,w
  4749  08E7  00A1               	movwf	??__div_to_l_+1
  4750  08E8  0A84               	incf	4,f
  4751  08E9  0800               	movf	0,w
  4752  08EA  00A2               	movwf	??__div_to_l_+2
  4753  08EB  0A84               	incf	4,f
  4754  08EC  0800               	movf	0,w
  4755  08ED  00A3               	movwf	??__div_to_l_+3
  4756  08EE  3073               	movlw	low (__div_to_l_@f1| 0)
  4757  08EF  0084               	movwf	4
  4758  08F0  0820               	movf	??__div_to_l_,w
  4759  08F1  0280               	subwf	0,f
  4760  08F2  0A84               	incf	4,f
  4761  08F3  0821               	movf	??__div_to_l_+1,w
  4762  08F4  1C03               	skipc
  4763  08F5  0F21               	incfsz	??__div_to_l_+1,w
  4764  08F6  0280               	subwf	0,f
  4765  08F7  0A84               	incf	4,f
  4766  08F8  0822               	movf	??__div_to_l_+2,w
  4767  08F9  1C03               	skipc
  4768  08FA  0F22               	incfsz	??__div_to_l_+2,w
  4769  08FB  0280               	subwf	0,f
  4770  08FC  0A84               	incf	4,f
  4771  08FD  0823               	movf	??__div_to_l_+3,w
  4772  08FE  1C03               	skipc
  4773  08FF  0A23               	incf	??__div_to_l_+3,w
  4774  0900  0280               	subwf	0,f
  4775  0901  3003               	movlw	3
  4776  0902  0284               	subwf	4,f
  4777  0903                     l2722:	
  4778  0903  1428               	bsf	__div_to_l_@quot,0
  4779  0904                     l659:	
  4780  0904  3073               	movlw	low (__div_to_l_@f1| 0)
  4781  0905  0084               	movwf	4
  4782  0906  1003               	clrc
  4783  0907  0D80               	rlf	0,f
  4784  0908  0A84               	incf	4,f
  4785  0909  0D80               	rlf	0,f
  4786  090A  0A84               	incf	4,f
  4787  090B  0D80               	rlf	0,f
  4788  090C  0A84               	incf	4,f
  4789  090D  0D80               	rlf	0,f
  4790  090E  0384               	decf	4,f
  4791  090F  0384               	decf	4,f
  4792  0910  0384               	decf	4,f
  4793  0911                     l2724:	
  4794  0911  3001               	movlw	1
  4795  0912  02AC               	subwf	__div_to_l_@cntr,f
  4796  0913  1D03               	btfss	3,2
  4797  0914  2916               	goto	u3651
  4798  0915  2917               	goto	u3650
  4799  0916                     u3651:	
  4800  0916  28AC               	goto	l2716
  4801  0917                     u3650:	
  4802  0917                     l660:	
  4803  0917  1FAD               	btfss	__div_to_l_@exp1,7
  4804  0918  291A               	goto	u3661
  4805  0919  291B               	goto	u3660
  4806  091A                     u3661:	
  4807  091A  2935               	goto	l2734
  4808  091B                     u3660:	
  4809  091B                     l2726:	
  4810  091B  082D               	movf	__div_to_l_@exp1,w
  4811  091C  3A80               	xorlw	128
  4812  091D  3E9F               	addlw	159
  4813  091E  1803               	skipnc
  4814  091F  2921               	goto	u3671
  4815  0920  2922               	goto	u3670
  4816  0921                     u3671:	
  4817  0921  2923               	goto	l2732
  4818  0922                     u3670:	
  4819  0922  2843               	goto	l2696
  4820  0923                     l2732:	
  4821  0923  3001               	movlw	1
  4822  0924                     u3685:	
  4823  0924  1003               	clrc
  4824  0925  0CAB               	rrf	__div_to_l_@quot+3,f
  4825  0926  0CAA               	rrf	__div_to_l_@quot+2,f
  4826  0927  0CA9               	rrf	__div_to_l_@quot+1,f
  4827  0928  0CA8               	rrf	__div_to_l_@quot,f
  4828  0929  3EFF               	addlw	-1
  4829  092A  1D03               	skipz
  4830  092B  2924               	goto	u3685
  4831  092C  3001               	movlw	1
  4832  092D  00A0               	movwf	??__div_to_l_
  4833  092E  0820               	movf	??__div_to_l_,w
  4834  092F  07AD               	addwf	__div_to_l_@exp1,f
  4835  0930  1D03               	btfss	3,2
  4836  0931  2933               	goto	u3691
  4837  0932  2934               	goto	u3690
  4838  0933                     u3691:	
  4839  0933  2923               	goto	l2732
  4840  0934                     u3690:	
  4841  0934  294C               	goto	l2742
  4842  0935                     l2734:	
  4843  0935  3020               	movlw	32
  4844  0936  022D               	subwf	__div_to_l_@exp1,w
  4845  0937  1C03               	skipc
  4846  0938  293A               	goto	u3701
  4847  0939  293B               	goto	u3700
  4848  093A                     u3701:	
  4849  093A  2947               	goto	l667
  4850  093B                     u3700:	
  4851  093B  2843               	goto	l2696
  4852  093C                     l2740:	
  4853  093C  3001               	movlw	1
  4854  093D  00A0               	movwf	??__div_to_l_
  4855  093E                     u3715:	
  4856  093E  1003               	clrc
  4857  093F  0DA8               	rlf	__div_to_l_@quot,f
  4858  0940  0DA9               	rlf	__div_to_l_@quot+1,f
  4859  0941  0DAA               	rlf	__div_to_l_@quot+2,f
  4860  0942  0DAB               	rlf	__div_to_l_@quot+3,f
  4861  0943  0BA0               	decfsz	??__div_to_l_,f
  4862  0944  293E               	goto	u3715
  4863  0945  3001               	movlw	1
  4864  0946  02AD               	subwf	__div_to_l_@exp1,f
  4865  0947                     l667:	
  4866  0947  082D               	movf	__div_to_l_@exp1,w
  4867  0948  1D03               	btfss	3,2
  4868  0949  294B               	goto	u3721
  4869  094A  294C               	goto	u3720
  4870  094B                     u3721:	
  4871  094B  293C               	goto	l2740
  4872  094C                     u3720:	
  4873  094C                     l2742:	
  4874  094C  082B               	movf	__div_to_l_@quot+3,w
  4875  094D  00F6               	movwf	?__div_to_l_+3
  4876  094E  082A               	movf	__div_to_l_@quot+2,w
  4877  094F  00F5               	movwf	?__div_to_l_+2
  4878  0950  0829               	movf	__div_to_l_@quot+1,w
  4879  0951  00F4               	movwf	?__div_to_l_+1
  4880  0952  0828               	movf	__div_to_l_@quot,w
  4881  0953  00F3               	movwf	?__div_to_l_
  4882  0954                     l656:	
  4883  0954  0008               	return
  4884  0955                     __end_of__div_to_l_:	
  4885                           
  4886                           	psect	text12
  4887  1D30                     __ptext12:	
  4888 ;; *************** function ___wmul *****************
  4889 ;; Defined at:
  4890 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  multiplier      2    3[COMMON] unsigned int 
  4893 ;;  multiplicand    2    5[COMMON] unsigned int 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  product         2    7[COMMON] unsigned int 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  2    3[COMMON] unsigned int 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4905 ;;      Params:         4       0       0       0       0
  4906 ;;      Locals:         2       0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0
  4908 ;;      Totals:         6       0       0       0       0
  4909 ;;Total ram usage:        6 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    2
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_sprintf
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           
  4920                           ;psect for function ___wmul
  4921  1D30                     ___wmul:	
  4922  1D30                     l2746:	
  4923                           ;incstack = 0
  4924                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4925                           
  4926  1D30  01F7               	clrf	___wmul@product
  4927  1D31  01F8               	clrf	___wmul@product+1
  4928  1D32                     l2748:	
  4929  1D32  1C73               	btfss	___wmul@multiplier,0
  4930  1D33  2D35               	goto	u3731
  4931  1D34  2D36               	goto	u3730
  4932  1D35                     u3731:	
  4933  1D35  2D3C               	goto	l450
  4934  1D36                     u3730:	
  4935  1D36                     l2750:	
  4936  1D36  0875               	movf	___wmul@multiplicand,w
  4937  1D37  07F7               	addwf	___wmul@product,f
  4938  1D38  1803               	skipnc
  4939  1D39  0AF8               	incf	___wmul@product+1,f
  4940  1D3A  0876               	movf	___wmul@multiplicand+1,w
  4941  1D3B  07F8               	addwf	___wmul@product+1,f
  4942  1D3C                     l450:	
  4943  1D3C  3001               	movlw	1
  4944  1D3D                     u3745:	
  4945  1D3D  1003               	clrc
  4946  1D3E  0DF5               	rlf	___wmul@multiplicand,f
  4947  1D3F  0DF6               	rlf	___wmul@multiplicand+1,f
  4948  1D40  3EFF               	addlw	-1
  4949  1D41  1D03               	skipz
  4950  1D42  2D3D               	goto	u3745
  4951  1D43                     l2752:	
  4952  1D43  3001               	movlw	1
  4953  1D44                     u3755:	
  4954  1D44  1003               	clrc
  4955  1D45  0CF4               	rrf	___wmul@multiplier+1,f
  4956  1D46  0CF3               	rrf	___wmul@multiplier,f
  4957  1D47  3EFF               	addlw	-1
  4958  1D48  1D03               	skipz
  4959  1D49  2D44               	goto	u3755
  4960  1D4A                     l2754:	
  4961  1D4A  0873               	movf	___wmul@multiplier,w
  4962  1D4B  0474               	iorwf	___wmul@multiplier+1,w
  4963  1D4C  1D03               	btfss	3,2
  4964  1D4D  2D4F               	goto	u3761
  4965  1D4E  2D50               	goto	u3760
  4966  1D4F                     u3761:	
  4967  1D4F  2D32               	goto	l2748
  4968  1D50                     u3760:	
  4969  1D50                     l2756:	
  4970  1D50  0878               	movf	___wmul@product+1,w
  4971  1D51  00F4               	movwf	?___wmul+1
  4972  1D52  0877               	movf	___wmul@product,w
  4973  1D53  00F3               	movwf	?___wmul
  4974  1D54                     l452:	
  4975  1D54  0008               	return
  4976  1D55                     __end_of___wmul:	
  4977                           
  4978                           	psect	text13
  4979  1E2A                     __ptext13:	
  4980 ;; *************** function ___lltoft *****************
  4981 ;; Defined at:
  4982 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lltoft.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  c               4    3[BANK0 ] unsigned long 
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;  exp             1    9[COMMON] unsigned char 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  3    3[BANK0 ] float 
  4989 ;; Registers used:
  4990 ;;		wreg, status,2, status,0, pclath, cstack
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4996 ;;      Params:         0       4       0       0       0
  4997 ;;      Locals:         1       0       0       0       0
  4998 ;;      Temps:          1       0       0       0       0
  4999 ;;      Totals:         2       4       0       0       0
  5000 ;;Total ram usage:        6 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    3
  5003 ;; This function calls:
  5004 ;;		___ftpack
  5005 ;; This function is called by:
  5006 ;;		_sprintf
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           
  5011                           ;psect for function ___lltoft
  5012  1E2A                     ___lltoft:	
  5013  1E2A                     l3898:	
  5014                           ;incstack = 0
  5015                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5016                           
  5017  1E2A  308E               	movlw	142
  5018  1E2B  00F8               	movwf	??___lltoft
  5019  1E2C  0878               	movf	??___lltoft,w
  5020  1E2D  00F9               	movwf	___lltoft@exp
  5021  1E2E  2E3C               	goto	l3902
  5022  1E2F                     l3900:	
  5023  1E2F  3001               	movlw	1
  5024  1E30                     u5915:	
  5025  1E30  1003               	clrc
  5026  1E31  0CA6               	rrf	___lltoft@c+3,f
  5027  1E32  0CA5               	rrf	___lltoft@c+2,f
  5028  1E33  0CA4               	rrf	___lltoft@c+1,f
  5029  1E34  0CA3               	rrf	___lltoft@c,f
  5030  1E35  3EFF               	addlw	-1
  5031  1E36  1D03               	skipz
  5032  1E37  2E30               	goto	u5915
  5033  1E38  3001               	movlw	1
  5034  1E39  00F8               	movwf	??___lltoft
  5035  1E3A  0878               	movf	??___lltoft,w
  5036  1E3B  07F9               	addwf	___lltoft@exp,f
  5037  1E3C                     l3902:	
  5038  1E3C  30FF               	movlw	255
  5039  1E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5040  1E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5041  1E3F  0526               	andwf	___lltoft@c+3,w
  5042  1E40  1D03               	btfss	3,2
  5043  1E41  2E43               	goto	u5921
  5044  1E42  2E44               	goto	u5920
  5045  1E43                     u5921:	
  5046  1E43  2E2F               	goto	l3900
  5047  1E44                     u5920:	
  5048  1E44                     l3904:	
  5049  1E44  0823               	movf	___lltoft@c,w
  5050  1E45  00F3               	movwf	___ftpack@arg
  5051  1E46  0824               	movf	___lltoft@c+1,w
  5052  1E47  00F4               	movwf	___ftpack@arg+1
  5053  1E48  0825               	movf	___lltoft@c+2,w
  5054  1E49  00F5               	movwf	___ftpack@arg+2
  5055  1E4A  0879               	movf	___lltoft@exp,w
  5056  1E4B  00F8               	movwf	??___lltoft
  5057  1E4C  0878               	movf	??___lltoft,w
  5058  1E4D  00F6               	movwf	___ftpack@exp
  5059  1E4E  01F7               	clrf	___ftpack@sign
  5060  1E4F  160A  118A  21DF  160A  158A  	fcall	___ftpack
  5061  1E54  0873               	movf	?___ftpack,w
  5062  1E55  1283               	bcf	3,5	;RP0=0, select bank0
  5063  1E56  1303               	bcf	3,6	;RP1=0, select bank0
  5064  1E57  00A3               	movwf	?___lltoft
  5065  1E58  0874               	movf	?___ftpack+1,w
  5066  1E59  00A4               	movwf	?___lltoft+1
  5067  1E5A  0875               	movf	?___ftpack+2,w
  5068  1E5B  00A5               	movwf	?___lltoft+2
  5069  1E5C                     l829:	
  5070  1E5C  0008               	return
  5071  1E5D                     __end_of___lltoft:	
  5072                           
  5073                           	psect	text14
  5074  1F51                     __ptext14:	
  5075 ;; *************** function ___llmod *****************
  5076 ;; Defined at:
  5077 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  divisor         4    8[BANK0 ] unsigned long 
  5080 ;;  dividend        4   12[BANK0 ] unsigned long 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  counter         1   16[BANK0 ] unsigned char 
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  4    8[BANK0 ] unsigned long 
  5085 ;; Registers used:
  5086 ;;		wreg, status,2, status,0
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5092 ;;      Params:         0       8       0       0       0
  5093 ;;      Locals:         0       1       0       0       0
  5094 ;;      Temps:          1       0       0       0       0
  5095 ;;      Totals:         1       9       0       0       0
  5096 ;;Total ram usage:       10 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    2
  5099 ;; This function calls:
  5100 ;;		Nothing
  5101 ;; This function is called by:
  5102 ;;		_sprintf
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           
  5107                           ;psect for function ___llmod
  5108  1F51                     ___llmod:	
  5109  1F51                     l3878:	
  5110                           ;incstack = 0
  5111                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5112                           
  5113  1F51  1283               	bcf	3,5	;RP0=0, select bank0
  5114  1F52  1303               	bcf	3,6	;RP1=0, select bank0
  5115  1F53  082B               	movf	___llmod@divisor+3,w
  5116  1F54  042A               	iorwf	___llmod@divisor+2,w
  5117  1F55  0429               	iorwf	___llmod@divisor+1,w
  5118  1F56  0428               	iorwf	___llmod@divisor,w
  5119  1F57  1903               	skipnz
  5120  1F58  2F5A               	goto	u5851
  5121  1F59  2F5B               	goto	u5850
  5122  1F5A                     u5851:	
  5123  1F5A  2F9E               	goto	l3894
  5124  1F5B                     u5850:	
  5125  1F5B                     l3880:	
  5126  1F5B  01B0               	clrf	___llmod@counter
  5127  1F5C  0AB0               	incf	___llmod@counter,f
  5128  1F5D  2F6B               	goto	l3884
  5129  1F5E                     l3882:	
  5130  1F5E  3001               	movlw	1
  5131  1F5F  00F9               	movwf	??___llmod
  5132  1F60                     u5865:	
  5133  1F60  1003               	clrc
  5134  1F61  0DA8               	rlf	___llmod@divisor,f
  5135  1F62  0DA9               	rlf	___llmod@divisor+1,f
  5136  1F63  0DAA               	rlf	___llmod@divisor+2,f
  5137  1F64  0DAB               	rlf	___llmod@divisor+3,f
  5138  1F65  0BF9               	decfsz	??___llmod,f
  5139  1F66  2F60               	goto	u5865
  5140  1F67  3001               	movlw	1
  5141  1F68  00F9               	movwf	??___llmod
  5142  1F69  0879               	movf	??___llmod,w
  5143  1F6A  07B0               	addwf	___llmod@counter,f
  5144  1F6B                     l3884:	
  5145  1F6B  1FAB               	btfss	___llmod@divisor+3,7
  5146  1F6C  2F6E               	goto	u5871
  5147  1F6D  2F6F               	goto	u5870
  5148  1F6E                     u5871:	
  5149  1F6E  2F5E               	goto	l3882
  5150  1F6F                     u5870:	
  5151  1F6F                     l3886:	
  5152  1F6F  082B               	movf	___llmod@divisor+3,w
  5153  1F70  022F               	subwf	___llmod@dividend+3,w
  5154  1F71  1D03               	skipz
  5155  1F72  2F7D               	goto	u5885
  5156  1F73  082A               	movf	___llmod@divisor+2,w
  5157  1F74  022E               	subwf	___llmod@dividend+2,w
  5158  1F75  1D03               	skipz
  5159  1F76  2F7D               	goto	u5885
  5160  1F77  0829               	movf	___llmod@divisor+1,w
  5161  1F78  022D               	subwf	___llmod@dividend+1,w
  5162  1F79  1D03               	skipz
  5163  1F7A  2F7D               	goto	u5885
  5164  1F7B  0828               	movf	___llmod@divisor,w
  5165  1F7C  022C               	subwf	___llmod@dividend,w
  5166  1F7D                     u5885:	
  5167  1F7D  1C03               	skipc
  5168  1F7E  2F80               	goto	u5881
  5169  1F7F  2F81               	goto	u5880
  5170  1F80                     u5881:	
  5171  1F80  2F8F               	goto	l3890
  5172  1F81                     u5880:	
  5173  1F81                     l3888:	
  5174  1F81  0828               	movf	___llmod@divisor,w
  5175  1F82  02AC               	subwf	___llmod@dividend,f
  5176  1F83  0829               	movf	___llmod@divisor+1,w
  5177  1F84  1C03               	skipc
  5178  1F85  0F29               	incfsz	___llmod@divisor+1,w
  5179  1F86  02AD               	subwf	___llmod@dividend+1,f
  5180  1F87  082A               	movf	___llmod@divisor+2,w
  5181  1F88  1C03               	skipc
  5182  1F89  0F2A               	incfsz	___llmod@divisor+2,w
  5183  1F8A  02AE               	subwf	___llmod@dividend+2,f
  5184  1F8B  082B               	movf	___llmod@divisor+3,w
  5185  1F8C  1C03               	skipc
  5186  1F8D  0F2B               	incfsz	___llmod@divisor+3,w
  5187  1F8E  02AF               	subwf	___llmod@dividend+3,f
  5188  1F8F                     l3890:	
  5189  1F8F  3001               	movlw	1
  5190  1F90                     u5895:	
  5191  1F90  1003               	clrc
  5192  1F91  0CAB               	rrf	___llmod@divisor+3,f
  5193  1F92  0CAA               	rrf	___llmod@divisor+2,f
  5194  1F93  0CA9               	rrf	___llmod@divisor+1,f
  5195  1F94  0CA8               	rrf	___llmod@divisor,f
  5196  1F95  3EFF               	addlw	-1
  5197  1F96  1D03               	skipz
  5198  1F97  2F90               	goto	u5895
  5199  1F98                     l3892:	
  5200  1F98  3001               	movlw	1
  5201  1F99  02B0               	subwf	___llmod@counter,f
  5202  1F9A  1D03               	btfss	3,2
  5203  1F9B  2F9D               	goto	u5901
  5204  1F9C  2F9E               	goto	u5900
  5205  1F9D                     u5901:	
  5206  1F9D  2F6F               	goto	l3886
  5207  1F9E                     u5900:	
  5208  1F9E                     l3894:	
  5209  1F9E  082F               	movf	___llmod@dividend+3,w
  5210  1F9F  00AB               	movwf	?___llmod+3
  5211  1FA0  082E               	movf	___llmod@dividend+2,w
  5212  1FA1  00AA               	movwf	?___llmod+2
  5213  1FA2  082D               	movf	___llmod@dividend+1,w
  5214  1FA3  00A9               	movwf	?___llmod+1
  5215  1FA4  082C               	movf	___llmod@dividend,w
  5216  1FA5  00A8               	movwf	?___llmod
  5217  1FA6                     l821:	
  5218  1FA6  0008               	return
  5219  1FA7                     __end_of___llmod:	
  5220                           
  5221                           	psect	text15
  5222  110E                     __ptext15:	
  5223 ;; *************** function ___lldiv *****************
  5224 ;; Defined at:
  5225 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  divisor         4    0[BANK0 ] unsigned long 
  5228 ;;  dividend        4    4[BANK0 ] unsigned long 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  quotient        4    4[COMMON] unsigned long 
  5231 ;;  counter         1    8[COMMON] unsigned char 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  4    0[BANK0 ] unsigned long 
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5241 ;;      Params:         0       8       0       0       0
  5242 ;;      Locals:         5       0       0       0       0
  5243 ;;      Temps:          1       0       0       0       0
  5244 ;;      Totals:         6       8       0       0       0
  5245 ;;Total ram usage:       14 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    2
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		_sprintf
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function ___lldiv
  5257  110E                     ___lldiv:	
  5258  110E                     l3794:	
  5259                           ;incstack = 0
  5260                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5261                           
  5262  110E  3000               	movlw	0
  5263  110F  00F7               	movwf	___lldiv@quotient+3
  5264  1110  3000               	movlw	0
  5265  1111  00F6               	movwf	___lldiv@quotient+2
  5266  1112  3000               	movlw	0
  5267  1113  00F5               	movwf	___lldiv@quotient+1
  5268  1114  3000               	movlw	0
  5269  1115  00F4               	movwf	___lldiv@quotient
  5270  1116  1283               	bcf	3,5	;RP0=0, select bank0
  5271  1117  1303               	bcf	3,6	;RP1=0, select bank0
  5272  1118  0823               	movf	___lldiv@divisor+3,w
  5273  1119  0422               	iorwf	___lldiv@divisor+2,w
  5274  111A  0421               	iorwf	___lldiv@divisor+1,w
  5275  111B  0420               	iorwf	___lldiv@divisor,w
  5276  111C  1903               	skipnz
  5277  111D  291F               	goto	u5661
  5278  111E  2920               	goto	u5660
  5279  111F                     u5661:	
  5280  111F  296D               	goto	l3814
  5281  1120                     u5660:	
  5282  1120                     l3796:	
  5283  1120  01F8               	clrf	___lldiv@counter
  5284  1121  0AF8               	incf	___lldiv@counter,f
  5285  1122  2930               	goto	l3800
  5286  1123                     l3798:	
  5287  1123  3001               	movlw	1
  5288  1124  00F3               	movwf	??___lldiv
  5289  1125                     u5675:	
  5290  1125  1003               	clrc
  5291  1126  0DA0               	rlf	___lldiv@divisor,f
  5292  1127  0DA1               	rlf	___lldiv@divisor+1,f
  5293  1128  0DA2               	rlf	___lldiv@divisor+2,f
  5294  1129  0DA3               	rlf	___lldiv@divisor+3,f
  5295  112A  0BF3               	decfsz	??___lldiv,f
  5296  112B  2925               	goto	u5675
  5297  112C  3001               	movlw	1
  5298  112D  00F3               	movwf	??___lldiv
  5299  112E  0873               	movf	??___lldiv,w
  5300  112F  07F8               	addwf	___lldiv@counter,f
  5301  1130                     l3800:	
  5302  1130  1FA3               	btfss	___lldiv@divisor+3,7
  5303  1131  2933               	goto	u5681
  5304  1132  2934               	goto	u5680
  5305  1133                     u5681:	
  5306  1133  2923               	goto	l3798
  5307  1134                     u5680:	
  5308  1134                     l3802:	
  5309  1134  3001               	movlw	1
  5310  1135  00F3               	movwf	??___lldiv
  5311  1136                     u5695:	
  5312  1136  1003               	clrc
  5313  1137  0DF4               	rlf	___lldiv@quotient,f
  5314  1138  0DF5               	rlf	___lldiv@quotient+1,f
  5315  1139  0DF6               	rlf	___lldiv@quotient+2,f
  5316  113A  0DF7               	rlf	___lldiv@quotient+3,f
  5317  113B  0BF3               	decfsz	??___lldiv,f
  5318  113C  2936               	goto	u5695
  5319  113D                     l3804:	
  5320  113D  0823               	movf	___lldiv@divisor+3,w
  5321  113E  0227               	subwf	___lldiv@dividend+3,w
  5322  113F  1D03               	skipz
  5323  1140  294B               	goto	u5705
  5324  1141  0822               	movf	___lldiv@divisor+2,w
  5325  1142  0226               	subwf	___lldiv@dividend+2,w
  5326  1143  1D03               	skipz
  5327  1144  294B               	goto	u5705
  5328  1145  0821               	movf	___lldiv@divisor+1,w
  5329  1146  0225               	subwf	___lldiv@dividend+1,w
  5330  1147  1D03               	skipz
  5331  1148  294B               	goto	u5705
  5332  1149  0820               	movf	___lldiv@divisor,w
  5333  114A  0224               	subwf	___lldiv@dividend,w
  5334  114B                     u5705:	
  5335  114B  1C03               	skipc
  5336  114C  294E               	goto	u5701
  5337  114D  294F               	goto	u5700
  5338  114E                     u5701:	
  5339  114E  295E               	goto	l3810
  5340  114F                     u5700:	
  5341  114F                     l3806:	
  5342  114F  0820               	movf	___lldiv@divisor,w
  5343  1150  02A4               	subwf	___lldiv@dividend,f
  5344  1151  0821               	movf	___lldiv@divisor+1,w
  5345  1152  1C03               	skipc
  5346  1153  0F21               	incfsz	___lldiv@divisor+1,w
  5347  1154  02A5               	subwf	___lldiv@dividend+1,f
  5348  1155  0822               	movf	___lldiv@divisor+2,w
  5349  1156  1C03               	skipc
  5350  1157  0F22               	incfsz	___lldiv@divisor+2,w
  5351  1158  02A6               	subwf	___lldiv@dividend+2,f
  5352  1159  0823               	movf	___lldiv@divisor+3,w
  5353  115A  1C03               	skipc
  5354  115B  0F23               	incfsz	___lldiv@divisor+3,w
  5355  115C  02A7               	subwf	___lldiv@dividend+3,f
  5356  115D                     l3808:	
  5357  115D  1474               	bsf	___lldiv@quotient,0
  5358  115E                     l3810:	
  5359  115E  3001               	movlw	1
  5360  115F                     u5715:	
  5361  115F  1003               	clrc
  5362  1160  0CA3               	rrf	___lldiv@divisor+3,f
  5363  1161  0CA2               	rrf	___lldiv@divisor+2,f
  5364  1162  0CA1               	rrf	___lldiv@divisor+1,f
  5365  1163  0CA0               	rrf	___lldiv@divisor,f
  5366  1164  3EFF               	addlw	-1
  5367  1165  1D03               	skipz
  5368  1166  295F               	goto	u5715
  5369  1167                     l3812:	
  5370  1167  3001               	movlw	1
  5371  1168  02F8               	subwf	___lldiv@counter,f
  5372  1169  1D03               	btfss	3,2
  5373  116A  296C               	goto	u5721
  5374  116B  296D               	goto	u5720
  5375  116C                     u5721:	
  5376  116C  2934               	goto	l3802
  5377  116D                     u5720:	
  5378  116D                     l3814:	
  5379  116D  0877               	movf	___lldiv@quotient+3,w
  5380  116E  00A3               	movwf	?___lldiv+3
  5381  116F  0876               	movf	___lldiv@quotient+2,w
  5382  1170  00A2               	movwf	?___lldiv+2
  5383  1171  0875               	movf	___lldiv@quotient+1,w
  5384  1172  00A1               	movwf	?___lldiv+1
  5385  1173  0874               	movf	___lldiv@quotient,w
  5386  1174  00A0               	movwf	?___lldiv
  5387  1175                     l486:	
  5388  1175  0008               	return
  5389  1176                     __end_of___lldiv:	
  5390                           
  5391                           	psect	text16
  5392  1261                     __ptext16:	
  5393 ;; *************** function ___fttol *****************
  5394 ;; Defined at:
  5395 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fttol.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  f1              3   38[BANK0 ] float 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  lval            4   47[BANK0 ] unsigned long 
  5400 ;;  exp1            1   51[BANK0 ] unsigned char 
  5401 ;;  sign1           1   46[BANK0 ] unsigned char 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  4   38[BANK0 ] long 
  5404 ;; Registers used:
  5405 ;;		wreg, status,2, status,0
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5411 ;;      Params:         0       4       0       0       0
  5412 ;;      Locals:         0       6       0       0       0
  5413 ;;      Temps:          0       4       0       0       0
  5414 ;;      Totals:         0      14       0       0       0
  5415 ;;Total ram usage:       14 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    2
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_sprintf
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function ___fttol
  5427  1261                     ___fttol:	
  5428  1261                     l2872:	
  5429                           ;incstack = 0
  5430                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5431                           
  5432  1261  1283               	bcf	3,5	;RP0=0, select bank0
  5433  1262  1303               	bcf	3,6	;RP1=0, select bank0
  5434  1263  0846               	movf	___fttol@f1,w
  5435  1264  00CA               	movwf	??___fttol
  5436  1265  0847               	movf	___fttol@f1+1,w
  5437  1266  00CB               	movwf	??___fttol+1
  5438  1267  0848               	movf	___fttol@f1+2,w
  5439  1268  00CC               	movwf	??___fttol+2
  5440  1269  1003               	clrc
  5441  126A  0D4B               	rlf	??___fttol+1,w
  5442  126B  0D4C               	rlf	??___fttol+2,w
  5443  126C  00CD               	movwf	??___fttol+3
  5444  126D  084D               	movf	??___fttol+3,w
  5445  126E  00D3               	movwf	___fttol@exp1
  5446  126F  0853               	movf	___fttol@exp1,w
  5447  1270  1D03               	btfss	3,2
  5448  1271  2A73               	goto	u4001
  5449  1272  2A74               	goto	u4000
  5450  1273                     u4001:	
  5451  1273  2A7D               	goto	l2878
  5452  1274                     u4000:	
  5453  1274                     l2874:	
  5454  1274  3000               	movlw	0
  5455  1275  00C9               	movwf	?___fttol+3
  5456  1276  3000               	movlw	0
  5457  1277  00C8               	movwf	?___fttol+2
  5458  1278  3000               	movlw	0
  5459  1279  00C7               	movwf	?___fttol+1
  5460  127A  3000               	movlw	0
  5461  127B  00C6               	movwf	?___fttol
  5462  127C  2AEC               	goto	l780
  5463  127D                     l2878:	
  5464  127D  0846               	movf	___fttol@f1,w
  5465  127E  00CA               	movwf	??___fttol
  5466  127F  0847               	movf	___fttol@f1+1,w
  5467  1280  00CB               	movwf	??___fttol+1
  5468  1281  0848               	movf	___fttol@f1+2,w
  5469  1282  00CC               	movwf	??___fttol+2
  5470  1283  3017               	movlw	23
  5471  1284                     u4015:	
  5472  1284  1003               	clrc
  5473  1285  0CCC               	rrf	??___fttol+2,f
  5474  1286  0CCB               	rrf	??___fttol+1,f
  5475  1287  0CCA               	rrf	??___fttol,f
  5476  1288                     u4010:	
  5477  1288  3EFF               	addlw	-1
  5478  1289  1D03               	skipz
  5479  128A  2A84               	goto	u4015
  5480  128B  084A               	movf	??___fttol,w
  5481  128C  00CD               	movwf	??___fttol+3
  5482  128D  084D               	movf	??___fttol+3,w
  5483  128E  00CE               	movwf	___fttol@sign1
  5484  128F                     l2880:	
  5485  128F  17C7               	bsf	___fttol@f1+1,7
  5486  1290                     l2882:	
  5487  1290  30FF               	movlw	255
  5488  1291  05C6               	andwf	___fttol@f1,f
  5489  1292  30FF               	movlw	255
  5490  1293  05C7               	andwf	___fttol@f1+1,f
  5491  1294  3000               	movlw	0
  5492  1295  05C8               	andwf	___fttol@f1+2,f
  5493  1296                     l2884:	
  5494  1296  0846               	movf	___fttol@f1,w
  5495  1297  00CF               	movwf	___fttol@lval
  5496  1298  0847               	movf	___fttol@f1+1,w
  5497  1299  00D0               	movwf	___fttol@lval+1
  5498  129A  0848               	movf	___fttol@f1+2,w
  5499  129B  00D1               	movwf	___fttol@lval+2
  5500  129C  01D2               	clrf	___fttol@lval+3
  5501  129D                     l2886:	
  5502  129D  308E               	movlw	142
  5503  129E  02D3               	subwf	___fttol@exp1,f
  5504  129F                     l2888:	
  5505  129F  1FD3               	btfss	___fttol@exp1,7
  5506  12A0  2AA2               	goto	u4021
  5507  12A1  2AA3               	goto	u4020
  5508  12A2                     u4021:	
  5509  12A2  2ABD               	goto	l2898
  5510  12A3                     u4020:	
  5511  12A3                     l2890:	
  5512  12A3  0853               	movf	___fttol@exp1,w
  5513  12A4  3A80               	xorlw	128
  5514  12A5  3E8F               	addlw	143
  5515  12A6  1803               	skipnc
  5516  12A7  2AA9               	goto	u4031
  5517  12A8  2AAA               	goto	u4030
  5518  12A9                     u4031:	
  5519  12A9  2AAB               	goto	l2896
  5520  12AA                     u4030:	
  5521  12AA  2A74               	goto	l2874
  5522  12AB                     l2896:	
  5523  12AB  3001               	movlw	1
  5524  12AC                     u4045:	
  5525  12AC  1003               	clrc
  5526  12AD  0CD2               	rrf	___fttol@lval+3,f
  5527  12AE  0CD1               	rrf	___fttol@lval+2,f
  5528  12AF  0CD0               	rrf	___fttol@lval+1,f
  5529  12B0  0CCF               	rrf	___fttol@lval,f
  5530  12B1  3EFF               	addlw	-1
  5531  12B2  1D03               	skipz
  5532  12B3  2AAC               	goto	u4045
  5533  12B4  3001               	movlw	1
  5534  12B5  00CA               	movwf	??___fttol
  5535  12B6  084A               	movf	??___fttol,w
  5536  12B7  07D3               	addwf	___fttol@exp1,f
  5537  12B8  1D03               	btfss	3,2
  5538  12B9  2ABB               	goto	u4051
  5539  12BA  2ABC               	goto	u4050
  5540  12BB                     u4051:	
  5541  12BB  2AAB               	goto	l2896
  5542  12BC                     u4050:	
  5543  12BC  2AD4               	goto	l2906
  5544  12BD                     l2898:	
  5545  12BD  3018               	movlw	24
  5546  12BE  0253               	subwf	___fttol@exp1,w
  5547  12BF  1C03               	skipc
  5548  12C0  2AC2               	goto	u4061
  5549  12C1  2AC3               	goto	u4060
  5550  12C2                     u4061:	
  5551  12C2  2ACF               	goto	l787
  5552  12C3                     u4060:	
  5553  12C3  2A74               	goto	l2874
  5554  12C4                     l2904:	
  5555  12C4  3001               	movlw	1
  5556  12C5  00CA               	movwf	??___fttol
  5557  12C6                     u4075:	
  5558  12C6  1003               	clrc
  5559  12C7  0DCF               	rlf	___fttol@lval,f
  5560  12C8  0DD0               	rlf	___fttol@lval+1,f
  5561  12C9  0DD1               	rlf	___fttol@lval+2,f
  5562  12CA  0DD2               	rlf	___fttol@lval+3,f
  5563  12CB  0BCA               	decfsz	??___fttol,f
  5564  12CC  2AC6               	goto	u4075
  5565  12CD  3001               	movlw	1
  5566  12CE  02D3               	subwf	___fttol@exp1,f
  5567  12CF                     l787:	
  5568  12CF  0853               	movf	___fttol@exp1,w
  5569  12D0  1D03               	btfss	3,2
  5570  12D1  2AD3               	goto	u4081
  5571  12D2  2AD4               	goto	u4080
  5572  12D3                     u4081:	
  5573  12D3  2AC4               	goto	l2904
  5574  12D4                     u4080:	
  5575  12D4                     l2906:	
  5576  12D4  084E               	movf	___fttol@sign1,w
  5577  12D5  1903               	btfsc	3,2
  5578  12D6  2AD8               	goto	u4091
  5579  12D7  2AD9               	goto	u4090
  5580  12D8                     u4091:	
  5581  12D8  2AE4               	goto	l2910
  5582  12D9                     u4090:	
  5583  12D9                     l2908:	
  5584  12D9  09CF               	comf	___fttol@lval,f
  5585  12DA  09D0               	comf	___fttol@lval+1,f
  5586  12DB  09D1               	comf	___fttol@lval+2,f
  5587  12DC  09D2               	comf	___fttol@lval+3,f
  5588  12DD  0ACF               	incf	___fttol@lval,f
  5589  12DE  1903               	skipnz
  5590  12DF  0AD0               	incf	___fttol@lval+1,f
  5591  12E0  1903               	skipnz
  5592  12E1  0AD1               	incf	___fttol@lval+2,f
  5593  12E2  1903               	skipnz
  5594  12E3  0AD2               	incf	___fttol@lval+3,f
  5595  12E4                     l2910:	
  5596  12E4  0852               	movf	___fttol@lval+3,w
  5597  12E5  00C9               	movwf	?___fttol+3
  5598  12E6  0851               	movf	___fttol@lval+2,w
  5599  12E7  00C8               	movwf	?___fttol+2
  5600  12E8  0850               	movf	___fttol@lval+1,w
  5601  12E9  00C7               	movwf	?___fttol+1
  5602  12EA  084F               	movf	___fttol@lval,w
  5603  12EB  00C6               	movwf	?___fttol
  5604  12EC                     l780:	
  5605  12EC  0008               	return
  5606  12ED                     __end_of___fttol:	
  5607                           
  5608                           	psect	text17
  5609  1D0B                     __ptext17:	
  5610 ;; *************** function ___ftsub *****************
  5611 ;; Defined at:
  5612 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftsub.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  f2              3   58[BANK0 ] float 
  5615 ;;  f1              3   61[BANK0 ] float 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;		None
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  3   58[BANK0 ] float 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0, pclath, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5627 ;;      Params:         0       6       0       0       0
  5628 ;;      Locals:         0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0
  5630 ;;      Totals:         0       6       0       0       0
  5631 ;;Total ram usage:        6 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:    4
  5634 ;; This function calls:
  5635 ;;		___ftadd
  5636 ;; This function is called by:
  5637 ;;		_sprintf
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           
  5642                           ;psect for function ___ftsub
  5643  1D0B                     ___ftsub:	
  5644  1D0B                     l3870:	
  5645                           ;incstack = 0
  5646                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5647                           
  5648  1D0B  1283               	bcf	3,5	;RP0=0, select bank0
  5649  1D0C  1303               	bcf	3,6	;RP1=0, select bank0
  5650  1D0D  085C               	movf	___ftsub@f2+2,w
  5651  1D0E  045B               	iorwf	___ftsub@f2+1,w
  5652  1D0F  045A               	iorwf	___ftsub@f2,w
  5653  1D10  1903               	skipnz
  5654  1D11  2D13               	goto	u5841
  5655  1D12  2D14               	goto	u5840
  5656  1D13                     u5841:	
  5657  1D13  2D16               	goto	l3874
  5658  1D14                     u5840:	
  5659  1D14                     l3872:	
  5660  1D14  3080               	movlw	128
  5661  1D15  06DC               	xorwf	___ftsub@f2+2,f
  5662  1D16                     l3874:	
  5663  1D16  085D               	movf	___ftsub@f1,w
  5664  1D17  00CD               	movwf	___ftadd@f1
  5665  1D18  085E               	movf	___ftsub@f1+1,w
  5666  1D19  00CE               	movwf	___ftadd@f1+1
  5667  1D1A  085F               	movf	___ftsub@f1+2,w
  5668  1D1B  00CF               	movwf	___ftadd@f1+2
  5669  1D1C  085A               	movf	___ftsub@f2,w
  5670  1D1D  00D0               	movwf	___ftadd@f2
  5671  1D1E  085B               	movf	___ftsub@f2+1,w
  5672  1D1F  00D1               	movwf	___ftadd@f2+1
  5673  1D20  085C               	movf	___ftsub@f2+2,w
  5674  1D21  00D2               	movwf	___ftadd@f2+2
  5675  1D22  120A  158A  2155  160A  158A  	fcall	___ftadd
  5676  1D27  1283               	bcf	3,5	;RP0=0, select bank0
  5677  1D28  1303               	bcf	3,6	;RP1=0, select bank0
  5678  1D29  084D               	movf	?___ftadd,w
  5679  1D2A  00DA               	movwf	?___ftsub
  5680  1D2B  084E               	movf	?___ftadd+1,w
  5681  1D2C  00DB               	movwf	?___ftsub+1
  5682  1D2D  084F               	movf	?___ftadd+2,w
  5683  1D2E  00DC               	movwf	?___ftsub+2
  5684  1D2F                     l776:	
  5685  1D2F  0008               	return
  5686  1D30                     __end_of___ftsub:	
  5687                           
  5688                           	psect	text18
  5689  0955                     __ptext18:	
  5690 ;; *************** function ___ftadd *****************
  5691 ;; Defined at:
  5692 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftadd.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  f1              3   45[BANK0 ] float 
  5695 ;;  f2              3   48[BANK0 ] float 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  exp1            1   57[BANK0 ] unsigned char 
  5698 ;;  exp2            1   56[BANK0 ] unsigned char 
  5699 ;;  sign            1   55[BANK0 ] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  3   45[BANK0 ] float 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0, pclath, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5709 ;;      Params:         0       6       0       0       0
  5710 ;;      Locals:         0       3       0       0       0
  5711 ;;      Temps:          0       4       0       0       0
  5712 ;;      Totals:         0      13       0       0       0
  5713 ;;Total ram usage:       13 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    3
  5716 ;; This function calls:
  5717 ;;		___ftpack
  5718 ;; This function is called by:
  5719 ;;		_sprintf
  5720 ;;		___ftsub
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           
  5725                           ;psect for function ___ftadd
  5726  0955                     ___ftadd:	
  5727  0955                     l3584:	
  5728                           ;incstack = 0
  5729                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5730                           
  5731  0955  1283               	bcf	3,5	;RP0=0, select bank0
  5732  0956  1303               	bcf	3,6	;RP1=0, select bank0
  5733  0957  084D               	movf	___ftadd@f1,w
  5734  0958  00D3               	movwf	??___ftadd
  5735  0959  084E               	movf	___ftadd@f1+1,w
  5736  095A  00D4               	movwf	??___ftadd+1
  5737  095B  084F               	movf	___ftadd@f1+2,w
  5738  095C  00D5               	movwf	??___ftadd+2
  5739  095D  1003               	clrc
  5740  095E  0D54               	rlf	??___ftadd+1,w
  5741  095F  0D55               	rlf	??___ftadd+2,w
  5742  0960  00D6               	movwf	??___ftadd+3
  5743  0961  0856               	movf	??___ftadd+3,w
  5744  0962  00D9               	movwf	___ftadd@exp1
  5745  0963  0850               	movf	___ftadd@f2,w
  5746  0964  00D3               	movwf	??___ftadd
  5747  0965  0851               	movf	___ftadd@f2+1,w
  5748  0966  00D4               	movwf	??___ftadd+1
  5749  0967  0852               	movf	___ftadd@f2+2,w
  5750  0968  00D5               	movwf	??___ftadd+2
  5751  0969  1003               	clrc
  5752  096A  0D54               	rlf	??___ftadd+1,w
  5753  096B  0D55               	rlf	??___ftadd+2,w
  5754  096C  00D6               	movwf	??___ftadd+3
  5755  096D  0856               	movf	??___ftadd+3,w
  5756  096E  00D8               	movwf	___ftadd@exp2
  5757  096F  0859               	movf	___ftadd@exp1,w
  5758  0970  1903               	btfsc	3,2
  5759  0971  2973               	goto	u5211
  5760  0972  2974               	goto	u5210
  5761  0973                     u5211:	
  5762  0973  2984               	goto	l3590
  5763  0974                     u5210:	
  5764  0974                     l3586:	
  5765  0974  0858               	movf	___ftadd@exp2,w
  5766  0975  0259               	subwf	___ftadd@exp1,w
  5767  0976  1803               	skipnc
  5768  0977  2979               	goto	u5221
  5769  0978  297A               	goto	u5220
  5770  0979                     u5221:	
  5771  0979  298B               	goto	l3594
  5772  097A                     u5220:	
  5773  097A                     l3588:	
  5774  097A  0858               	movf	___ftadd@exp2,w
  5775  097B  00D3               	movwf	??___ftadd
  5776  097C  0859               	movf	___ftadd@exp1,w
  5777  097D  02D3               	subwf	??___ftadd,f
  5778  097E  3019               	movlw	25
  5779  097F  0253               	subwf	??___ftadd,w
  5780  0980  1C03               	skipc
  5781  0981  2983               	goto	u5231
  5782  0982  2984               	goto	u5230
  5783  0983                     u5231:	
  5784  0983  298B               	goto	l3594
  5785  0984                     u5230:	
  5786  0984                     l3590:	
  5787  0984  0850               	movf	___ftadd@f2,w
  5788  0985  00CD               	movwf	?___ftadd
  5789  0986  0851               	movf	___ftadd@f2+1,w
  5790  0987  00CE               	movwf	?___ftadd+1
  5791  0988  0852               	movf	___ftadd@f2+2,w
  5792  0989  00CF               	movwf	?___ftadd+2
  5793  098A  2A8A               	goto	l696
  5794  098B                     l3594:	
  5795  098B  0858               	movf	___ftadd@exp2,w
  5796  098C  1903               	btfsc	3,2
  5797  098D  298F               	goto	u5241
  5798  098E  2990               	goto	u5240
  5799  098F                     u5241:	
  5800  098F  29A0               	goto	l699
  5801  0990                     u5240:	
  5802  0990                     l3596:	
  5803  0990  0859               	movf	___ftadd@exp1,w
  5804  0991  0258               	subwf	___ftadd@exp2,w
  5805  0992  1803               	skipnc
  5806  0993  2995               	goto	u5251
  5807  0994  2996               	goto	u5250
  5808  0995                     u5251:	
  5809  0995  29A1               	goto	l3600
  5810  0996                     u5250:	
  5811  0996                     l3598:	
  5812  0996  0859               	movf	___ftadd@exp1,w
  5813  0997  00D3               	movwf	??___ftadd
  5814  0998  0858               	movf	___ftadd@exp2,w
  5815  0999  02D3               	subwf	??___ftadd,f
  5816  099A  3019               	movlw	25
  5817  099B  0253               	subwf	??___ftadd,w
  5818  099C  1C03               	skipc
  5819  099D  299F               	goto	u5261
  5820  099E  29A0               	goto	u5260
  5821  099F                     u5261:	
  5822  099F  29A1               	goto	l3600
  5823  09A0                     u5260:	
  5824  09A0                     l699:	
  5825  09A0  2A8A               	goto	l696
  5826  09A1                     l3600:	
  5827  09A1  3006               	movlw	6
  5828  09A2  00D3               	movwf	??___ftadd
  5829  09A3  0853               	movf	??___ftadd,w
  5830  09A4  00D7               	movwf	___ftadd@sign
  5831  09A5                     l3602:	
  5832  09A5  1FCF               	btfss	___ftadd@f1+2,7
  5833  09A6  29A8               	goto	u5271
  5834  09A7  29A9               	goto	u5270
  5835  09A8                     u5271:	
  5836  09A8  29AA               	goto	l700
  5837  09A9                     u5270:	
  5838  09A9                     l3604:	
  5839  09A9  17D7               	bsf	___ftadd@sign,7
  5840  09AA                     l700:	
  5841  09AA  1FD2               	btfss	___ftadd@f2+2,7
  5842  09AB  29AD               	goto	u5281
  5843  09AC  29AE               	goto	u5280
  5844  09AD                     u5281:	
  5845  09AD  29AF               	goto	l701
  5846  09AE                     u5280:	
  5847  09AE                     l3606:	
  5848  09AE  1757               	bsf	___ftadd@sign,6
  5849  09AF                     l701:	
  5850  09AF  17CE               	bsf	___ftadd@f1+1,7
  5851  09B0                     l3608:	
  5852  09B0  30FF               	movlw	255
  5853  09B1  05CD               	andwf	___ftadd@f1,f
  5854  09B2  30FF               	movlw	255
  5855  09B3  05CE               	andwf	___ftadd@f1+1,f
  5856  09B4  3000               	movlw	0
  5857  09B5  05CF               	andwf	___ftadd@f1+2,f
  5858  09B6                     l3610:	
  5859  09B6  17D1               	bsf	___ftadd@f2+1,7
  5860  09B7  30FF               	movlw	255
  5861  09B8  05D0               	andwf	___ftadd@f2,f
  5862  09B9  30FF               	movlw	255
  5863  09BA  05D1               	andwf	___ftadd@f2+1,f
  5864  09BB  3000               	movlw	0
  5865  09BC  05D2               	andwf	___ftadd@f2+2,f
  5866  09BD  0858               	movf	___ftadd@exp2,w
  5867  09BE  0259               	subwf	___ftadd@exp1,w
  5868  09BF  1803               	skipnc
  5869  09C0  29C2               	goto	u5291
  5870  09C1  29C3               	goto	u5290
  5871  09C2                     u5291:	
  5872  09C2  29EF               	goto	l3622
  5873  09C3                     u5290:	
  5874  09C3                     l3612:	
  5875  09C3  3001               	movlw	1
  5876  09C4                     u5305:	
  5877  09C4  1003               	clrc
  5878  09C5  0DD0               	rlf	___ftadd@f2,f
  5879  09C6  0DD1               	rlf	___ftadd@f2+1,f
  5880  09C7  0DD2               	rlf	___ftadd@f2+2,f
  5881  09C8  3EFF               	addlw	-1
  5882  09C9  1D03               	skipz
  5883  09CA  29C4               	goto	u5305
  5884  09CB  3001               	movlw	1
  5885  09CC  02D8               	subwf	___ftadd@exp2,f
  5886  09CD                     l3614:	
  5887  09CD  0858               	movf	___ftadd@exp2,w
  5888  09CE  0659               	xorwf	___ftadd@exp1,w
  5889  09CF  1903               	skipnz
  5890  09D0  29D2               	goto	u5311
  5891  09D1  29D3               	goto	u5310
  5892  09D2                     u5311:	
  5893  09D2  29E8               	goto	l3620
  5894  09D3                     u5310:	
  5895  09D3                     l3616:	
  5896  09D3  3001               	movlw	1
  5897  09D4  02D7               	subwf	___ftadd@sign,f
  5898  09D5  0857               	movf	___ftadd@sign,w
  5899  09D6  3907               	andlw	7
  5900  09D7  1D03               	btfss	3,2
  5901  09D8  29DA               	goto	u5321
  5902  09D9  29DB               	goto	u5320
  5903  09DA                     u5321:	
  5904  09DA  29C3               	goto	l3612
  5905  09DB                     u5320:	
  5906  09DB  29E8               	goto	l3620
  5907  09DC                     l3618:	
  5908  09DC  3001               	movlw	1
  5909  09DD                     u5335:	
  5910  09DD  1003               	clrc
  5911  09DE  0CCF               	rrf	___ftadd@f1+2,f
  5912  09DF  0CCE               	rrf	___ftadd@f1+1,f
  5913  09E0  0CCD               	rrf	___ftadd@f1,f
  5914  09E1  3EFF               	addlw	-1
  5915  09E2  1D03               	skipz
  5916  09E3  29DD               	goto	u5335
  5917  09E4  3001               	movlw	1
  5918  09E5  00D3               	movwf	??___ftadd
  5919  09E6  0853               	movf	??___ftadd,w
  5920  09E7  07D9               	addwf	___ftadd@exp1,f
  5921  09E8                     l3620:	
  5922  09E8  0859               	movf	___ftadd@exp1,w
  5923  09E9  0658               	xorwf	___ftadd@exp2,w
  5924  09EA  1D03               	skipz
  5925  09EB  29ED               	goto	u5341
  5926  09EC  29EE               	goto	u5340
  5927  09ED                     u5341:	
  5928  09ED  29DC               	goto	l3618
  5929  09EE                     u5340:	
  5930  09EE  2A20               	goto	l710
  5931  09EF                     l3622:	
  5932  09EF  0859               	movf	___ftadd@exp1,w
  5933  09F0  0258               	subwf	___ftadd@exp2,w
  5934  09F1  1803               	skipnc
  5935  09F2  29F4               	goto	u5351
  5936  09F3  29F5               	goto	u5350
  5937  09F4                     u5351:	
  5938  09F4  2A20               	goto	l710
  5939  09F5                     u5350:	
  5940  09F5                     l3624:	
  5941  09F5  3001               	movlw	1
  5942  09F6                     u5365:	
  5943  09F6  1003               	clrc
  5944  09F7  0DCD               	rlf	___ftadd@f1,f
  5945  09F8  0DCE               	rlf	___ftadd@f1+1,f
  5946  09F9  0DCF               	rlf	___ftadd@f1+2,f
  5947  09FA  3EFF               	addlw	-1
  5948  09FB  1D03               	skipz
  5949  09FC  29F6               	goto	u5365
  5950  09FD  3001               	movlw	1
  5951  09FE  02D9               	subwf	___ftadd@exp1,f
  5952  09FF                     l3626:	
  5953  09FF  0858               	movf	___ftadd@exp2,w
  5954  0A00  0659               	xorwf	___ftadd@exp1,w
  5955  0A01  1903               	skipnz
  5956  0A02  2A04               	goto	u5371
  5957  0A03  2A05               	goto	u5370
  5958  0A04                     u5371:	
  5959  0A04  2A1A               	goto	l3632
  5960  0A05                     u5370:	
  5961  0A05                     l3628:	
  5962  0A05  3001               	movlw	1
  5963  0A06  02D7               	subwf	___ftadd@sign,f
  5964  0A07  0857               	movf	___ftadd@sign,w
  5965  0A08  3907               	andlw	7
  5966  0A09  1D03               	btfss	3,2
  5967  0A0A  2A0C               	goto	u5381
  5968  0A0B  2A0D               	goto	u5380
  5969  0A0C                     u5381:	
  5970  0A0C  29F5               	goto	l3624
  5971  0A0D                     u5380:	
  5972  0A0D  2A1A               	goto	l3632
  5973  0A0E                     l3630:	
  5974  0A0E  3001               	movlw	1
  5975  0A0F                     u5395:	
  5976  0A0F  1003               	clrc
  5977  0A10  0CD2               	rrf	___ftadd@f2+2,f
  5978  0A11  0CD1               	rrf	___ftadd@f2+1,f
  5979  0A12  0CD0               	rrf	___ftadd@f2,f
  5980  0A13  3EFF               	addlw	-1
  5981  0A14  1D03               	skipz
  5982  0A15  2A0F               	goto	u5395
  5983  0A16  3001               	movlw	1
  5984  0A17  00D3               	movwf	??___ftadd
  5985  0A18  0853               	movf	??___ftadd,w
  5986  0A19  07D8               	addwf	___ftadd@exp2,f
  5987  0A1A                     l3632:	
  5988  0A1A  0859               	movf	___ftadd@exp1,w
  5989  0A1B  0658               	xorwf	___ftadd@exp2,w
  5990  0A1C  1D03               	skipz
  5991  0A1D  2A1F               	goto	u5401
  5992  0A1E  2A20               	goto	u5400
  5993  0A1F                     u5401:	
  5994  0A1F  2A0E               	goto	l3630
  5995  0A20                     u5400:	
  5996  0A20                     l710:	
  5997  0A20  1FD7               	btfss	___ftadd@sign,7
  5998  0A21  2A23               	goto	u5411
  5999  0A22  2A24               	goto	u5410
  6000  0A23                     u5411:	
  6001  0A23  2A34               	goto	l3636
  6002  0A24                     u5410:	
  6003  0A24                     l3634:	
  6004  0A24  30FF               	movlw	255
  6005  0A25  06CD               	xorwf	___ftadd@f1,f
  6006  0A26  30FF               	movlw	255
  6007  0A27  06CE               	xorwf	___ftadd@f1+1,f
  6008  0A28  30FF               	movlw	255
  6009  0A29  06CF               	xorwf	___ftadd@f1+2,f
  6010  0A2A  3001               	movlw	1
  6011  0A2B  07CD               	addwf	___ftadd@f1,f
  6012  0A2C  3000               	movlw	0
  6013  0A2D  1803               	skipnc
  6014  0A2E  3001               	movlw	1
  6015  0A2F  07CE               	addwf	___ftadd@f1+1,f
  6016  0A30  3000               	movlw	0
  6017  0A31  1803               	skipnc
  6018  0A32  3001               	movlw	1
  6019  0A33  07CF               	addwf	___ftadd@f1+2,f
  6020  0A34                     l3636:	
  6021  0A34  1F57               	btfss	___ftadd@sign,6
  6022  0A35  2A37               	goto	u5421
  6023  0A36  2A38               	goto	u5420
  6024  0A37                     u5421:	
  6025  0A37  2A48               	goto	l3640
  6026  0A38                     u5420:	
  6027  0A38                     l3638:	
  6028  0A38  30FF               	movlw	255
  6029  0A39  06D0               	xorwf	___ftadd@f2,f
  6030  0A3A  30FF               	movlw	255
  6031  0A3B  06D1               	xorwf	___ftadd@f2+1,f
  6032  0A3C  30FF               	movlw	255
  6033  0A3D  06D2               	xorwf	___ftadd@f2+2,f
  6034  0A3E  3001               	movlw	1
  6035  0A3F  07D0               	addwf	___ftadd@f2,f
  6036  0A40  3000               	movlw	0
  6037  0A41  1803               	skipnc
  6038  0A42  3001               	movlw	1
  6039  0A43  07D1               	addwf	___ftadd@f2+1,f
  6040  0A44  3000               	movlw	0
  6041  0A45  1803               	skipnc
  6042  0A46  3001               	movlw	1
  6043  0A47  07D2               	addwf	___ftadd@f2+2,f
  6044  0A48                     l3640:	
  6045  0A48  01D7               	clrf	___ftadd@sign
  6046  0A49                     l3642:	
  6047  0A49  084D               	movf	___ftadd@f1,w
  6048  0A4A  07D0               	addwf	___ftadd@f2,f
  6049  0A4B  084E               	movf	___ftadd@f1+1,w
  6050  0A4C  1103               	clrz
  6051  0A4D  1803               	skipnc
  6052  0A4E  0A4E               	incf	___ftadd@f1+1,w
  6053  0A4F  1903               	skipnz
  6054  0A50  2A52               	goto	u5431
  6055  0A51  07D1               	addwf	___ftadd@f2+1,f
  6056  0A52                     u5431:	
  6057  0A52  084F               	movf	___ftadd@f1+2,w
  6058  0A53  1103               	clrz
  6059  0A54  1803               	skipnc
  6060  0A55  0A4F               	incf	___ftadd@f1+2,w
  6061  0A56  1903               	skipnz
  6062  0A57  2A59               	goto	u5432
  6063  0A58  07D2               	addwf	___ftadd@f2+2,f
  6064  0A59                     u5432:	
  6065  0A59                     l3644:	
  6066  0A59  1FD2               	btfss	___ftadd@f2+2,7
  6067  0A5A  2A5C               	goto	u5441
  6068  0A5B  2A5D               	goto	u5440
  6069  0A5C                     u5441:	
  6070  0A5C  2A6F               	goto	l3650
  6071  0A5D                     u5440:	
  6072  0A5D                     l3646:	
  6073  0A5D  30FF               	movlw	255
  6074  0A5E  06D0               	xorwf	___ftadd@f2,f
  6075  0A5F  30FF               	movlw	255
  6076  0A60  06D1               	xorwf	___ftadd@f2+1,f
  6077  0A61  30FF               	movlw	255
  6078  0A62  06D2               	xorwf	___ftadd@f2+2,f
  6079  0A63  3001               	movlw	1
  6080  0A64  07D0               	addwf	___ftadd@f2,f
  6081  0A65  3000               	movlw	0
  6082  0A66  1803               	skipnc
  6083  0A67  3001               	movlw	1
  6084  0A68  07D1               	addwf	___ftadd@f2+1,f
  6085  0A69  3000               	movlw	0
  6086  0A6A  1803               	skipnc
  6087  0A6B  3001               	movlw	1
  6088  0A6C  07D2               	addwf	___ftadd@f2+2,f
  6089  0A6D                     l3648:	
  6090  0A6D  01D7               	clrf	___ftadd@sign
  6091  0A6E  0AD7               	incf	___ftadd@sign,f
  6092  0A6F                     l3650:	
  6093  0A6F  0850               	movf	___ftadd@f2,w
  6094  0A70  00F3               	movwf	___ftpack@arg
  6095  0A71  0851               	movf	___ftadd@f2+1,w
  6096  0A72  00F4               	movwf	___ftpack@arg+1
  6097  0A73  0852               	movf	___ftadd@f2+2,w
  6098  0A74  00F5               	movwf	___ftpack@arg+2
  6099  0A75  0859               	movf	___ftadd@exp1,w
  6100  0A76  00D3               	movwf	??___ftadd
  6101  0A77  0853               	movf	??___ftadd,w
  6102  0A78  00F6               	movwf	___ftpack@exp
  6103  0A79  0857               	movf	___ftadd@sign,w
  6104  0A7A  00D4               	movwf	??___ftadd+1
  6105  0A7B  0854               	movf	??___ftadd+1,w
  6106  0A7C  00F7               	movwf	___ftpack@sign
  6107  0A7D  160A  118A  21DF  120A  158A  	fcall	___ftpack
  6108  0A82  0873               	movf	?___ftpack,w
  6109  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  6110  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  6111  0A85  00CD               	movwf	?___ftadd
  6112  0A86  0874               	movf	?___ftpack+1,w
  6113  0A87  00CE               	movwf	?___ftadd+1
  6114  0A88  0875               	movf	?___ftpack+2,w
  6115  0A89  00CF               	movwf	?___ftadd+2
  6116  0A8A                     l696:	
  6117  0A8A  0008               	return
  6118  0A8B                     __end_of___ftadd:	
  6119                           
  6120                           	psect	text19
  6121  10BE                     __ptext19:	
  6122 ;; *************** function ___ftneg *****************
  6123 ;; Defined at:
  6124 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftneg.c"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;  f1              3    3[COMMON] float 
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;		None
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  3    3[COMMON] float 
  6131 ;; Registers used:
  6132 ;;		wreg
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6138 ;;      Params:         3       0       0       0       0
  6139 ;;      Locals:         0       0       0       0       0
  6140 ;;      Temps:          0       0       0       0       0
  6141 ;;      Totals:         3       0       0       0       0
  6142 ;;Total ram usage:        3 bytes
  6143 ;; Hardware stack levels used:    1
  6144 ;; Hardware stack levels required when called:    2
  6145 ;; This function calls:
  6146 ;;		Nothing
  6147 ;; This function is called by:
  6148 ;;		_sprintf
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           
  6153                           ;psect for function ___ftneg
  6154  10BE                     ___ftneg:	
  6155  10BE                     l2856:	
  6156                           ;incstack = 0
  6157                           ; Regs used in ___ftneg: [wreg]
  6158                           
  6159  10BE  0875               	movf	___ftneg@f1+2,w
  6160  10BF  0474               	iorwf	___ftneg@f1+1,w
  6161  10C0  0473               	iorwf	___ftneg@f1,w
  6162  10C1  1903               	skipnz
  6163  10C2  28C4               	goto	u3981
  6164  10C3  28C5               	goto	u3980
  6165  10C4                     u3981:	
  6166  10C4  28C7               	goto	l2860
  6167  10C5                     u3980:	
  6168  10C5                     l2858:	
  6169  10C5  3080               	movlw	128
  6170  10C6  06F5               	xorwf	___ftneg@f1+2,f
  6171  10C7                     l2860:	
  6172  10C7                     l770:	
  6173  10C7  0008               	return
  6174  10C8                     __end_of___ftneg:	
  6175                           
  6176                           	psect	text20
  6177  1E5D                     __ptext20:	
  6178 ;; *************** function ___ftge *****************
  6179 ;; Defined at:
  6180 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftge.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  ff1             3    3[COMMON] float 
  6183 ;;  ff2             3    6[COMMON] float 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;		None
  6186 ;; Return value:  Size  Location     Type
  6187 ;;		None               void
  6188 ;; Registers used:
  6189 ;;		wreg, status,2, status,0
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6195 ;;      Params:         6       0       0       0       0
  6196 ;;      Locals:         0       0       0       0       0
  6197 ;;      Temps:          0       0       0       0       0
  6198 ;;      Totals:         6       0       0       0       0
  6199 ;;Total ram usage:        6 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    2
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_sprintf
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           
  6210                           ;psect for function ___ftge
  6211  1E5D                     ___ftge:	
  6212  1E5D                     l2836:	
  6213                           ;incstack = 0
  6214                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6215                           
  6216  1E5D  1FF5               	btfss	___ftge@ff1+2,7
  6217  1E5E  2E60               	goto	u3951
  6218  1E5F  2E61               	goto	u3950
  6219  1E60                     u3951:	
  6220  1E60  2E6E               	goto	l2840
  6221  1E61                     u3950:	
  6222  1E61                     l2838:	
  6223  1E61  0873               	movf	___ftge@ff1,w
  6224  1E62  3C00               	sublw	0
  6225  1E63  00F3               	movwf	___ftge@ff1
  6226  1E64  0874               	movf	___ftge@ff1+1,w
  6227  1E65  1C03               	skipc
  6228  1E66  0F74               	incfsz	___ftge@ff1+1,w
  6229  1E67  3C00               	sublw	0
  6230  1E68  00F4               	movwf	___ftge@ff1+1
  6231  1E69  0875               	movf	___ftge@ff1+2,w
  6232  1E6A  1C03               	skipc
  6233  1E6B  0F75               	incfsz	___ftge@ff1+2,w
  6234  1E6C  3C80               	sublw	128
  6235  1E6D  00F5               	movwf	___ftge@ff1+2
  6236  1E6E                     l2840:	
  6237  1E6E  1FF8               	btfss	___ftge@ff2+2,7
  6238  1E6F  2E71               	goto	u3961
  6239  1E70  2E72               	goto	u3960
  6240  1E71                     u3961:	
  6241  1E71  2E7F               	goto	l2844
  6242  1E72                     u3960:	
  6243  1E72                     l2842:	
  6244  1E72  0876               	movf	___ftge@ff2,w
  6245  1E73  3C00               	sublw	0
  6246  1E74  00F6               	movwf	___ftge@ff2
  6247  1E75  0877               	movf	___ftge@ff2+1,w
  6248  1E76  1C03               	skipc
  6249  1E77  0F77               	incfsz	___ftge@ff2+1,w
  6250  1E78  3C00               	sublw	0
  6251  1E79  00F7               	movwf	___ftge@ff2+1
  6252  1E7A  0878               	movf	___ftge@ff2+2,w
  6253  1E7B  1C03               	skipc
  6254  1E7C  0F78               	incfsz	___ftge@ff2+2,w
  6255  1E7D  3C80               	sublw	128
  6256  1E7E  00F8               	movwf	___ftge@ff2+2
  6257  1E7F                     l2844:	
  6258  1E7F  3080               	movlw	128
  6259  1E80  06F5               	xorwf	___ftge@ff1+2,f
  6260  1E81                     l2846:	
  6261  1E81  3080               	movlw	128
  6262  1E82  06F8               	xorwf	___ftge@ff2+2,f
  6263  1E83                     l2848:	
  6264  1E83  0878               	movf	___ftge@ff2+2,w
  6265  1E84  0275               	subwf	___ftge@ff1+2,w
  6266  1E85  1D03               	skipz
  6267  1E86  2E8D               	goto	u3975
  6268  1E87  0877               	movf	___ftge@ff2+1,w
  6269  1E88  0274               	subwf	___ftge@ff1+1,w
  6270  1E89  1D03               	skipz
  6271  1E8A  2E8D               	goto	u3975
  6272  1E8B  0876               	movf	___ftge@ff2,w
  6273  1E8C  0273               	subwf	___ftge@ff1,w
  6274  1E8D                     u3975:	
  6275  1E8D  1803               	skipnc
  6276  1E8E  2E90               	goto	u3971
  6277  1E8F  2E91               	goto	u3970
  6278  1E90                     u3971:	
  6279  1E90  2E93               	goto	l2852
  6280  1E91                     u3970:	
  6281  1E91                     l2850:	
  6282  1E91  1003               	clrc
  6283  1E92  2E94               	goto	l753
  6284  1E93                     l2852:	
  6285  1E93  1403               	setc
  6286  1E94                     l753:	
  6287  1E94  0008               	return
  6288  1E95                     __end_of___ftge:	
  6289                           
  6290                           	psect	text21
  6291  1F0D                     __ptext21:	
  6292 ;; *************** function _print_LCD_String *****************
  6293 ;; Defined at:
  6294 ;;		line 71 in file "LCD.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  a               2    6[COMMON] PTR unsigned char 
  6297 ;;		 -> STR_3(16), datos(20), 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  i               2    8[COMMON] int 
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6309 ;;      Params:         2       0       0       0       0
  6310 ;;      Locals:         2       0       0       0       0
  6311 ;;      Temps:          0       3       0       0       0
  6312 ;;      Totals:         4       3       0       0       0
  6313 ;;Total ram usage:        7 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    4
  6316 ;; This function calls:
  6317 ;;		_print_LCD_Char
  6318 ;; This function is called by:
  6319 ;;		_main
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           
  6324                           ;psect for function _print_LCD_String
  6325  1F0D                     _print_LCD_String:	
  6326  1F0D                     l3936:	
  6327                           ;incstack = 0
  6328                           ; Regs used in _print_LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6329                           
  6330                           
  6331                           ;LCD.c: 72:  int i;;LCD.c: 73:  for(i=0;a[i]!='\0';i++)
  6332  1F0D  01F8               	clrf	print_LCD_String@i
  6333  1F0E  01F9               	clrf	print_LCD_String@i+1
  6334  1F0F  2F32               	goto	l3942
  6335  1F10                     l3938:	
  6336                           
  6337                           ;LCD.c: 74:     print_LCD_Char(a[i]);
  6338  1F10  0878               	movf	print_LCD_String@i,w
  6339  1F11  0776               	addwf	print_LCD_String@a,w
  6340  1F12  00A1               	movwf	??_print_LCD_String+1
  6341  1F13  0877               	movf	print_LCD_String@a+1,w
  6342  1F14  00A0               	movwf	??_print_LCD_String
  6343  1F15  1803               	skipnc
  6344  1F16  0AA0               	incf	??_print_LCD_String,f
  6345  1F17  1FF8               	btfss	print_LCD_String@i,7
  6346  1F18  2F1A               	goto	u5950
  6347  1F19  03A0               	decf	??_print_LCD_String,f
  6348  1F1A                     u5950:	
  6349  1F1A  1283               	bcf	3,5	;RP0=0, select bank0
  6350  1F1B  1303               	bcf	3,6	;RP1=0, select bank0
  6351  1F1C  0820               	movf	??_print_LCD_String,w
  6352  1F1D  00A2               	movwf	??_print_LCD_String+2
  6353  1F1E  0822               	movf	??_print_LCD_String+2,w
  6354  1F1F  00FF               	movwf	btemp+1
  6355  1F20  0821               	movf	??_print_LCD_String+1,w
  6356  1F21  0084               	movwf	4
  6357  1F22  160A  118A  2000  160A  158A  	fcall	stringtab
  6358  1F27  120A  118A  27E1  160A  158A  	fcall	_print_LCD_Char
  6359  1F2C                     l3940:	
  6360  1F2C  3001               	movlw	1
  6361  1F2D  07F8               	addwf	print_LCD_String@i,f
  6362  1F2E  1803               	skipnc
  6363  1F2F  0AF9               	incf	print_LCD_String@i+1,f
  6364  1F30  3000               	movlw	0
  6365  1F31  07F9               	addwf	print_LCD_String@i+1,f
  6366  1F32                     l3942:	
  6367  1F32  0878               	movf	print_LCD_String@i,w
  6368  1F33  0776               	addwf	print_LCD_String@a,w
  6369  1F34  1283               	bcf	3,5	;RP0=0, select bank0
  6370  1F35  1303               	bcf	3,6	;RP1=0, select bank0
  6371  1F36  00A1               	movwf	??_print_LCD_String+1
  6372  1F37  0877               	movf	print_LCD_String@a+1,w
  6373  1F38  00A0               	movwf	??_print_LCD_String
  6374  1F39  1803               	skipnc
  6375  1F3A  0AA0               	incf	??_print_LCD_String,f
  6376  1F3B  1FF8               	btfss	print_LCD_String@i,7
  6377  1F3C  2F3E               	goto	u5960
  6378  1F3D  03A0               	decf	??_print_LCD_String,f
  6379  1F3E                     u5960:	
  6380  1F3E  1283               	bcf	3,5	;RP0=0, select bank0
  6381  1F3F  1303               	bcf	3,6	;RP1=0, select bank0
  6382  1F40  0820               	movf	??_print_LCD_String,w
  6383  1F41  00A2               	movwf	??_print_LCD_String+2
  6384  1F42  0822               	movf	??_print_LCD_String+2,w
  6385  1F43  00FF               	movwf	btemp+1
  6386  1F44  0821               	movf	??_print_LCD_String+1,w
  6387  1F45  0084               	movwf	4
  6388  1F46  160A  118A  2000  160A  158A  	fcall	stringtab
  6389  1F4B  3A00               	xorlw	0
  6390  1F4C  1D03               	skipz
  6391  1F4D  2F4F               	goto	u5971
  6392  1F4E  2F50               	goto	u5970
  6393  1F4F                     u5971:	
  6394  1F4F  2F10               	goto	l3938
  6395  1F50                     u5970:	
  6396  1F50                     l67:	
  6397  1F50  0008               	return
  6398  1F51                     __end_of_print_LCD_String:	
  6399                           
  6400                           	psect	text22
  6401  07E1                     __ptext22:	
  6402 ;; *************** function _print_LCD_Char *****************
  6403 ;; Defined at:
  6404 ;;		line 9 in file "LCD.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  caracter        1    wreg     unsigned char 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  caracter        1    5[COMMON] unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0, pclath, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6418 ;;      Params:         0       0       0       0       0
  6419 ;;      Locals:         1       0       0       0       0
  6420 ;;      Temps:          1       0       0       0       0
  6421 ;;      Totals:         2       0       0       0       0
  6422 ;;Total ram usage:        2 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    3
  6425 ;; This function calls:
  6426 ;;		_PUERTO
  6427 ;; This function is called by:
  6428 ;;		_print_LCD_String
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function _print_LCD_Char
  6434  07E1                     _print_LCD_Char:	
  6435                           
  6436                           ;incstack = 0
  6437                           ; Regs used in _print_LCD_Char: [wreg+status,2+status,0+pclath+cstack]
  6438                           ;print_LCD_Char@caracter stored from wreg
  6439  07E1  00F5               	movwf	print_LCD_Char@caracter
  6440  07E2                     l3704:	
  6441                           
  6442                           ;LCD.c: 10:     RE0 = 1;
  6443  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  6444  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  6445  07E4  1409               	bsf	9,0	;volatile
  6446  07E5                     l3706:	
  6447                           
  6448                           ;LCD.c: 11:     PUERTO(caracter);
  6449  07E5  0875               	movf	print_LCD_Char@caracter,w
  6450  07E6  160A  158A  26CF  120A  118A  	fcall	_PUERTO
  6451  07EB                     l3708:	
  6452                           
  6453                           ;LCD.c: 12:     RE1 = 1;
  6454  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  6455  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  6456  07ED  1489               	bsf	9,1	;volatile
  6457  07EE                     l3710:	
  6458                           
  6459                           ;LCD.c: 13:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  6460  07EE  2FEF               	nop2	;2 cycle nop
  6461  07EF  2FF0               	nop2	;2 cycle nop
  6462  07F0  0000               	nop
  6463  07F1                     l3712:	
  6464                           
  6465                           ;LCD.c: 14:     RE1 = 0;
  6466  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  6467  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  6468  07F3  1089               	bcf	9,1	;volatile
  6469  07F4                     l3714:	
  6470                           
  6471                           ;LCD.c: 15:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  6472  07F4  2FF5               	nop2	;2 cycle nop
  6473  07F5  2FF6               	nop2	;2 cycle nop
  6474  07F6  0000               	nop
  6475  07F7                     l3716:	
  6476                           
  6477                           ;LCD.c: 16:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  6478  07F7  3010               	movlw	16
  6479  07F8  00F4               	movwf	??_print_LCD_Char
  6480  07F9                     u6617:	
  6481  07F9  0BF4               	decfsz	??_print_LCD_Char,f
  6482  07FA  2FF9               	goto	u6617
  6483  07FB  0000               	nop
  6484  07FC                     l27:	
  6485  07FC  0008               	return
  6486  07FD                     __end_of_print_LCD_Char:	
  6487                           
  6488                           	psect	text23
  6489  1703                     __ptext23:	
  6490 ;; *************** function _lecADC *****************
  6491 ;; Defined at:
  6492 ;;		line 12 in file "../../IE3027-LAB2/LAB2.X/ADC.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  x               1    wreg     unsigned char 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  x               1    5[COMMON] unsigned char 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      unsigned char 
  6499 ;; Registers used:
  6500 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6506 ;;      Params:         0       0       0       0       0
  6507 ;;      Locals:         1       0       0       0       0
  6508 ;;      Temps:          2       0       0       0       0
  6509 ;;      Totals:         3       0       0       0       0
  6510 ;;Total ram usage:        3 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    2
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		_main
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           
  6521                           ;psect for function _lecADC
  6522  1703                     _lecADC:	
  6523                           
  6524                           ;incstack = 0
  6525                           ; Regs used in _lecADC: [wreg-fsr0h+status,2+status,0]
  6526                           ;lecADC@x stored from wreg
  6527  1703  00F5               	movwf	lecADC@x
  6528  1704                     l3026:	
  6529                           
  6530                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 13:     switch(x){
  6531  1704  2FBB               	goto	l3062
  6532  1705                     l179:	
  6533                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 14:         case 0: TRISAbits.TRISA0=1; ANSELbits.ANS0=
      +                          1; ADCON0bits.CHS=0; break;
  6534                           
  6535  1705  1683               	bsf	3,5	;RP0=1, select bank1
  6536  1706  1303               	bcf	3,6	;RP1=0, select bank1
  6537  1707  1405               	bsf	5,0	;volatile
  6538  1708  1683               	bsf	3,5	;RP0=1, select bank3
  6539  1709  1703               	bsf	3,6	;RP1=1, select bank3
  6540  170A  1408               	bsf	8,0	;volatile
  6541  170B                     l3028:	
  6542  170B  30C3               	movlw	-61
  6543  170C  1283               	bcf	3,5	;RP0=0, select bank0
  6544  170D  1303               	bcf	3,6	;RP1=0, select bank0
  6545  170E  059F               	andwf	31,f	;volatile
  6546  170F  2FEF               	goto	l180
  6547  1710                     l181:	
  6548                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 15:         case 1: TRISAbits.TRISA1=1; ANSELbits.ANS1=
      +                          1; ADCON0bits.CHS=1; break;
  6549                           
  6550  1710  1683               	bsf	3,5	;RP0=1, select bank1
  6551  1711  1303               	bcf	3,6	;RP1=0, select bank1
  6552  1712  1485               	bsf	5,1	;volatile
  6553  1713  1683               	bsf	3,5	;RP0=1, select bank3
  6554  1714  1703               	bsf	3,6	;RP1=1, select bank3
  6555  1715  1488               	bsf	8,1	;volatile
  6556  1716                     l3030:	
  6557  1716  1283               	bcf	3,5	;RP0=0, select bank0
  6558  1717  1303               	bcf	3,6	;RP1=0, select bank0
  6559  1718  081F               	movf	31,w	;volatile
  6560  1719  39C3               	andlw	-61
  6561  171A  3804               	iorlw	4
  6562  171B  009F               	movwf	31	;volatile
  6563  171C  2FEF               	goto	l180
  6564  171D                     l182:	
  6565                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 16:         case 2: TRISAbits.TRISA2=1; ANSELbits.ANS2=
      +                          1; ADCON0bits.CHS=2; break;
  6566                           
  6567  171D  1683               	bsf	3,5	;RP0=1, select bank1
  6568  171E  1303               	bcf	3,6	;RP1=0, select bank1
  6569  171F  1505               	bsf	5,2	;volatile
  6570  1720  1683               	bsf	3,5	;RP0=1, select bank3
  6571  1721  1703               	bsf	3,6	;RP1=1, select bank3
  6572  1722  1508               	bsf	8,2	;volatile
  6573  1723                     l3032:	
  6574  1723  1283               	bcf	3,5	;RP0=0, select bank0
  6575  1724  1303               	bcf	3,6	;RP1=0, select bank0
  6576  1725  081F               	movf	31,w	;volatile
  6577  1726  39C3               	andlw	-61
  6578  1727  3808               	iorlw	8
  6579  1728  009F               	movwf	31	;volatile
  6580  1729  2FEF               	goto	l180
  6581  172A                     l183:	
  6582                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 17:         case 3: TRISAbits.TRISA3=1; ANSELbits.ANS3=
      +                          1; ADCON0bits.CHS=3; break;
  6583                           
  6584  172A  1683               	bsf	3,5	;RP0=1, select bank1
  6585  172B  1303               	bcf	3,6	;RP1=0, select bank1
  6586  172C  1585               	bsf	5,3	;volatile
  6587  172D  1683               	bsf	3,5	;RP0=1, select bank3
  6588  172E  1703               	bsf	3,6	;RP1=1, select bank3
  6589  172F  1588               	bsf	8,3	;volatile
  6590  1730                     l3034:	
  6591  1730  1283               	bcf	3,5	;RP0=0, select bank0
  6592  1731  1303               	bcf	3,6	;RP1=0, select bank0
  6593  1732  081F               	movf	31,w	;volatile
  6594  1733  39C3               	andlw	-61
  6595  1734  380C               	iorlw	12
  6596  1735  009F               	movwf	31	;volatile
  6597  1736  2FEF               	goto	l180
  6598  1737                     l184:	
  6599                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 18:         case 4: TRISAbits.TRISA5=1; ANSELbits.ANS4=
      +                          1; ADCON0bits.CHS=4; break;
  6600                           
  6601  1737  1683               	bsf	3,5	;RP0=1, select bank1
  6602  1738  1303               	bcf	3,6	;RP1=0, select bank1
  6603  1739  1685               	bsf	5,5	;volatile
  6604  173A  1683               	bsf	3,5	;RP0=1, select bank3
  6605  173B  1703               	bsf	3,6	;RP1=1, select bank3
  6606  173C  1608               	bsf	8,4	;volatile
  6607  173D                     l3036:	
  6608  173D  1283               	bcf	3,5	;RP0=0, select bank0
  6609  173E  1303               	bcf	3,6	;RP1=0, select bank0
  6610  173F  081F               	movf	31,w	;volatile
  6611  1740  39C3               	andlw	-61
  6612  1741  3810               	iorlw	16
  6613  1742  009F               	movwf	31	;volatile
  6614  1743  2FEF               	goto	l180
  6615  1744                     l185:	
  6616                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 19:         case 5: TRISEbits.TRISE0=1; ANSELbits.ANS5=
      +                          1; ADCON0bits.CHS=5; break;
  6617                           
  6618  1744  1683               	bsf	3,5	;RP0=1, select bank1
  6619  1745  1303               	bcf	3,6	;RP1=0, select bank1
  6620  1746  1409               	bsf	9,0	;volatile
  6621  1747  1683               	bsf	3,5	;RP0=1, select bank3
  6622  1748  1703               	bsf	3,6	;RP1=1, select bank3
  6623  1749  1688               	bsf	8,5	;volatile
  6624  174A                     l3038:	
  6625  174A  1283               	bcf	3,5	;RP0=0, select bank0
  6626  174B  1303               	bcf	3,6	;RP1=0, select bank0
  6627  174C  081F               	movf	31,w	;volatile
  6628  174D  39C3               	andlw	-61
  6629  174E  3814               	iorlw	20
  6630  174F  009F               	movwf	31	;volatile
  6631  1750  2FEF               	goto	l180
  6632  1751                     l186:	
  6633                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 20:         case 6: TRISEbits.TRISE2=1; ANSELbits.ANS6=
      +                          1; ADCON0bits.CHS=6; break;
  6634                           
  6635  1751  1683               	bsf	3,5	;RP0=1, select bank1
  6636  1752  1303               	bcf	3,6	;RP1=0, select bank1
  6637  1753  1509               	bsf	9,2	;volatile
  6638  1754  1683               	bsf	3,5	;RP0=1, select bank3
  6639  1755  1703               	bsf	3,6	;RP1=1, select bank3
  6640  1756  1708               	bsf	8,6	;volatile
  6641  1757                     l3040:	
  6642  1757  1283               	bcf	3,5	;RP0=0, select bank0
  6643  1758  1303               	bcf	3,6	;RP1=0, select bank0
  6644  1759  081F               	movf	31,w	;volatile
  6645  175A  39C3               	andlw	-61
  6646  175B  3818               	iorlw	24
  6647  175C  009F               	movwf	31	;volatile
  6648  175D  2FEF               	goto	l180
  6649  175E                     l187:	
  6650                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 21:         case 7: TRISEbits.TRISE3=1; ANSELbits.ANS7=
      +                          1; ADCON0bits.CHS=7; break;
  6651                           
  6652  175E  1683               	bsf	3,5	;RP0=1, select bank1
  6653  175F  1303               	bcf	3,6	;RP1=0, select bank1
  6654  1760  1589               	bsf	9,3	;volatile
  6655  1761  1683               	bsf	3,5	;RP0=1, select bank3
  6656  1762  1703               	bsf	3,6	;RP1=1, select bank3
  6657  1763  1788               	bsf	8,7	;volatile
  6658  1764                     l3042:	
  6659  1764  1283               	bcf	3,5	;RP0=0, select bank0
  6660  1765  1303               	bcf	3,6	;RP1=0, select bank0
  6661  1766  081F               	movf	31,w	;volatile
  6662  1767  39C3               	andlw	-61
  6663  1768  381C               	iorlw	28
  6664  1769  009F               	movwf	31	;volatile
  6665  176A  2FEF               	goto	l180
  6666  176B                     l188:	
  6667                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 22:         case 8: TRISBbits.TRISB2=1; ANSELHbits.ANS8
      +                          =1; ADCON0bits.CHS=8; break;
  6668                           
  6669  176B  1683               	bsf	3,5	;RP0=1, select bank1
  6670  176C  1303               	bcf	3,6	;RP1=0, select bank1
  6671  176D  1506               	bsf	6,2	;volatile
  6672  176E  1683               	bsf	3,5	;RP0=1, select bank3
  6673  176F  1703               	bsf	3,6	;RP1=1, select bank3
  6674  1770  1409               	bsf	9,0	;volatile
  6675  1771                     l3044:	
  6676  1771  1283               	bcf	3,5	;RP0=0, select bank0
  6677  1772  1303               	bcf	3,6	;RP1=0, select bank0
  6678  1773  081F               	movf	31,w	;volatile
  6679  1774  39C3               	andlw	-61
  6680  1775  3820               	iorlw	32
  6681  1776  009F               	movwf	31	;volatile
  6682  1777  2FEF               	goto	l180
  6683  1778                     l189:	
  6684                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 23:         case 9: TRISBbits.TRISB3=1; ANSELHbits.ANS9
      +                          =1; ADCON0bits.CHS=9; break;
  6685                           
  6686  1778  1683               	bsf	3,5	;RP0=1, select bank1
  6687  1779  1303               	bcf	3,6	;RP1=0, select bank1
  6688  177A  1586               	bsf	6,3	;volatile
  6689  177B  1683               	bsf	3,5	;RP0=1, select bank3
  6690  177C  1703               	bsf	3,6	;RP1=1, select bank3
  6691  177D  1489               	bsf	9,1	;volatile
  6692  177E                     l3046:	
  6693  177E  1283               	bcf	3,5	;RP0=0, select bank0
  6694  177F  1303               	bcf	3,6	;RP1=0, select bank0
  6695  1780  081F               	movf	31,w	;volatile
  6696  1781  39C3               	andlw	-61
  6697  1782  3824               	iorlw	36
  6698  1783  009F               	movwf	31	;volatile
  6699  1784  2FEF               	goto	l180
  6700  1785                     l190:	
  6701                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 24:         case 10: TRISBbits.TRISB1=1; ANSELHbits.ANS
      +                          10=1; ADCON0bits.CHS=10; break;
  6702                           
  6703  1785  1683               	bsf	3,5	;RP0=1, select bank1
  6704  1786  1303               	bcf	3,6	;RP1=0, select bank1
  6705  1787  1486               	bsf	6,1	;volatile
  6706  1788  1683               	bsf	3,5	;RP0=1, select bank3
  6707  1789  1703               	bsf	3,6	;RP1=1, select bank3
  6708  178A  1509               	bsf	9,2	;volatile
  6709  178B                     l3048:	
  6710  178B  1283               	bcf	3,5	;RP0=0, select bank0
  6711  178C  1303               	bcf	3,6	;RP1=0, select bank0
  6712  178D  081F               	movf	31,w	;volatile
  6713  178E  39C3               	andlw	-61
  6714  178F  3828               	iorlw	40
  6715  1790  009F               	movwf	31	;volatile
  6716  1791  2FEF               	goto	l180
  6717  1792                     l191:	
  6718                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 25:         case 11: TRISBbits.TRISB4=1; ANSELHbits.ANS
      +                          11=1; ADCON0bits.CHS=11; break;
  6719                           
  6720  1792  1683               	bsf	3,5	;RP0=1, select bank1
  6721  1793  1303               	bcf	3,6	;RP1=0, select bank1
  6722  1794  1606               	bsf	6,4	;volatile
  6723  1795  1683               	bsf	3,5	;RP0=1, select bank3
  6724  1796  1703               	bsf	3,6	;RP1=1, select bank3
  6725  1797  1589               	bsf	9,3	;volatile
  6726  1798                     l3050:	
  6727  1798  1283               	bcf	3,5	;RP0=0, select bank0
  6728  1799  1303               	bcf	3,6	;RP1=0, select bank0
  6729  179A  081F               	movf	31,w	;volatile
  6730  179B  39C3               	andlw	-61
  6731  179C  382C               	iorlw	44
  6732  179D  009F               	movwf	31	;volatile
  6733  179E  2FEF               	goto	l180
  6734  179F                     l192:	
  6735                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 26:         case 12: TRISBbits.TRISB0=1; ANSELHbits.ANS
      +                          12=1; ADCON0bits.CHS=12; break;
  6736                           
  6737  179F  1683               	bsf	3,5	;RP0=1, select bank1
  6738  17A0  1303               	bcf	3,6	;RP1=0, select bank1
  6739  17A1  1406               	bsf	6,0	;volatile
  6740  17A2  1683               	bsf	3,5	;RP0=1, select bank3
  6741  17A3  1703               	bsf	3,6	;RP1=1, select bank3
  6742  17A4  1609               	bsf	9,4	;volatile
  6743  17A5                     l3052:	
  6744  17A5  1283               	bcf	3,5	;RP0=0, select bank0
  6745  17A6  1303               	bcf	3,6	;RP1=0, select bank0
  6746  17A7  081F               	movf	31,w	;volatile
  6747  17A8  39C3               	andlw	-61
  6748  17A9  3830               	iorlw	48
  6749  17AA  009F               	movwf	31	;volatile
  6750  17AB  2FEF               	goto	l180
  6751  17AC                     l193:	
  6752                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 27:         case 13: TRISBbits.TRISB5=1; ANSELHbits.ANS
      +                          13=1; ADCON0bits.CHS=13; break;
  6753                           
  6754  17AC  1683               	bsf	3,5	;RP0=1, select bank1
  6755  17AD  1303               	bcf	3,6	;RP1=0, select bank1
  6756  17AE  1686               	bsf	6,5	;volatile
  6757  17AF  1683               	bsf	3,5	;RP0=1, select bank3
  6758  17B0  1703               	bsf	3,6	;RP1=1, select bank3
  6759  17B1  1689               	bsf	9,5	;volatile
  6760  17B2                     l3054:	
  6761  17B2  1283               	bcf	3,5	;RP0=0, select bank0
  6762  17B3  1303               	bcf	3,6	;RP1=0, select bank0
  6763  17B4  081F               	movf	31,w	;volatile
  6764  17B5  39C3               	andlw	-61
  6765  17B6  3834               	iorlw	52
  6766  17B7  009F               	movwf	31	;volatile
  6767  17B8  2FEF               	goto	l180
  6768  17B9                     l3056:	
  6769  17B9  3000               	movlw	0
  6770  17BA  2FFF               	goto	l195
  6771  17BB                     l3062:	
  6772  17BB  0875               	movf	lecADC@x,w
  6773  17BC  00F3               	movwf	??_lecADC
  6774  17BD  01F4               	clrf	??_lecADC+1
  6775                           
  6776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6777                           ; Switch size 1, requested type "simple"
  6778                           ; Number of cases is 1, Range of values is 0 to 0
  6779                           ; switch strategies available:
  6780                           ; Name         Instructions Cycles
  6781                           ; simple_byte            4     3 (average)
  6782                           ; direct_byte           11     8 (fixed)
  6783                           ; jumptable            260     6 (fixed)
  6784                           ;	Chosen strategy is simple_byte
  6785  17BE  0874               	movf	??_lecADC+1,w
  6786  17BF  3A00               	xorlw	0	; case 0
  6787  17C0  1903               	skipnz
  6788  17C1  2FC3               	goto	l4358
  6789  17C2  2FB9               	goto	l3056
  6790  17C3                     l4358:	
  6791                           
  6792                           ; Switch size 1, requested type "simple"
  6793                           ; Number of cases is 14, Range of values is 0 to 13
  6794                           ; switch strategies available:
  6795                           ; Name         Instructions Cycles
  6796                           ; simple_byte           43    22 (average)
  6797                           ; direct_byte           50     8 (fixed)
  6798                           ; jumptable            260     6 (fixed)
  6799                           ;	Chosen strategy is simple_byte
  6800  17C3  0873               	movf	??_lecADC,w
  6801  17C4  3A00               	xorlw	0	; case 0
  6802  17C5  1903               	skipnz
  6803  17C6  2F05               	goto	l179
  6804  17C7  3A01               	xorlw	1	; case 1
  6805  17C8  1903               	skipnz
  6806  17C9  2F10               	goto	l181
  6807  17CA  3A03               	xorlw	3	; case 2
  6808  17CB  1903               	skipnz
  6809  17CC  2F1D               	goto	l182
  6810  17CD  3A01               	xorlw	1	; case 3
  6811  17CE  1903               	skipnz
  6812  17CF  2F2A               	goto	l183
  6813  17D0  3A07               	xorlw	7	; case 4
  6814  17D1  1903               	skipnz
  6815  17D2  2F37               	goto	l184
  6816  17D3  3A01               	xorlw	1	; case 5
  6817  17D4  1903               	skipnz
  6818  17D5  2F44               	goto	l185
  6819  17D6  3A03               	xorlw	3	; case 6
  6820  17D7  1903               	skipnz
  6821  17D8  2F51               	goto	l186
  6822  17D9  3A01               	xorlw	1	; case 7
  6823  17DA  1903               	skipnz
  6824  17DB  2F5E               	goto	l187
  6825  17DC  3A0F               	xorlw	15	; case 8
  6826  17DD  1903               	skipnz
  6827  17DE  2F6B               	goto	l188
  6828  17DF  3A01               	xorlw	1	; case 9
  6829  17E0  1903               	skipnz
  6830  17E1  2F78               	goto	l189
  6831  17E2  3A03               	xorlw	3	; case 10
  6832  17E3  1903               	skipnz
  6833  17E4  2F85               	goto	l190
  6834  17E5  3A01               	xorlw	1	; case 11
  6835  17E6  1903               	skipnz
  6836  17E7  2F92               	goto	l191
  6837  17E8  3A07               	xorlw	7	; case 12
  6838  17E9  1903               	skipnz
  6839  17EA  2F9F               	goto	l192
  6840  17EB  3A01               	xorlw	1	; case 13
  6841  17EC  1903               	skipnz
  6842  17ED  2FAC               	goto	l193
  6843  17EE  2FB9               	goto	l3056
  6844  17EF                     l180:	
  6845                           
  6846                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 30:     ADCON0bits.ADON=1;
  6847  17EF  141F               	bsf	31,0	;volatile
  6848  17F0                     l3064:	
  6849                           
  6850                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 31:     _delay((unsigned long)((20)*(4000000/4000000.0)
      +                          ));
  6851  17F0  3006               	movlw	6
  6852  17F1  00F3               	movwf	??_lecADC
  6853  17F2                     u6627:	
  6854  17F2  0BF3               	decfsz	??_lecADC,f
  6855  17F3  2FF2               	goto	u6627
  6856  17F4  0000               	nop
  6857  17F5                     l3066:	
  6858                           
  6859                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 32:     ADCON0bits.GO=1;
  6860  17F5  1283               	bcf	3,5	;RP0=0, select bank0
  6861  17F6  1303               	bcf	3,6	;RP1=0, select bank0
  6862  17F7  149F               	bsf	31,1	;volatile
  6863  17F8                     l3068:	
  6864                           
  6865                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 34:     if(ADCON0bits.GO_DONE==1){goto resultado;}
  6866  17F8  1C9F               	btfss	31,1	;volatile
  6867  17F9  2FFB               	goto	u4321
  6868  17FA  2FFC               	goto	u4320
  6869  17FB                     u4321:	
  6870  17FB  2FFD               	goto	l197
  6871  17FC                     u4320:	
  6872  17FC  2FF8               	goto	l3068
  6873  17FD                     l197:	
  6874                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 35:     else {ADCON0bits.ADON=0; return ADRESH;}
  6875                           
  6876  17FD  101F               	bcf	31,0	;volatile
  6877  17FE                     l3074:	
  6878  17FE  081E               	movf	30,w	;volatile
  6879  17FF                     l195:	
  6880  17FF  0008               	return
  6881  1800                     __end_of_lecADC:	
  6882                           
  6883                           	psect	text24
  6884  1DA6                     __ptext24:	
  6885 ;; *************** function _conversion *****************
  6886 ;; Defined at:
  6887 ;;		line 100 in file "LAB3.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  b               1    wreg     unsigned char 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  b               1   34[BANK0 ] unsigned char 
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  3   29[BANK0 ] float 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2, status,0, pclath, cstack
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6901 ;;      Params:         0       3       0       0       0
  6902 ;;      Locals:         0       1       0       0       0
  6903 ;;      Temps:          0       2       0       0       0
  6904 ;;      Totals:         0       6       0       0       0
  6905 ;;Total ram usage:        6 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; Hardware stack levels required when called:    4
  6908 ;; This function calls:
  6909 ;;		___awtoft
  6910 ;;		___ftmul
  6911 ;; This function is called by:
  6912 ;;		_main
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           
  6917                           ;psect for function _conversion
  6918  1DA6                     _conversion:	
  6919                           
  6920                           ;incstack = 0
  6921                           ; Regs used in _conversion: [wreg+status,2+status,0+pclath+cstack]
  6922                           ;conversion@b stored from wreg
  6923  1DA6  1283               	bcf	3,5	;RP0=0, select bank0
  6924  1DA7  1303               	bcf	3,6	;RP1=0, select bank0
  6925  1DA8  00C2               	movwf	conversion@b
  6926  1DA9                     l3970:	
  6927                           
  6928                           ;LAB3.c: 101:     return b*0.0196;
  6929  1DA9  3090               	movlw	144
  6930  1DAA  00AD               	movwf	___ftmul@f1
  6931  1DAB  30A0               	movlw	160
  6932  1DAC  00AE               	movwf	___ftmul@f1+1
  6933  1DAD  303C               	movlw	60
  6934  1DAE  00AF               	movwf	___ftmul@f1+2
  6935  1DAF  0842               	movf	conversion@b,w
  6936  1DB0  00C0               	movwf	??_conversion
  6937  1DB1  01C1               	clrf	??_conversion+1
  6938  1DB2  0840               	movf	??_conversion,w
  6939  1DB3  00A3               	movwf	___awtoft@c
  6940  1DB4  0841               	movf	??_conversion+1,w
  6941  1DB5  00A4               	movwf	___awtoft@c+1
  6942  1DB6  120A  158A  2000  160A  158A  	fcall	___awtoft
  6943  1DBB  1283               	bcf	3,5	;RP0=0, select bank0
  6944  1DBC  1303               	bcf	3,6	;RP1=0, select bank0
  6945  1DBD  0823               	movf	?___awtoft,w
  6946  1DBE  00B0               	movwf	___ftmul@f2
  6947  1DBF  0824               	movf	?___awtoft+1,w
  6948  1DC0  00B1               	movwf	___ftmul@f2+1
  6949  1DC1  0825               	movf	?___awtoft+2,w
  6950  1DC2  00B2               	movwf	___ftmul@f2+2
  6951  1DC3  160A  118A  2524  160A  158A  	fcall	___ftmul
  6952  1DC8  1283               	bcf	3,5	;RP0=0, select bank0
  6953  1DC9  1303               	bcf	3,6	;RP1=0, select bank0
  6954  1DCA  082D               	movf	?___ftmul,w
  6955  1DCB  00BD               	movwf	?_conversion
  6956  1DCC  082E               	movf	?___ftmul+1,w
  6957  1DCD  00BE               	movwf	?_conversion+1
  6958  1DCE  082F               	movf	?___ftmul+2,w
  6959  1DCF  00BF               	movwf	?_conversion+2
  6960  1DD0                     l154:	
  6961  1DD0  0008               	return
  6962  1DD1                     __end_of_conversion:	
  6963                           
  6964                           	psect	text25
  6965  1524                     __ptext25:	
  6966 ;; *************** function ___ftmul *****************
  6967 ;; Defined at:
  6968 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftmul.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  f1              3   13[BANK0 ] float 
  6971 ;;  f2              3   16[BANK0 ] float 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;  f3_as_produc    3   24[BANK0 ] unsigned um
  6974 ;;  sign            1   28[BANK0 ] unsigned char 
  6975 ;;  cntr            1   27[BANK0 ] unsigned char 
  6976 ;;  exp             1   23[BANK0 ] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  3   13[BANK0 ] float 
  6979 ;; Registers used:
  6980 ;;		wreg, status,2, status,0, pclath, cstack
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6986 ;;      Params:         0       6       0       0       0
  6987 ;;      Locals:         0       6       0       0       0
  6988 ;;      Temps:          0       4       0       0       0
  6989 ;;      Totals:         0      16       0       0       0
  6990 ;;Total ram usage:       16 bytes
  6991 ;; Hardware stack levels used:    1
  6992 ;; Hardware stack levels required when called:    3
  6993 ;; This function calls:
  6994 ;;		___ftpack
  6995 ;; This function is called by:
  6996 ;;		_conversion
  6997 ;;		_fround
  6998 ;;		_scale
  6999 ;;		_sprintf
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           
  7004                           ;psect for function ___ftmul
  7005  1524                     ___ftmul:	
  7006  1524                     l3654:	
  7007                           ;incstack = 0
  7008                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7009                           
  7010  1524  1283               	bcf	3,5	;RP0=0, select bank0
  7011  1525  1303               	bcf	3,6	;RP1=0, select bank0
  7012  1526  082D               	movf	___ftmul@f1,w
  7013  1527  00B3               	movwf	??___ftmul
  7014  1528  082E               	movf	___ftmul@f1+1,w
  7015  1529  00B4               	movwf	??___ftmul+1
  7016  152A  082F               	movf	___ftmul@f1+2,w
  7017  152B  00B5               	movwf	??___ftmul+2
  7018  152C  1003               	clrc
  7019  152D  0D34               	rlf	??___ftmul+1,w
  7020  152E  0D35               	rlf	??___ftmul+2,w
  7021  152F  00B6               	movwf	??___ftmul+3
  7022  1530  0836               	movf	??___ftmul+3,w
  7023  1531  00B7               	movwf	___ftmul@exp
  7024  1532  0837               	movf	___ftmul@exp,w
  7025  1533  1D03               	btfss	3,2
  7026  1534  2D36               	goto	u5451
  7027  1535  2D37               	goto	u5450
  7028  1536                     u5451:	
  7029  1536  2D3E               	goto	l3660
  7030  1537                     u5450:	
  7031  1537                     l3656:	
  7032  1537  3000               	movlw	0
  7033  1538  00AD               	movwf	?___ftmul
  7034  1539  3000               	movlw	0
  7035  153A  00AE               	movwf	?___ftmul+1
  7036  153B  3000               	movlw	0
  7037  153C  00AF               	movwf	?___ftmul+2
  7038  153D  2E08               	goto	l759
  7039  153E                     l3660:	
  7040  153E  0830               	movf	___ftmul@f2,w
  7041  153F  00B3               	movwf	??___ftmul
  7042  1540  0831               	movf	___ftmul@f2+1,w
  7043  1541  00B4               	movwf	??___ftmul+1
  7044  1542  0832               	movf	___ftmul@f2+2,w
  7045  1543  00B5               	movwf	??___ftmul+2
  7046  1544  1003               	clrc
  7047  1545  0D34               	rlf	??___ftmul+1,w
  7048  1546  0D35               	rlf	??___ftmul+2,w
  7049  1547  00B6               	movwf	??___ftmul+3
  7050  1548  0836               	movf	??___ftmul+3,w
  7051  1549  00BC               	movwf	___ftmul@sign
  7052  154A  083C               	movf	___ftmul@sign,w
  7053  154B  1D03               	btfss	3,2
  7054  154C  2D4E               	goto	u5461
  7055  154D  2D4F               	goto	u5460
  7056  154E                     u5461:	
  7057  154E  2D56               	goto	l3666
  7058  154F                     u5460:	
  7059  154F                     l3662:	
  7060  154F  3000               	movlw	0
  7061  1550  00AD               	movwf	?___ftmul
  7062  1551  3000               	movlw	0
  7063  1552  00AE               	movwf	?___ftmul+1
  7064  1553  3000               	movlw	0
  7065  1554  00AF               	movwf	?___ftmul+2
  7066  1555  2E08               	goto	l759
  7067  1556                     l3666:	
  7068  1556  083C               	movf	___ftmul@sign,w
  7069  1557  3E7B               	addlw	123
  7070  1558  00B3               	movwf	??___ftmul
  7071  1559  0833               	movf	??___ftmul,w
  7072  155A  07B7               	addwf	___ftmul@exp,f
  7073  155B  082D               	movf	___ftmul@f1,w
  7074  155C  00B3               	movwf	??___ftmul
  7075  155D  082E               	movf	___ftmul@f1+1,w
  7076  155E  00B4               	movwf	??___ftmul+1
  7077  155F  082F               	movf	___ftmul@f1+2,w
  7078  1560  00B5               	movwf	??___ftmul+2
  7079  1561  3010               	movlw	16
  7080  1562                     u5475:	
  7081  1562  1003               	clrc
  7082  1563  0CB5               	rrf	??___ftmul+2,f
  7083  1564  0CB4               	rrf	??___ftmul+1,f
  7084  1565  0CB3               	rrf	??___ftmul,f
  7085  1566                     u5470:	
  7086  1566  3EFF               	addlw	-1
  7087  1567  1D03               	skipz
  7088  1568  2D62               	goto	u5475
  7089  1569  0833               	movf	??___ftmul,w
  7090  156A  00B6               	movwf	??___ftmul+3
  7091  156B  0836               	movf	??___ftmul+3,w
  7092  156C  00BC               	movwf	___ftmul@sign
  7093  156D  0830               	movf	___ftmul@f2,w
  7094  156E  00B3               	movwf	??___ftmul
  7095  156F  0831               	movf	___ftmul@f2+1,w
  7096  1570  00B4               	movwf	??___ftmul+1
  7097  1571  0832               	movf	___ftmul@f2+2,w
  7098  1572  00B5               	movwf	??___ftmul+2
  7099  1573  3010               	movlw	16
  7100  1574                     u5485:	
  7101  1574  1003               	clrc
  7102  1575  0CB5               	rrf	??___ftmul+2,f
  7103  1576  0CB4               	rrf	??___ftmul+1,f
  7104  1577  0CB3               	rrf	??___ftmul,f
  7105  1578                     u5480:	
  7106  1578  3EFF               	addlw	-1
  7107  1579  1D03               	skipz
  7108  157A  2D74               	goto	u5485
  7109  157B  0833               	movf	??___ftmul,w
  7110  157C  00B6               	movwf	??___ftmul+3
  7111  157D  0836               	movf	??___ftmul+3,w
  7112  157E  06BC               	xorwf	___ftmul@sign,f
  7113  157F  3080               	movlw	128
  7114  1580  00B3               	movwf	??___ftmul
  7115  1581  0833               	movf	??___ftmul,w
  7116  1582  05BC               	andwf	___ftmul@sign,f
  7117  1583                     l3668:	
  7118  1583  17AE               	bsf	___ftmul@f1+1,7
  7119  1584                     l3670:	
  7120  1584  17B1               	bsf	___ftmul@f2+1,7
  7121  1585                     l3672:	
  7122  1585  30FF               	movlw	255
  7123  1586  05B0               	andwf	___ftmul@f2,f
  7124  1587  30FF               	movlw	255
  7125  1588  05B1               	andwf	___ftmul@f2+1,f
  7126  1589  3000               	movlw	0
  7127  158A  05B2               	andwf	___ftmul@f2+2,f
  7128  158B                     l3674:	
  7129  158B  3000               	movlw	0
  7130  158C  00B8               	movwf	___ftmul@f3_as_product
  7131  158D  3000               	movlw	0
  7132  158E  00B9               	movwf	___ftmul@f3_as_product+1
  7133  158F  3000               	movlw	0
  7134  1590  00BA               	movwf	___ftmul@f3_as_product+2
  7135  1591                     l3676:	
  7136  1591  3007               	movlw	7
  7137  1592  00B3               	movwf	??___ftmul
  7138  1593  0833               	movf	??___ftmul,w
  7139  1594  00BB               	movwf	___ftmul@cntr
  7140  1595                     l3678:	
  7141  1595  1C2D               	btfss	___ftmul@f1,0
  7142  1596  2D98               	goto	u5491
  7143  1597  2D99               	goto	u5490
  7144  1598                     u5491:	
  7145  1598  2DA9               	goto	l3682
  7146  1599                     u5490:	
  7147  1599                     l3680:	
  7148  1599  0830               	movf	___ftmul@f2,w
  7149  159A  07B8               	addwf	___ftmul@f3_as_product,f
  7150  159B  0831               	movf	___ftmul@f2+1,w
  7151  159C  1103               	clrz
  7152  159D  1803               	skipnc
  7153  159E  0A31               	incf	___ftmul@f2+1,w
  7154  159F  1903               	skipnz
  7155  15A0  2DA2               	goto	u5501
  7156  15A1  07B9               	addwf	___ftmul@f3_as_product+1,f
  7157  15A2                     u5501:	
  7158  15A2  0832               	movf	___ftmul@f2+2,w
  7159  15A3  1103               	clrz
  7160  15A4  1803               	skipnc
  7161  15A5  0A32               	incf	___ftmul@f2+2,w
  7162  15A6  1903               	skipnz
  7163  15A7  2DA9               	goto	u5502
  7164  15A8  07BA               	addwf	___ftmul@f3_as_product+2,f
  7165  15A9                     u5502:	
  7166  15A9                     l3682:	
  7167  15A9  3001               	movlw	1
  7168  15AA                     u5515:	
  7169  15AA  1003               	clrc
  7170  15AB  0CAF               	rrf	___ftmul@f1+2,f
  7171  15AC  0CAE               	rrf	___ftmul@f1+1,f
  7172  15AD  0CAD               	rrf	___ftmul@f1,f
  7173  15AE  3EFF               	addlw	-1
  7174  15AF  1D03               	skipz
  7175  15B0  2DAA               	goto	u5515
  7176  15B1                     l3684:	
  7177  15B1  3001               	movlw	1
  7178  15B2                     u5525:	
  7179  15B2  1003               	clrc
  7180  15B3  0DB0               	rlf	___ftmul@f2,f
  7181  15B4  0DB1               	rlf	___ftmul@f2+1,f
  7182  15B5  0DB2               	rlf	___ftmul@f2+2,f
  7183  15B6  3EFF               	addlw	-1
  7184  15B7  1D03               	skipz
  7185  15B8  2DB2               	goto	u5525
  7186  15B9                     l3686:	
  7187  15B9  3001               	movlw	1
  7188  15BA  02BB               	subwf	___ftmul@cntr,f
  7189  15BB  1D03               	btfss	3,2
  7190  15BC  2DBE               	goto	u5531
  7191  15BD  2DBF               	goto	u5530
  7192  15BE                     u5531:	
  7193  15BE  2D95               	goto	l3678
  7194  15BF                     u5530:	
  7195  15BF                     l3688:	
  7196  15BF  3009               	movlw	9
  7197  15C0  00B3               	movwf	??___ftmul
  7198  15C1  0833               	movf	??___ftmul,w
  7199  15C2  00BB               	movwf	___ftmul@cntr
  7200  15C3                     l3690:	
  7201  15C3  1C2D               	btfss	___ftmul@f1,0
  7202  15C4  2DC6               	goto	u5541
  7203  15C5  2DC7               	goto	u5540
  7204  15C6                     u5541:	
  7205  15C6  2DD7               	goto	l3694
  7206  15C7                     u5540:	
  7207  15C7                     l3692:	
  7208  15C7  0830               	movf	___ftmul@f2,w
  7209  15C8  07B8               	addwf	___ftmul@f3_as_product,f
  7210  15C9  0831               	movf	___ftmul@f2+1,w
  7211  15CA  1103               	clrz
  7212  15CB  1803               	skipnc
  7213  15CC  0A31               	incf	___ftmul@f2+1,w
  7214  15CD  1903               	skipnz
  7215  15CE  2DD0               	goto	u5551
  7216  15CF  07B9               	addwf	___ftmul@f3_as_product+1,f
  7217  15D0                     u5551:	
  7218  15D0  0832               	movf	___ftmul@f2+2,w
  7219  15D1  1103               	clrz
  7220  15D2  1803               	skipnc
  7221  15D3  0A32               	incf	___ftmul@f2+2,w
  7222  15D4  1903               	skipnz
  7223  15D5  2DD7               	goto	u5552
  7224  15D6  07BA               	addwf	___ftmul@f3_as_product+2,f
  7225  15D7                     u5552:	
  7226  15D7                     l3694:	
  7227  15D7  3001               	movlw	1
  7228  15D8                     u5565:	
  7229  15D8  1003               	clrc
  7230  15D9  0CAF               	rrf	___ftmul@f1+2,f
  7231  15DA  0CAE               	rrf	___ftmul@f1+1,f
  7232  15DB  0CAD               	rrf	___ftmul@f1,f
  7233  15DC  3EFF               	addlw	-1
  7234  15DD  1D03               	skipz
  7235  15DE  2DD8               	goto	u5565
  7236  15DF                     l3696:	
  7237  15DF  3001               	movlw	1
  7238  15E0                     u5575:	
  7239  15E0  1003               	clrc
  7240  15E1  0CBA               	rrf	___ftmul@f3_as_product+2,f
  7241  15E2  0CB9               	rrf	___ftmul@f3_as_product+1,f
  7242  15E3  0CB8               	rrf	___ftmul@f3_as_product,f
  7243  15E4  3EFF               	addlw	-1
  7244  15E5  1D03               	skipz
  7245  15E6  2DE0               	goto	u5575
  7246  15E7                     l3698:	
  7247  15E7  3001               	movlw	1
  7248  15E8  02BB               	subwf	___ftmul@cntr,f
  7249  15E9  1D03               	btfss	3,2
  7250  15EA  2DEC               	goto	u5581
  7251  15EB  2DED               	goto	u5580
  7252  15EC                     u5581:	
  7253  15EC  2DC3               	goto	l3690
  7254  15ED                     u5580:	
  7255  15ED                     l3700:	
  7256  15ED  0838               	movf	___ftmul@f3_as_product,w
  7257  15EE  00F3               	movwf	___ftpack@arg
  7258  15EF  0839               	movf	___ftmul@f3_as_product+1,w
  7259  15F0  00F4               	movwf	___ftpack@arg+1
  7260  15F1  083A               	movf	___ftmul@f3_as_product+2,w
  7261  15F2  00F5               	movwf	___ftpack@arg+2
  7262  15F3  0837               	movf	___ftmul@exp,w
  7263  15F4  00B3               	movwf	??___ftmul
  7264  15F5  0833               	movf	??___ftmul,w
  7265  15F6  00F6               	movwf	___ftpack@exp
  7266  15F7  083C               	movf	___ftmul@sign,w
  7267  15F8  00B4               	movwf	??___ftmul+1
  7268  15F9  0834               	movf	??___ftmul+1,w
  7269  15FA  00F7               	movwf	___ftpack@sign
  7270  15FB  160A  118A  21DF  160A  118A  	fcall	___ftpack
  7271  1600  0873               	movf	?___ftpack,w
  7272  1601  1283               	bcf	3,5	;RP0=0, select bank0
  7273  1602  1303               	bcf	3,6	;RP1=0, select bank0
  7274  1603  00AD               	movwf	?___ftmul
  7275  1604  0874               	movf	?___ftpack+1,w
  7276  1605  00AE               	movwf	?___ftmul+1
  7277  1606  0875               	movf	?___ftpack+2,w
  7278  1607  00AF               	movwf	?___ftmul+2
  7279  1608                     l759:	
  7280  1608  0008               	return
  7281  1609                     __end_of___ftmul:	
  7282                           
  7283                           	psect	text26
  7284  0800                     __ptext26:	
  7285 ;; *************** function ___awtoft *****************
  7286 ;; Defined at:
  7287 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awtoft.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  c               2    3[BANK0 ] int 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  sign            1    6[BANK0 ] unsigned char 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  3    3[BANK0 ] float 
  7294 ;; Registers used:
  7295 ;;		wreg, status,2, status,0, pclath, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7301 ;;      Params:         0       3       0       0       0
  7302 ;;      Locals:         0       1       0       0       0
  7303 ;;      Temps:          2       0       0       0       0
  7304 ;;      Totals:         2       4       0       0       0
  7305 ;;Total ram usage:        6 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:    3
  7308 ;; This function calls:
  7309 ;;		___ftpack
  7310 ;; This function is called by:
  7311 ;;		_conversion
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           
  7316                           ;psect for function ___awtoft
  7317  0800                     ___awtoft:	
  7318  0800                     l3858:	
  7319                           ;incstack = 0
  7320                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7321                           
  7322  0800  1283               	bcf	3,5	;RP0=0, select bank0
  7323  0801  1303               	bcf	3,6	;RP1=0, select bank0
  7324  0802  01A6               	clrf	___awtoft@sign
  7325  0803                     l3860:	
  7326  0803  1FA4               	btfss	___awtoft@c+1,7
  7327  0804  2806               	goto	u5831
  7328  0805  2807               	goto	u5830
  7329  0806                     u5831:	
  7330  0806  280E               	goto	l3866
  7331  0807                     u5830:	
  7332  0807                     l3862:	
  7333  0807  09A3               	comf	___awtoft@c,f
  7334  0808  09A4               	comf	___awtoft@c+1,f
  7335  0809  0AA3               	incf	___awtoft@c,f
  7336  080A  1903               	skipnz
  7337  080B  0AA4               	incf	___awtoft@c+1,f
  7338  080C                     l3864:	
  7339  080C  01A6               	clrf	___awtoft@sign
  7340  080D  0AA6               	incf	___awtoft@sign,f
  7341  080E                     l3866:	
  7342  080E  0823               	movf	___awtoft@c,w
  7343  080F  00F3               	movwf	___ftpack@arg
  7344  0810  0824               	movf	___awtoft@c+1,w
  7345  0811  00F4               	movwf	___ftpack@arg+1
  7346  0812  01F5               	clrf	___ftpack@arg+2
  7347  0813  308E               	movlw	142
  7348  0814  00F8               	movwf	??___awtoft
  7349  0815  0878               	movf	??___awtoft,w
  7350  0816  00F6               	movwf	___ftpack@exp
  7351  0817  0826               	movf	___awtoft@sign,w
  7352  0818  00F9               	movwf	??___awtoft+1
  7353  0819  0879               	movf	??___awtoft+1,w
  7354  081A  00F7               	movwf	___ftpack@sign
  7355  081B  160A  118A  21DF  120A  158A  	fcall	___ftpack
  7356  0820  0873               	movf	?___ftpack,w
  7357  0821  1283               	bcf	3,5	;RP0=0, select bank0
  7358  0822  1303               	bcf	3,6	;RP1=0, select bank0
  7359  0823  00A3               	movwf	?___awtoft
  7360  0824  0874               	movf	?___ftpack+1,w
  7361  0825  00A4               	movwf	?___awtoft+1
  7362  0826  0875               	movf	?___ftpack+2,w
  7363  0827  00A5               	movwf	?___awtoft+2
  7364  0828                     l652:	
  7365  0828  0008               	return
  7366  0829                     __end_of___awtoft:	
  7367                           
  7368                           	psect	text27
  7369  11DF                     __ptext27:	
  7370 ;; *************** function ___ftpack *****************
  7371 ;; Defined at:
  7372 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\float.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  arg             3    3[COMMON] unsigned um
  7375 ;;  exp             1    6[COMMON] unsigned char 
  7376 ;;  sign            1    7[COMMON] unsigned char 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;		None
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  3    3[COMMON] float 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7388 ;;      Params:         5       0       0       0       0
  7389 ;;      Locals:         0       0       0       0       0
  7390 ;;      Temps:          0       3       0       0       0
  7391 ;;      Totals:         5       3       0       0       0
  7392 ;;Total ram usage:        8 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; Hardware stack levels required when called:    2
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		___awtoft
  7399 ;;		___ftadd
  7400 ;;		___ftmul
  7401 ;;		___lltoft
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           
  7406                           ;psect for function ___ftpack
  7407  11DF                     ___ftpack:	
  7408  11DF                     l3490:	
  7409                           ;incstack = 0
  7410                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7411                           
  7412  11DF  0876               	movf	___ftpack@exp,w
  7413  11E0  1903               	btfsc	3,2
  7414  11E1  29E3               	goto	u4911
  7415  11E2  29E4               	goto	u4910
  7416  11E3                     u4911:	
  7417  11E3  29EB               	goto	l3494
  7418  11E4                     u4910:	
  7419  11E4                     l3492:	
  7420  11E4  0875               	movf	___ftpack@arg+2,w
  7421  11E5  0474               	iorwf	___ftpack@arg+1,w
  7422  11E6  0473               	iorwf	___ftpack@arg,w
  7423  11E7  1D03               	skipz
  7424  11E8  29EA               	goto	u4921
  7425  11E9  29EB               	goto	u4920
  7426  11EA                     u4921:	
  7427  11EA  2A00               	goto	l3500
  7428  11EB                     u4920:	
  7429  11EB                     l3494:	
  7430  11EB  3000               	movlw	0
  7431  11EC  00F3               	movwf	?___ftpack
  7432  11ED  3000               	movlw	0
  7433  11EE  00F4               	movwf	?___ftpack+1
  7434  11EF  3000               	movlw	0
  7435  11F0  00F5               	movwf	?___ftpack+2
  7436  11F1  2A60               	goto	l675
  7437  11F2                     l3498:	
  7438  11F2  3001               	movlw	1
  7439  11F3  1283               	bcf	3,5	;RP0=0, select bank0
  7440  11F4  1303               	bcf	3,6	;RP1=0, select bank0
  7441  11F5  00A0               	movwf	??___ftpack
  7442  11F6  0820               	movf	??___ftpack,w
  7443  11F7  07F6               	addwf	___ftpack@exp,f
  7444  11F8  3001               	movlw	1
  7445  11F9                     u4935:	
  7446  11F9  1003               	clrc
  7447  11FA  0CF5               	rrf	___ftpack@arg+2,f
  7448  11FB  0CF4               	rrf	___ftpack@arg+1,f
  7449  11FC  0CF3               	rrf	___ftpack@arg,f
  7450  11FD  3EFF               	addlw	-1
  7451  11FE  1D03               	skipz
  7452  11FF  29F9               	goto	u4935
  7453  1200                     l3500:	
  7454  1200  30FE               	movlw	254
  7455  1201  0575               	andwf	___ftpack@arg+2,w
  7456  1202  1D03               	btfss	3,2
  7457  1203  2A05               	goto	u4941
  7458  1204  2A06               	goto	u4940
  7459  1205                     u4941:	
  7460  1205  29F2               	goto	l3498
  7461  1206                     u4940:	
  7462  1206  2A1F               	goto	l679
  7463  1207                     l3502:	
  7464  1207  3001               	movlw	1
  7465  1208  1283               	bcf	3,5	;RP0=0, select bank0
  7466  1209  1303               	bcf	3,6	;RP1=0, select bank0
  7467  120A  00A0               	movwf	??___ftpack
  7468  120B  0820               	movf	??___ftpack,w
  7469  120C  07F6               	addwf	___ftpack@exp,f
  7470  120D                     l3504:	
  7471  120D  3001               	movlw	1
  7472  120E  07F3               	addwf	___ftpack@arg,f
  7473  120F  3000               	movlw	0
  7474  1210  1803               	skipnc
  7475  1211  3001               	movlw	1
  7476  1212  07F4               	addwf	___ftpack@arg+1,f
  7477  1213  3000               	movlw	0
  7478  1214  1803               	skipnc
  7479  1215  3001               	movlw	1
  7480  1216  07F5               	addwf	___ftpack@arg+2,f
  7481  1217                     l3506:	
  7482  1217  3001               	movlw	1
  7483  1218                     u4955:	
  7484  1218  1003               	clrc
  7485  1219  0CF5               	rrf	___ftpack@arg+2,f
  7486  121A  0CF4               	rrf	___ftpack@arg+1,f
  7487  121B  0CF3               	rrf	___ftpack@arg,f
  7488  121C  3EFF               	addlw	-1
  7489  121D  1D03               	skipz
  7490  121E  2A18               	goto	u4955
  7491  121F                     l679:	
  7492  121F  30FF               	movlw	255
  7493  1220  0575               	andwf	___ftpack@arg+2,w
  7494  1221  1D03               	btfss	3,2
  7495  1222  2A24               	goto	u4961
  7496  1223  2A25               	goto	u4960
  7497  1224                     u4961:	
  7498  1224  2A07               	goto	l3502
  7499  1225                     u4960:	
  7500  1225  2A30               	goto	l3510
  7501  1226                     l3508:	
  7502  1226  3001               	movlw	1
  7503  1227  02F6               	subwf	___ftpack@exp,f
  7504  1228  3001               	movlw	1
  7505  1229                     u4975:	
  7506  1229  1003               	clrc
  7507  122A  0DF3               	rlf	___ftpack@arg,f
  7508  122B  0DF4               	rlf	___ftpack@arg+1,f
  7509  122C  0DF5               	rlf	___ftpack@arg+2,f
  7510  122D  3EFF               	addlw	-1
  7511  122E  1D03               	skipz
  7512  122F  2A29               	goto	u4975
  7513  1230                     l3510:	
  7514  1230  1BF4               	btfsc	___ftpack@arg+1,7
  7515  1231  2A33               	goto	u4981
  7516  1232  2A34               	goto	u4980
  7517  1233                     u4981:	
  7518  1233  2A3A               	goto	l686
  7519  1234                     u4980:	
  7520  1234                     l3512:	
  7521  1234  3002               	movlw	2
  7522  1235  0276               	subwf	___ftpack@exp,w
  7523  1236  1803               	skipnc
  7524  1237  2A39               	goto	u4991
  7525  1238  2A3A               	goto	u4990
  7526  1239                     u4991:	
  7527  1239  2A26               	goto	l3508
  7528  123A                     u4990:	
  7529  123A                     l686:	
  7530  123A  1876               	btfsc	___ftpack@exp,0
  7531  123B  2A3D               	goto	u5001
  7532  123C  2A3E               	goto	u5000
  7533  123D                     u5001:	
  7534  123D  2A44               	goto	l687
  7535  123E                     u5000:	
  7536  123E                     l3514:	
  7537  123E  30FF               	movlw	255
  7538  123F  05F3               	andwf	___ftpack@arg,f
  7539  1240  307F               	movlw	127
  7540  1241  05F4               	andwf	___ftpack@arg+1,f
  7541  1242  30FF               	movlw	255
  7542  1243  05F5               	andwf	___ftpack@arg+2,f
  7543  1244                     l687:	
  7544  1244  1003               	clrc
  7545  1245  0CF6               	rrf	___ftpack@exp,f
  7546  1246                     l3516:	
  7547  1246  0876               	movf	___ftpack@exp,w
  7548  1247  1283               	bcf	3,5	;RP0=0, select bank0
  7549  1248  1303               	bcf	3,6	;RP1=0, select bank0
  7550  1249  00A0               	movwf	??___ftpack
  7551  124A  01A1               	clrf	??___ftpack+1
  7552  124B  01A2               	clrf	??___ftpack+2
  7553  124C  3010               	movlw	16
  7554  124D                     u5015:	
  7555  124D  1003               	clrc
  7556  124E  0DA0               	rlf	??___ftpack,f
  7557  124F  0DA1               	rlf	??___ftpack+1,f
  7558  1250  0DA2               	rlf	??___ftpack+2,f
  7559  1251                     u5010:	
  7560  1251  3EFF               	addlw	-1
  7561  1252  1D03               	skipz
  7562  1253  2A4D               	goto	u5015
  7563  1254  0820               	movf	??___ftpack,w
  7564  1255  04F3               	iorwf	___ftpack@arg,f
  7565  1256  0821               	movf	??___ftpack+1,w
  7566  1257  04F4               	iorwf	___ftpack@arg+1,f
  7567  1258  0822               	movf	??___ftpack+2,w
  7568  1259  04F5               	iorwf	___ftpack@arg+2,f
  7569  125A                     l3518:	
  7570  125A  0877               	movf	___ftpack@sign,w
  7571  125B  1903               	btfsc	3,2
  7572  125C  2A5E               	goto	u5021
  7573  125D  2A5F               	goto	u5020
  7574  125E                     u5021:	
  7575  125E  2A60               	goto	l688
  7576  125F                     u5020:	
  7577  125F                     l3520:	
  7578  125F  17F5               	bsf	___ftpack@arg+2,7
  7579  1260                     l688:	
  7580  1260                     l675:	
  7581  1260  0008               	return
  7582  1261                     __end_of___ftpack:	
  7583                           
  7584                           	psect	text28
  7585  1CBE                     __ptext28:	
  7586 ;; *************** function _configIO *****************
  7587 ;; Defined at:
  7588 ;;		line 85 in file "LAB3.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;		None
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;		None
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1    wreg      void 
  7595 ;; Registers used:
  7596 ;;		status,2
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7602 ;;      Params:         0       0       0       0       0
  7603 ;;      Locals:         0       0       0       0       0
  7604 ;;      Temps:          0       0       0       0       0
  7605 ;;      Totals:         0       0       0       0       0
  7606 ;;Total ram usage:        0 bytes
  7607 ;; Hardware stack levels used:    1
  7608 ;; Hardware stack levels required when called:    2
  7609 ;; This function calls:
  7610 ;;		Nothing
  7611 ;; This function is called by:
  7612 ;;		_main
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           
  7617                           ;psect for function _configIO
  7618  1CBE                     _configIO:	
  7619  1CBE                     l2986:	
  7620                           ;incstack = 0
  7621                           ; Regs used in _configIO: [status,2]
  7622                           
  7623                           
  7624                           ;LAB3.c: 86:     TRISB=0;
  7625  1CBE  1683               	bsf	3,5	;RP0=1, select bank1
  7626  1CBF  1303               	bcf	3,6	;RP1=0, select bank1
  7627  1CC0  0186               	clrf	6	;volatile
  7628                           
  7629                           ;LAB3.c: 87:     TRISA=0;
  7630  1CC1  0185               	clrf	5	;volatile
  7631                           
  7632                           ;LAB3.c: 88:     TRISE=0;
  7633  1CC2  0189               	clrf	9	;volatile
  7634                           
  7635                           ;LAB3.c: 89:     ANSEL=0;
  7636  1CC3  1683               	bsf	3,5	;RP0=1, select bank3
  7637  1CC4  1703               	bsf	3,6	;RP1=1, select bank3
  7638  1CC5  0188               	clrf	8	;volatile
  7639                           
  7640                           ;LAB3.c: 90:     ANSELH=0;
  7641  1CC6  0189               	clrf	9	;volatile
  7642                           
  7643                           ;LAB3.c: 91:     PORTB=0;
  7644  1CC7  1283               	bcf	3,5	;RP0=0, select bank0
  7645  1CC8  1303               	bcf	3,6	;RP1=0, select bank0
  7646  1CC9  0186               	clrf	6	;volatile
  7647                           
  7648                           ;LAB3.c: 92:     PORTE=0;
  7649  1CCA  0189               	clrf	9	;volatile
  7650  1CCB                     l2988:	
  7651                           
  7652                           ;LAB3.c: 93:     INTCONbits.PEIE=1;
  7653  1CCB  170B               	bsf	11,6	;volatile
  7654  1CCC                     l2990:	
  7655                           
  7656                           ;LAB3.c: 94:     PIE1bits.RCIE=1;
  7657  1CCC  1683               	bsf	3,5	;RP0=1, select bank1
  7658  1CCD  1303               	bcf	3,6	;RP1=0, select bank1
  7659  1CCE  168C               	bsf	12,5	;volatile
  7660  1CCF                     l2992:	
  7661                           
  7662                           ;LAB3.c: 95:     PIR1bits.RCIF=0;
  7663  1CCF  1283               	bcf	3,5	;RP0=0, select bank0
  7664  1CD0  1303               	bcf	3,6	;RP1=0, select bank0
  7665  1CD1  128C               	bcf	12,5	;volatile
  7666  1CD2                     l2994:	
  7667                           
  7668                           ;LAB3.c: 96:     INTCONbits.GIE=1;
  7669  1CD2  178B               	bsf	11,7	;volatile
  7670  1CD3                     l151:	
  7671  1CD3  0008               	return
  7672  1CD4                     __end_of_configIO:	
  7673                           
  7674                           	psect	text29
  7675  1C96                     __ptext29:	
  7676 ;; *************** function _configADC *****************
  7677 ;; Defined at:
  7678 ;;		line 8 in file "../../IE3027-LAB2/LAB2.X/ADC.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;		None
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;		None
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  1    wreg      void 
  7685 ;; Registers used:
  7686 ;;		wreg, status,2, status,0
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7692 ;;      Params:         0       0       0       0       0
  7693 ;;      Locals:         0       0       0       0       0
  7694 ;;      Temps:          0       0       0       0       0
  7695 ;;      Totals:         0       0       0       0       0
  7696 ;;Total ram usage:        0 bytes
  7697 ;; Hardware stack levels used:    1
  7698 ;; Hardware stack levels required when called:    2
  7699 ;; This function calls:
  7700 ;;		Nothing
  7701 ;; This function is called by:
  7702 ;;		_main
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           
  7707                           ;psect for function _configADC
  7708  1C96                     _configADC:	
  7709  1C96                     l2996:	
  7710                           ;incstack = 0
  7711                           ; Regs used in _configADC: [wreg+status,2+status,0]
  7712                           
  7713                           
  7714                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 9:     ADCON0bits.ADCS=1;
  7715  1C96  1283               	bcf	3,5	;RP0=0, select bank0
  7716  1C97  1303               	bcf	3,6	;RP1=0, select bank0
  7717  1C98  081F               	movf	31,w	;volatile
  7718  1C99  393F               	andlw	-193
  7719  1C9A  3840               	iorlw	64
  7720  1C9B  009F               	movwf	31	;volatile
  7721  1C9C                     l2998:	
  7722                           
  7723                           ;../../IE3027-LAB2/LAB2.X/ADC.c: 10:     ADCON1=0;
  7724  1C9C  1683               	bsf	3,5	;RP0=1, select bank1
  7725  1C9D  1303               	bcf	3,6	;RP1=0, select bank1
  7726  1C9E  019F               	clrf	31	;volatile
  7727  1C9F                     l175:	
  7728  1C9F  0008               	return
  7729  1CA0                     __end_of_configADC:	
  7730                           
  7731                           	psect	text30
  7732  1D7B                     __ptext30:	
  7733 ;; *************** function _Write_USART_String *****************
  7734 ;; Defined at:
  7735 ;;		line 34 in file "USART.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  a               2    4[COMMON] PTR unsigned char 
  7738 ;;		 -> datos(20), STR_1(21), 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  i               1    7[COMMON] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      void 
  7743 ;; Registers used:
  7744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7750 ;;      Params:         2       0       0       0       0
  7751 ;;      Locals:         1       0       0       0       0
  7752 ;;      Temps:          1       0       0       0       0
  7753 ;;      Totals:         4       0       0       0       0
  7754 ;;Total ram usage:        4 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:    3
  7757 ;; This function calls:
  7758 ;;		_Write_USART
  7759 ;; This function is called by:
  7760 ;;		_main
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           
  7765                           ;psect for function _Write_USART_String
  7766  1D7B                     _Write_USART_String:	
  7767  1D7B                     l3086:	
  7768                           ;incstack = 0
  7769                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7770                           
  7771                           
  7772                           ;USART.c: 35:     uint8_t i;;USART.c: 36:     for(i=0;a[i]!='\0';i++){
  7773  1D7B  01F7               	clrf	Write_USART_String@i
  7774  1D7C  2D92               	goto	l3092
  7775  1D7D                     l3088:	
  7776                           
  7777                           ;USART.c: 37:         Write_USART(a[i]);
  7778  1D7D  0877               	movf	Write_USART_String@i,w
  7779  1D7E  0774               	addwf	Write_USART_String@a,w
  7780  1D7F  0084               	movwf	4
  7781  1D80  0875               	movf	Write_USART_String@a+1,w
  7782  1D81  1803               	skipnc
  7783  1D82  0A75               	incf	Write_USART_String@a+1,w
  7784  1D83  00FF               	movwf	btemp+1
  7785  1D84  160A  118A  2000  160A  158A  	fcall	stringtab
  7786  1D89  160A  158A  24A0  160A  158A  	fcall	_Write_USART
  7787  1D8E                     l3090:	
  7788                           
  7789                           ;USART.c: 38:     }
  7790  1D8E  3001               	movlw	1
  7791  1D8F  00F6               	movwf	??_Write_USART_String
  7792  1D90  0876               	movf	??_Write_USART_String,w
  7793  1D91  07F7               	addwf	Write_USART_String@i,f
  7794  1D92                     l3092:	
  7795  1D92  0877               	movf	Write_USART_String@i,w
  7796  1D93  0774               	addwf	Write_USART_String@a,w
  7797  1D94  0084               	movwf	4
  7798  1D95  0875               	movf	Write_USART_String@a+1,w
  7799  1D96  1803               	skipnc
  7800  1D97  0A75               	incf	Write_USART_String@a+1,w
  7801  1D98  1283               	bcf	3,5	;RP0=0, select bank0
  7802  1D99  1303               	bcf	3,6	;RP1=0, select bank0
  7803  1D9A  00FF               	movwf	btemp+1
  7804  1D9B  160A  118A  2000  160A  158A  	fcall	stringtab
  7805  1DA0  3A00               	xorlw	0
  7806  1DA1  1D03               	skipz
  7807  1DA2  2DA4               	goto	u4331
  7808  1DA3  2DA5               	goto	u4330
  7809  1DA4                     u4331:	
  7810  1DA4  2D7D               	goto	l3088
  7811  1DA5                     u4330:	
  7812  1DA5                     l239:	
  7813  1DA5  0008               	return
  7814  1DA6                     __end_of_Write_USART_String:	
  7815                           
  7816                           	psect	text31
  7817  1CA0                     __ptext31:	
  7818 ;; *************** function _Write_USART *****************
  7819 ;; Defined at:
  7820 ;;		line 30 in file "USART.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  a               1    wreg     unsigned char 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  a               1    3[COMMON] unsigned char 
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      void 
  7827 ;; Registers used:
  7828 ;;		wreg
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7834 ;;      Params:         0       0       0       0       0
  7835 ;;      Locals:         1       0       0       0       0
  7836 ;;      Temps:          0       0       0       0       0
  7837 ;;      Totals:         1       0       0       0       0
  7838 ;;Total ram usage:        1 bytes
  7839 ;; Hardware stack levels used:    1
  7840 ;; Hardware stack levels required when called:    2
  7841 ;; This function calls:
  7842 ;;		Nothing
  7843 ;; This function is called by:
  7844 ;;		_main
  7845 ;;		_Write_USART_String
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           
  7850                           ;psect for function _Write_USART
  7851  1CA0                     _Write_USART:	
  7852                           
  7853                           ;incstack = 0
  7854                           ; Regs used in _Write_USART: [wreg]
  7855                           ;Write_USART@a stored from wreg
  7856  1CA0  00F3               	movwf	Write_USART@a
  7857  1CA1                     l2564:	
  7858  1CA1                     l230:	
  7859                           ;USART.c: 31:     while(!TRMT);
  7860                           
  7861  1CA1  1683               	bsf	3,5	;RP0=1, select bank1
  7862  1CA2  1303               	bcf	3,6	;RP1=0, select bank1
  7863  1CA3  1C98               	btfss	24,1	;volatile
  7864  1CA4  2CA6               	goto	u3381
  7865  1CA5  2CA7               	goto	u3380
  7866  1CA6                     u3381:	
  7867  1CA6  2CA1               	goto	l230
  7868  1CA7                     u3380:	
  7869  1CA7                     l2566:	
  7870                           
  7871                           ;USART.c: 32:     TXREG=a;
  7872  1CA7  0873               	movf	Write_USART@a,w
  7873  1CA8  1283               	bcf	3,5	;RP0=0, select bank0
  7874  1CA9  1303               	bcf	3,6	;RP1=0, select bank0
  7875  1CAA  0099               	movwf	25	;volatile
  7876  1CAB                     l233:	
  7877  1CAB  0008               	return
  7878  1CAC                     __end_of_Write_USART:	
  7879                           
  7880                           	psect	text32
  7881  1447                     __ptext32:	
  7882 ;; *************** function _USART_Init *****************
  7883 ;; Defined at:
  7884 ;;		line 9 in file "USART.c"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;  baudrate        4    8[BANK0 ] const long 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  x               2   24[BANK0 ] unsigned int 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      unsigned char 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0, pclath, cstack
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7898 ;;      Params:         0       4       0       0       0
  7899 ;;      Locals:         0       2       0       0       0
  7900 ;;      Temps:          0      12       0       0       0
  7901 ;;      Totals:         0      18       0       0       0
  7902 ;;Total ram usage:       18 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:    3
  7905 ;; This function calls:
  7906 ;;		___aldiv
  7907 ;; This function is called by:
  7908 ;;		_main
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           
  7913                           ;psect for function _USART_Init
  7914  1447                     _USART_Init:	
  7915  1447                     l3944:	
  7916                           ;incstack = 0
  7917                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  7918                           
  7919                           
  7920                           ;USART.c: 10:   unsigned int x;;USART.c: 11:   x = (4000000 - baudrate*64)/(baudrate*64)
      +                          ;
  7921  1447  1283               	bcf	3,5	;RP0=0, select bank0
  7922  1448  1303               	bcf	3,6	;RP1=0, select bank0
  7923  1449  0828               	movf	USART_Init@baudrate,w
  7924  144A  00AC               	movwf	??_USART_Init
  7925  144B  0829               	movf	USART_Init@baudrate+1,w
  7926  144C  00AD               	movwf	??_USART_Init+1
  7927  144D  082A               	movf	USART_Init@baudrate+2,w
  7928  144E  00AE               	movwf	??_USART_Init+2
  7929  144F  082B               	movf	USART_Init@baudrate+3,w
  7930  1450  00AF               	movwf	??_USART_Init+3
  7931  1451  3006               	movlw	6
  7932  1452                     u5985:	
  7933  1452  1003               	clrc
  7934  1453  0DAC               	rlf	??_USART_Init,f
  7935  1454  0DAD               	rlf	??_USART_Init+1,f
  7936  1455  0DAE               	rlf	??_USART_Init+2,f
  7937  1456  0DAF               	rlf	??_USART_Init+3,f
  7938  1457                     u5980:	
  7939  1457  3EFF               	addlw	-1
  7940  1458  1D03               	skipz
  7941  1459  2C52               	goto	u5985
  7942  145A  082F               	movf	??_USART_Init+3,w
  7943  145B  00A3               	movwf	___aldiv@divisor+3
  7944  145C  082E               	movf	??_USART_Init+2,w
  7945  145D  00A2               	movwf	___aldiv@divisor+2
  7946  145E  082D               	movf	??_USART_Init+1,w
  7947  145F  00A1               	movwf	___aldiv@divisor+1
  7948  1460  082C               	movf	??_USART_Init,w
  7949  1461  00A0               	movwf	___aldiv@divisor
  7950  1462  0828               	movf	USART_Init@baudrate,w
  7951  1463  00B0               	movwf	??_USART_Init+4
  7952  1464  0829               	movf	USART_Init@baudrate+1,w
  7953  1465  00B1               	movwf	??_USART_Init+5
  7954  1466  082A               	movf	USART_Init@baudrate+2,w
  7955  1467  00B2               	movwf	??_USART_Init+6
  7956  1468  082B               	movf	USART_Init@baudrate+3,w
  7957  1469  00B3               	movwf	??_USART_Init+7
  7958  146A  3006               	movlw	6
  7959  146B                     u5995:	
  7960  146B  1003               	clrc
  7961  146C  0DB0               	rlf	??_USART_Init+4,f
  7962  146D  0DB1               	rlf	??_USART_Init+5,f
  7963  146E  0DB2               	rlf	??_USART_Init+6,f
  7964  146F  0DB3               	rlf	??_USART_Init+7,f
  7965  1470                     u5990:	
  7966  1470  3EFF               	addlw	-1
  7967  1471  1D03               	skipz
  7968  1472  2C6B               	goto	u5995
  7969  1473  3000               	movlw	0
  7970  1474  00B4               	movwf	??_USART_Init+8
  7971  1475  3009               	movlw	9
  7972  1476  00B5               	movwf	??_USART_Init+9
  7973  1477  303D               	movlw	61
  7974  1478  00B6               	movwf	??_USART_Init+10
  7975  1479  3000               	movlw	0
  7976  147A  00B7               	movwf	??_USART_Init+11
  7977  147B  0830               	movf	??_USART_Init+4,w
  7978  147C  02B4               	subwf	??_USART_Init+8,f
  7979  147D  0831               	movf	??_USART_Init+5,w
  7980  147E  1C03               	skipc
  7981  147F  0F31               	incfsz	??_USART_Init+5,w
  7982  1480  2C82               	goto	u6001
  7983  1481  2C83               	goto	u6002
  7984  1482                     u6001:	
  7985  1482  02B5               	subwf	??_USART_Init+9,f
  7986  1483                     u6002:	
  7987  1483  0832               	movf	??_USART_Init+6,w
  7988  1484  1C03               	skipc
  7989  1485  0F32               	incfsz	??_USART_Init+6,w
  7990  1486  2C88               	goto	u6003
  7991  1487  2C89               	goto	u6004
  7992  1488                     u6003:	
  7993  1488  02B6               	subwf	??_USART_Init+10,f
  7994  1489                     u6004:	
  7995  1489  0833               	movf	??_USART_Init+7,w
  7996  148A  1C03               	skipc
  7997  148B  0F33               	incfsz	??_USART_Init+7,w
  7998  148C  2C8E               	goto	u6005
  7999  148D  2C8F               	goto	u6006
  8000  148E                     u6005:	
  8001  148E  02B7               	subwf	??_USART_Init+11,f
  8002  148F                     u6006:	
  8003  148F  0837               	movf	??_USART_Init+11,w
  8004  1490  00A7               	movwf	___aldiv@dividend+3
  8005  1491  0836               	movf	??_USART_Init+10,w
  8006  1492  00A6               	movwf	___aldiv@dividend+2
  8007  1493  0835               	movf	??_USART_Init+9,w
  8008  1494  00A5               	movwf	___aldiv@dividend+1
  8009  1495  0834               	movf	??_USART_Init+8,w
  8010  1496  00A4               	movwf	___aldiv@dividend
  8011  1497  160A  118A  22ED  160A  118A  	fcall	___aldiv
  8012  149C  1283               	bcf	3,5	;RP0=0, select bank0
  8013  149D  1303               	bcf	3,6	;RP1=0, select bank0
  8014  149E  0821               	movf	?___aldiv+1,w
  8015  149F  00B9               	movwf	USART_Init@x+1
  8016  14A0  0820               	movf	?___aldiv,w
  8017  14A1  00B8               	movwf	USART_Init@x
  8018  14A2                     l3946:	
  8019                           
  8020                           ;USART.c: 12:   if(x>255)
  8021  14A2  3001               	movlw	1
  8022  14A3  0239               	subwf	USART_Init@x+1,w
  8023  14A4  3000               	movlw	0
  8024  14A5  1903               	skipnz
  8025  14A6  0238               	subwf	USART_Init@x,w
  8026  14A7  1C03               	skipc
  8027  14A8  2CAA               	goto	u6011
  8028  14A9  2CAB               	goto	u6010
  8029  14AA                     u6011:	
  8030  14AA  2D07               	goto	l3952
  8031  14AB                     u6010:	
  8032  14AB                     l3948:	
  8033                           
  8034                           ;USART.c: 13:   {;USART.c: 14:     x = (4000000 - baudrate*16)/(baudrate*16);
  8035  14AB  0828               	movf	USART_Init@baudrate,w
  8036  14AC  00AC               	movwf	??_USART_Init
  8037  14AD  0829               	movf	USART_Init@baudrate+1,w
  8038  14AE  00AD               	movwf	??_USART_Init+1
  8039  14AF  082A               	movf	USART_Init@baudrate+2,w
  8040  14B0  00AE               	movwf	??_USART_Init+2
  8041  14B1  082B               	movf	USART_Init@baudrate+3,w
  8042  14B2  00AF               	movwf	??_USART_Init+3
  8043  14B3  3004               	movlw	4
  8044  14B4                     u6025:	
  8045  14B4  1003               	clrc
  8046  14B5  0DAC               	rlf	??_USART_Init,f
  8047  14B6  0DAD               	rlf	??_USART_Init+1,f
  8048  14B7  0DAE               	rlf	??_USART_Init+2,f
  8049  14B8  0DAF               	rlf	??_USART_Init+3,f
  8050  14B9                     u6020:	
  8051  14B9  3EFF               	addlw	-1
  8052  14BA  1D03               	skipz
  8053  14BB  2CB4               	goto	u6025
  8054  14BC  082F               	movf	??_USART_Init+3,w
  8055  14BD  00A3               	movwf	___aldiv@divisor+3
  8056  14BE  082E               	movf	??_USART_Init+2,w
  8057  14BF  00A2               	movwf	___aldiv@divisor+2
  8058  14C0  082D               	movf	??_USART_Init+1,w
  8059  14C1  00A1               	movwf	___aldiv@divisor+1
  8060  14C2  082C               	movf	??_USART_Init,w
  8061  14C3  00A0               	movwf	___aldiv@divisor
  8062  14C4  0828               	movf	USART_Init@baudrate,w
  8063  14C5  00B0               	movwf	??_USART_Init+4
  8064  14C6  0829               	movf	USART_Init@baudrate+1,w
  8065  14C7  00B1               	movwf	??_USART_Init+5
  8066  14C8  082A               	movf	USART_Init@baudrate+2,w
  8067  14C9  00B2               	movwf	??_USART_Init+6
  8068  14CA  082B               	movf	USART_Init@baudrate+3,w
  8069  14CB  00B3               	movwf	??_USART_Init+7
  8070  14CC  3004               	movlw	4
  8071  14CD                     u6035:	
  8072  14CD  1003               	clrc
  8073  14CE  0DB0               	rlf	??_USART_Init+4,f
  8074  14CF  0DB1               	rlf	??_USART_Init+5,f
  8075  14D0  0DB2               	rlf	??_USART_Init+6,f
  8076  14D1  0DB3               	rlf	??_USART_Init+7,f
  8077  14D2                     u6030:	
  8078  14D2  3EFF               	addlw	-1
  8079  14D3  1D03               	skipz
  8080  14D4  2CCD               	goto	u6035
  8081  14D5  3000               	movlw	0
  8082  14D6  00B4               	movwf	??_USART_Init+8
  8083  14D7  3009               	movlw	9
  8084  14D8  00B5               	movwf	??_USART_Init+9
  8085  14D9  303D               	movlw	61
  8086  14DA  00B6               	movwf	??_USART_Init+10
  8087  14DB  3000               	movlw	0
  8088  14DC  00B7               	movwf	??_USART_Init+11
  8089  14DD  0830               	movf	??_USART_Init+4,w
  8090  14DE  02B4               	subwf	??_USART_Init+8,f
  8091  14DF  0831               	movf	??_USART_Init+5,w
  8092  14E0  1C03               	skipc
  8093  14E1  0F31               	incfsz	??_USART_Init+5,w
  8094  14E2  2CE4               	goto	u6041
  8095  14E3  2CE5               	goto	u6042
  8096  14E4                     u6041:	
  8097  14E4  02B5               	subwf	??_USART_Init+9,f
  8098  14E5                     u6042:	
  8099  14E5  0832               	movf	??_USART_Init+6,w
  8100  14E6  1C03               	skipc
  8101  14E7  0F32               	incfsz	??_USART_Init+6,w
  8102  14E8  2CEA               	goto	u6043
  8103  14E9  2CEB               	goto	u6044
  8104  14EA                     u6043:	
  8105  14EA  02B6               	subwf	??_USART_Init+10,f
  8106  14EB                     u6044:	
  8107  14EB  0833               	movf	??_USART_Init+7,w
  8108  14EC  1C03               	skipc
  8109  14ED  0F33               	incfsz	??_USART_Init+7,w
  8110  14EE  2CF0               	goto	u6045
  8111  14EF  2CF1               	goto	u6046
  8112  14F0                     u6045:	
  8113  14F0  02B7               	subwf	??_USART_Init+11,f
  8114  14F1                     u6046:	
  8115  14F1  0837               	movf	??_USART_Init+11,w
  8116  14F2  00A7               	movwf	___aldiv@dividend+3
  8117  14F3  0836               	movf	??_USART_Init+10,w
  8118  14F4  00A6               	movwf	___aldiv@dividend+2
  8119  14F5  0835               	movf	??_USART_Init+9,w
  8120  14F6  00A5               	movwf	___aldiv@dividend+1
  8121  14F7  0834               	movf	??_USART_Init+8,w
  8122  14F8  00A4               	movwf	___aldiv@dividend
  8123  14F9  160A  118A  22ED  160A  118A  	fcall	___aldiv
  8124  14FE  1283               	bcf	3,5	;RP0=0, select bank0
  8125  14FF  1303               	bcf	3,6	;RP1=0, select bank0
  8126  1500  0821               	movf	?___aldiv+1,w
  8127  1501  00B9               	movwf	USART_Init@x+1
  8128  1502  0820               	movf	?___aldiv,w
  8129  1503  00B8               	movwf	USART_Init@x
  8130  1504                     l3950:	
  8131                           
  8132                           ;USART.c: 15:     BRGH = 1;
  8133  1504  1683               	bsf	3,5	;RP0=1, select bank1
  8134  1505  1303               	bcf	3,6	;RP1=0, select bank1
  8135  1506  1518               	bsf	24,2	;volatile
  8136  1507                     l3952:	
  8137                           
  8138                           ;USART.c: 17:   if(x<256)
  8139  1507  3001               	movlw	1
  8140  1508  1283               	bcf	3,5	;RP0=0, select bank0
  8141  1509  0239               	subwf	USART_Init@x+1,w
  8142  150A  3000               	movlw	0
  8143  150B  1903               	skipnz
  8144  150C  0238               	subwf	USART_Init@x,w
  8145  150D  1803               	skipnc
  8146  150E  2D10               	goto	u6051
  8147  150F  2D11               	goto	u6050
  8148  1510                     u6051:	
  8149  1510  2D23               	goto	l227
  8150  1511                     u6050:	
  8151  1511                     l3954:	
  8152                           
  8153                           ;USART.c: 18:   {;USART.c: 19:     SPBRG = x;
  8154  1511  0838               	movf	USART_Init@x,w
  8155  1512  1683               	bsf	3,5	;RP0=1, select bank1
  8156  1513  1303               	bcf	3,6	;RP1=0, select bank1
  8157  1514  0099               	movwf	25	;volatile
  8158  1515                     l3956:	
  8159                           
  8160                           ;USART.c: 20:     SYNC = 0;
  8161  1515  1218               	bcf	24,4	;volatile
  8162  1516                     l3958:	
  8163                           
  8164                           ;USART.c: 21:     SPEN = 1;
  8165  1516  1283               	bcf	3,5	;RP0=0, select bank0
  8166  1517  1303               	bcf	3,6	;RP1=0, select bank0
  8167  1518  1798               	bsf	24,7	;volatile
  8168  1519                     l3960:	
  8169                           
  8170                           ;USART.c: 22:     TRISC7 = 1;
  8171  1519  1683               	bsf	3,5	;RP0=1, select bank1
  8172  151A  1303               	bcf	3,6	;RP1=0, select bank1
  8173  151B  1787               	bsf	7,7	;volatile
  8174  151C                     l3962:	
  8175                           
  8176                           ;USART.c: 23:     TRISC6 = 0;
  8177  151C  1307               	bcf	7,6	;volatile
  8178  151D                     l3964:	
  8179                           
  8180                           ;USART.c: 24:     CREN = 1;
  8181  151D  1283               	bcf	3,5	;RP0=0, select bank0
  8182  151E  1303               	bcf	3,6	;RP1=0, select bank0
  8183  151F  1618               	bsf	24,4	;volatile
  8184  1520                     l3966:	
  8185                           
  8186                           ;USART.c: 25:     TXEN = 1;
  8187  1520  1683               	bsf	3,5	;RP0=1, select bank1
  8188  1521  1303               	bcf	3,6	;RP1=0, select bank1
  8189  1522  1698               	bsf	24,5	;volatile
  8190  1523                     l227:	
  8191  1523  0008               	return
  8192  1524                     __end_of_USART_Init:	
  8193                           
  8194                           	psect	text33
  8195  12ED                     __ptext33:	
  8196 ;; *************** function ___aldiv *****************
  8197 ;; Defined at:
  8198 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;  divisor         4    0[BANK0 ] long 
  8201 ;;  dividend        4    4[BANK0 ] long 
  8202 ;; Auto vars:     Size  Location     Type
  8203 ;;  quotient        4    6[COMMON] long 
  8204 ;;  sign            1    5[COMMON] unsigned char 
  8205 ;;  counter         1    4[COMMON] unsigned char 
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  4    0[BANK0 ] long 
  8208 ;; Registers used:
  8209 ;;		wreg, status,2, status,0
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8215 ;;      Params:         0       8       0       0       0
  8216 ;;      Locals:         6       0       0       0       0
  8217 ;;      Temps:          1       0       0       0       0
  8218 ;;      Totals:         7       8       0       0       0
  8219 ;;Total ram usage:       15 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    2
  8222 ;; This function calls:
  8223 ;;		Nothing
  8224 ;; This function is called by:
  8225 ;;		_USART_Init
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           
  8230                           ;psect for function ___aldiv
  8231  12ED                     ___aldiv:	
  8232  12ED                     l3818:	
  8233                           ;incstack = 0
  8234                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8235                           
  8236  12ED  01F5               	clrf	___aldiv@sign
  8237  12EE                     l3820:	
  8238  12EE  1283               	bcf	3,5	;RP0=0, select bank0
  8239  12EF  1303               	bcf	3,6	;RP1=0, select bank0
  8240  12F0  1FA3               	btfss	___aldiv@divisor+3,7
  8241  12F1  2AF3               	goto	u5731
  8242  12F2  2AF4               	goto	u5730
  8243  12F3                     u5731:	
  8244  12F3  2B01               	goto	l521
  8245  12F4                     u5730:	
  8246  12F4                     l3822:	
  8247  12F4  09A0               	comf	___aldiv@divisor,f
  8248  12F5  09A1               	comf	___aldiv@divisor+1,f
  8249  12F6  09A2               	comf	___aldiv@divisor+2,f
  8250  12F7  09A3               	comf	___aldiv@divisor+3,f
  8251  12F8  0AA0               	incf	___aldiv@divisor,f
  8252  12F9  1903               	skipnz
  8253  12FA  0AA1               	incf	___aldiv@divisor+1,f
  8254  12FB  1903               	skipnz
  8255  12FC  0AA2               	incf	___aldiv@divisor+2,f
  8256  12FD  1903               	skipnz
  8257  12FE  0AA3               	incf	___aldiv@divisor+3,f
  8258  12FF  01F5               	clrf	___aldiv@sign
  8259  1300  0AF5               	incf	___aldiv@sign,f
  8260  1301                     l521:	
  8261  1301  1FA7               	btfss	___aldiv@dividend+3,7
  8262  1302  2B04               	goto	u5741
  8263  1303  2B05               	goto	u5740
  8264  1304                     u5741:	
  8265  1304  2B14               	goto	l3828
  8266  1305                     u5740:	
  8267  1305                     l3824:	
  8268  1305  09A4               	comf	___aldiv@dividend,f
  8269  1306  09A5               	comf	___aldiv@dividend+1,f
  8270  1307  09A6               	comf	___aldiv@dividend+2,f
  8271  1308  09A7               	comf	___aldiv@dividend+3,f
  8272  1309  0AA4               	incf	___aldiv@dividend,f
  8273  130A  1903               	skipnz
  8274  130B  0AA5               	incf	___aldiv@dividend+1,f
  8275  130C  1903               	skipnz
  8276  130D  0AA6               	incf	___aldiv@dividend+2,f
  8277  130E  1903               	skipnz
  8278  130F  0AA7               	incf	___aldiv@dividend+3,f
  8279  1310                     l3826:	
  8280  1310  3001               	movlw	1
  8281  1311  00F3               	movwf	??___aldiv
  8282  1312  0873               	movf	??___aldiv,w
  8283  1313  06F5               	xorwf	___aldiv@sign,f
  8284  1314                     l3828:	
  8285  1314  3000               	movlw	0
  8286  1315  00F9               	movwf	___aldiv@quotient+3
  8287  1316  3000               	movlw	0
  8288  1317  00F8               	movwf	___aldiv@quotient+2
  8289  1318  3000               	movlw	0
  8290  1319  00F7               	movwf	___aldiv@quotient+1
  8291  131A  3000               	movlw	0
  8292  131B  00F6               	movwf	___aldiv@quotient
  8293  131C                     l3830:	
  8294  131C  0823               	movf	___aldiv@divisor+3,w
  8295  131D  0422               	iorwf	___aldiv@divisor+2,w
  8296  131E  0421               	iorwf	___aldiv@divisor+1,w
  8297  131F  0420               	iorwf	___aldiv@divisor,w
  8298  1320  1903               	skipnz
  8299  1321  2B23               	goto	u5751
  8300  1322  2B24               	goto	u5750
  8301  1323                     u5751:	
  8302  1323  2B71               	goto	l3850
  8303  1324                     u5750:	
  8304  1324                     l3832:	
  8305  1324  01F4               	clrf	___aldiv@counter
  8306  1325  0AF4               	incf	___aldiv@counter,f
  8307  1326  2B34               	goto	l3836
  8308  1327                     l3834:	
  8309  1327  3001               	movlw	1
  8310  1328  00F3               	movwf	??___aldiv
  8311  1329                     u5765:	
  8312  1329  1003               	clrc
  8313  132A  0DA0               	rlf	___aldiv@divisor,f
  8314  132B  0DA1               	rlf	___aldiv@divisor+1,f
  8315  132C  0DA2               	rlf	___aldiv@divisor+2,f
  8316  132D  0DA3               	rlf	___aldiv@divisor+3,f
  8317  132E  0BF3               	decfsz	??___aldiv,f
  8318  132F  2B29               	goto	u5765
  8319  1330  3001               	movlw	1
  8320  1331  00F3               	movwf	??___aldiv
  8321  1332  0873               	movf	??___aldiv,w
  8322  1333  07F4               	addwf	___aldiv@counter,f
  8323  1334                     l3836:	
  8324  1334  1FA3               	btfss	___aldiv@divisor+3,7
  8325  1335  2B37               	goto	u5771
  8326  1336  2B38               	goto	u5770
  8327  1337                     u5771:	
  8328  1337  2B27               	goto	l3834
  8329  1338                     u5770:	
  8330  1338                     l3838:	
  8331  1338  3001               	movlw	1
  8332  1339  00F3               	movwf	??___aldiv
  8333  133A                     u5785:	
  8334  133A  1003               	clrc
  8335  133B  0DF6               	rlf	___aldiv@quotient,f
  8336  133C  0DF7               	rlf	___aldiv@quotient+1,f
  8337  133D  0DF8               	rlf	___aldiv@quotient+2,f
  8338  133E  0DF9               	rlf	___aldiv@quotient+3,f
  8339  133F  0BF3               	decfsz	??___aldiv,f
  8340  1340  2B3A               	goto	u5785
  8341  1341                     l3840:	
  8342  1341  0823               	movf	___aldiv@divisor+3,w
  8343  1342  0227               	subwf	___aldiv@dividend+3,w
  8344  1343  1D03               	skipz
  8345  1344  2B4F               	goto	u5795
  8346  1345  0822               	movf	___aldiv@divisor+2,w
  8347  1346  0226               	subwf	___aldiv@dividend+2,w
  8348  1347  1D03               	skipz
  8349  1348  2B4F               	goto	u5795
  8350  1349  0821               	movf	___aldiv@divisor+1,w
  8351  134A  0225               	subwf	___aldiv@dividend+1,w
  8352  134B  1D03               	skipz
  8353  134C  2B4F               	goto	u5795
  8354  134D  0820               	movf	___aldiv@divisor,w
  8355  134E  0224               	subwf	___aldiv@dividend,w
  8356  134F                     u5795:	
  8357  134F  1C03               	skipc
  8358  1350  2B52               	goto	u5791
  8359  1351  2B53               	goto	u5790
  8360  1352                     u5791:	
  8361  1352  2B62               	goto	l3846
  8362  1353                     u5790:	
  8363  1353                     l3842:	
  8364  1353  0820               	movf	___aldiv@divisor,w
  8365  1354  02A4               	subwf	___aldiv@dividend,f
  8366  1355  0821               	movf	___aldiv@divisor+1,w
  8367  1356  1C03               	skipc
  8368  1357  0F21               	incfsz	___aldiv@divisor+1,w
  8369  1358  02A5               	subwf	___aldiv@dividend+1,f
  8370  1359  0822               	movf	___aldiv@divisor+2,w
  8371  135A  1C03               	skipc
  8372  135B  0F22               	incfsz	___aldiv@divisor+2,w
  8373  135C  02A6               	subwf	___aldiv@dividend+2,f
  8374  135D  0823               	movf	___aldiv@divisor+3,w
  8375  135E  1C03               	skipc
  8376  135F  0F23               	incfsz	___aldiv@divisor+3,w
  8377  1360  02A7               	subwf	___aldiv@dividend+3,f
  8378  1361                     l3844:	
  8379  1361  1476               	bsf	___aldiv@quotient,0
  8380  1362                     l3846:	
  8381  1362  3001               	movlw	1
  8382  1363                     u5805:	
  8383  1363  1003               	clrc
  8384  1364  0CA3               	rrf	___aldiv@divisor+3,f
  8385  1365  0CA2               	rrf	___aldiv@divisor+2,f
  8386  1366  0CA1               	rrf	___aldiv@divisor+1,f
  8387  1367  0CA0               	rrf	___aldiv@divisor,f
  8388  1368  3EFF               	addlw	-1
  8389  1369  1D03               	skipz
  8390  136A  2B63               	goto	u5805
  8391  136B                     l3848:	
  8392  136B  3001               	movlw	1
  8393  136C  02F4               	subwf	___aldiv@counter,f
  8394  136D  1D03               	btfss	3,2
  8395  136E  2B70               	goto	u5811
  8396  136F  2B71               	goto	u5810
  8397  1370                     u5811:	
  8398  1370  2B38               	goto	l3838
  8399  1371                     u5810:	
  8400  1371                     l3850:	
  8401  1371  0875               	movf	___aldiv@sign,w
  8402  1372  1903               	btfsc	3,2
  8403  1373  2B75               	goto	u5821
  8404  1374  2B76               	goto	u5820
  8405  1375                     u5821:	
  8406  1375  2B81               	goto	l3854
  8407  1376                     u5820:	
  8408  1376                     l3852:	
  8409  1376  09F6               	comf	___aldiv@quotient,f
  8410  1377  09F7               	comf	___aldiv@quotient+1,f
  8411  1378  09F8               	comf	___aldiv@quotient+2,f
  8412  1379  09F9               	comf	___aldiv@quotient+3,f
  8413  137A  0AF6               	incf	___aldiv@quotient,f
  8414  137B  1903               	skipnz
  8415  137C  0AF7               	incf	___aldiv@quotient+1,f
  8416  137D  1903               	skipnz
  8417  137E  0AF8               	incf	___aldiv@quotient+2,f
  8418  137F  1903               	skipnz
  8419  1380  0AF9               	incf	___aldiv@quotient+3,f
  8420  1381                     l3854:	
  8421  1381  0879               	movf	___aldiv@quotient+3,w
  8422  1382  00A3               	movwf	?___aldiv+3
  8423  1383  0878               	movf	___aldiv@quotient+2,w
  8424  1384  00A2               	movwf	?___aldiv+2
  8425  1385  0877               	movf	___aldiv@quotient+1,w
  8426  1386  00A1               	movwf	?___aldiv+1
  8427  1387  0876               	movf	___aldiv@quotient,w
  8428  1388  00A0               	movwf	?___aldiv
  8429  1389                     l531:	
  8430  1389  0008               	return
  8431  138A                     __end_of___aldiv:	
  8432                           
  8433                           	psect	text34
  8434  1C7F                     __ptext34:	
  8435 ;; *************** function _LCD_clear *****************
  8436 ;; Defined at:
  8437 ;;		line 38 in file "LCD.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;		None
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;		None
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      void 
  8444 ;; Registers used:
  8445 ;;		wreg, status,2, status,0, pclath, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8451 ;;      Params:         0       0       0       0       0
  8452 ;;      Locals:         0       0       0       0       0
  8453 ;;      Temps:          0       0       0       0       0
  8454 ;;      Totals:         0       0       0       0       0
  8455 ;;Total ram usage:        0 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:    4
  8458 ;; This function calls:
  8459 ;;		_comandosLCD
  8460 ;; This function is called by:
  8461 ;;		_main
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           
  8466                           ;psect for function _LCD_clear
  8467  1C7F                     _LCD_clear:	
  8468  1C7F                     l3908:	
  8469                           ;incstack = 0
  8470                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  8471                           
  8472                           
  8473                           ;LCD.c: 39:     comandosLCD(1);
  8474  1C7F  3001               	movlw	1
  8475  1C80  160A  158A  24EB  160A  158A  	fcall	_comandosLCD
  8476  1C85                     l52:	
  8477  1C85  0008               	return
  8478  1C86                     __end_of_LCD_clear:	
  8479                           
  8480                           	psect	text35
  8481  1D55                     __ptext35:	
  8482 ;; *************** function _LCD_Set_Cursor *****************
  8483 ;; Defined at:
  8484 ;;		line 52 in file "LCD.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  x               1    wreg     unsigned char 
  8487 ;;  y               1    7[COMMON] unsigned char 
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;  x               1    0[BANK0 ] unsigned char 
  8490 ;;  a               1    1[BANK0 ] unsigned char 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, status,2, status,0, pclath, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8500 ;;      Params:         1       0       0       0       0
  8501 ;;      Locals:         0       2       0       0       0
  8502 ;;      Temps:          1       0       0       0       0
  8503 ;;      Totals:         2       2       0       0       0
  8504 ;;Total ram usage:        4 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    4
  8507 ;; This function calls:
  8508 ;;		_comandosLCD
  8509 ;; This function is called by:
  8510 ;;		_main
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           
  8515                           ;psect for function _LCD_Set_Cursor
  8516  1D55                     _LCD_Set_Cursor:	
  8517                           
  8518                           ;incstack = 0
  8519                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8520                           ;LCD_Set_Cursor@x stored from wreg
  8521  1D55  1283               	bcf	3,5	;RP0=0, select bank0
  8522  1D56  1303               	bcf	3,6	;RP1=0, select bank0
  8523  1D57  00A0               	movwf	LCD_Set_Cursor@x
  8524  1D58                     l3924:	
  8525                           
  8526                           ;LCD.c: 53:  uint8_t a;;LCD.c: 54:  if(x == 1)
  8527  1D58  0320               	decf	LCD_Set_Cursor@x,w
  8528  1D59  1D03               	btfss	3,2
  8529  1D5A  2D5C               	goto	u5931
  8530  1D5B  2D5D               	goto	u5930
  8531  1D5C                     u5931:	
  8532  1D5C  2D69               	goto	l3930
  8533  1D5D                     u5930:	
  8534  1D5D                     l3926:	
  8535                           
  8536                           ;LCD.c: 55:  {;LCD.c: 56:         a = 0x80 + y;
  8537  1D5D  0877               	movf	LCD_Set_Cursor@y,w
  8538  1D5E  3E80               	addlw	128
  8539  1D5F  00F8               	movwf	??_LCD_Set_Cursor
  8540  1D60  0878               	movf	??_LCD_Set_Cursor,w
  8541  1D61  00A1               	movwf	LCD_Set_Cursor@a
  8542  1D62                     l3928:	
  8543                           
  8544                           ;LCD.c: 60:   comandosLCD(a);
  8545  1D62  0821               	movf	LCD_Set_Cursor@a,w
  8546  1D63  160A  158A  24EB  160A  158A  	fcall	_comandosLCD
  8547                           
  8548                           ;LCD.c: 61:  }
  8549  1D68  2D7A               	goto	l61
  8550  1D69                     l3930:	
  8551  1D69  3002               	movlw	2
  8552  1D6A  0620               	xorwf	LCD_Set_Cursor@x,w
  8553  1D6B  1D03               	btfss	3,2
  8554  1D6C  2D6E               	goto	u5941
  8555  1D6D  2D6F               	goto	u5940
  8556  1D6E                     u5941:	
  8557  1D6E  2D7A               	goto	l61
  8558  1D6F                     u5940:	
  8559  1D6F                     l3932:	
  8560                           
  8561                           ;LCD.c: 63:  {;LCD.c: 64:   a = 0xC0 + y;
  8562  1D6F  0877               	movf	LCD_Set_Cursor@y,w
  8563  1D70  3EC0               	addlw	192
  8564  1D71  00F8               	movwf	??_LCD_Set_Cursor
  8565  1D72  0878               	movf	??_LCD_Set_Cursor,w
  8566  1D73  00A1               	movwf	LCD_Set_Cursor@a
  8567  1D74                     l3934:	
  8568                           
  8569                           ;LCD.c: 67:   comandosLCD(a);
  8570  1D74  0821               	movf	LCD_Set_Cursor@a,w
  8571  1D75  160A  158A  24EB  160A  158A  	fcall	_comandosLCD
  8572  1D7A                     l61:	
  8573  1D7A  0008               	return
  8574  1D7B                     __end_of_LCD_Set_Cursor:	
  8575                           
  8576                           	psect	text36
  8577  1DD1                     __ptext36:	
  8578 ;; *************** function _LCD_Init *****************
  8579 ;; Defined at:
  8580 ;;		line 41 in file "LCD.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;		None
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1    wreg      void 
  8587 ;; Registers used:
  8588 ;;		wreg, status,2, status,0, pclath, cstack
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8594 ;;      Params:         0       0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0
  8596 ;;      Temps:          2       0       0       0       0
  8597 ;;      Totals:         2       0       0       0       0
  8598 ;;Total ram usage:        2 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; Hardware stack levels required when called:    4
  8601 ;; This function calls:
  8602 ;;		_PUERTO
  8603 ;;		_comandosLCD
  8604 ;; This function is called by:
  8605 ;;		_main
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           
  8610                           ;psect for function _LCD_Init
  8611  1DD1                     _LCD_Init:	
  8612  1DD1                     l3910:	
  8613                           ;incstack = 0
  8614                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8615                           
  8616                           
  8617                           ;LCD.c: 42:     RE0=0;
  8618  1DD1  1283               	bcf	3,5	;RP0=0, select bank0
  8619  1DD2  1303               	bcf	3,6	;RP1=0, select bank0
  8620  1DD3  1009               	bcf	9,0	;volatile
  8621                           
  8622                           ;LCD.c: 43:     RE1=0;
  8623  1DD4  1089               	bcf	9,1	;volatile
  8624  1DD5                     l3912:	
  8625                           
  8626                           ;LCD.c: 44:     PUERTO(0x00);
  8627  1DD5  3000               	movlw	0
  8628  1DD6  160A  158A  26CF  160A  158A  	fcall	_PUERTO
  8629  1DDB                     l3914:	
  8630                           
  8631                           ;LCD.c: 45:    _delay((unsigned long)((50)*(4000000/4000.0)));
  8632  1DDB  3041               	movlw	65
  8633  1DDC  00F8               	movwf	??_LCD_Init+1
  8634  1DDD  30EE               	movlw	238
  8635  1DDE  00F7               	movwf	??_LCD_Init
  8636  1DDF                     u6637:	
  8637  1DDF  0BF7               	decfsz	??_LCD_Init,f
  8638  1DE0  2DDF               	goto	u6637
  8639  1DE1  0BF8               	decfsz	??_LCD_Init+1,f
  8640  1DE2  2DDF               	goto	u6637
  8641  1DE3  0000               	nop
  8642  1DE4                     l3916:	
  8643                           
  8644                           ;LCD.c: 46:    comandosLCD(0x02);
  8645  1DE4  3002               	movlw	2
  8646  1DE5  160A  158A  24EB  160A  158A  	fcall	_comandosLCD
  8647  1DEA                     l3918:	
  8648                           
  8649                           ;LCD.c: 47:    comandosLCD(0x38);
  8650  1DEA  3038               	movlw	56
  8651  1DEB  160A  158A  24EB  160A  158A  	fcall	_comandosLCD
  8652  1DF0                     l3920:	
  8653                           
  8654                           ;LCD.c: 48:    comandosLCD(0x0C);
  8655  1DF0  300C               	movlw	12
  8656  1DF1  160A  158A  24EB  160A  158A  	fcall	_comandosLCD
  8657  1DF6                     l3922:	
  8658                           
  8659                           ;LCD.c: 49:    comandosLCD(0x06);
  8660  1DF6  3006               	movlw	6
  8661  1DF7  160A  158A  24EB  160A  158A  	fcall	_comandosLCD
  8662  1DFC                     l55:	
  8663  1DFC  0008               	return
  8664  1DFD                     __end_of_LCD_Init:	
  8665                           
  8666                           	psect	text37
  8667  1CEB                     __ptext37:	
  8668 ;; *************** function _comandosLCD *****************
  8669 ;; Defined at:
  8670 ;;		line 29 in file "LCD.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;  x               1    wreg     unsigned char 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  x               1    6[COMMON] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  1    wreg      void 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0, pclath, cstack
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8684 ;;      Params:         0       0       0       0       0
  8685 ;;      Locals:         1       0       0       0       0
  8686 ;;      Temps:          2       0       0       0       0
  8687 ;;      Totals:         3       0       0       0       0
  8688 ;;Total ram usage:        3 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:    3
  8691 ;; This function calls:
  8692 ;;		_PUERTO
  8693 ;; This function is called by:
  8694 ;;		_LCD_clear
  8695 ;;		_LCD_Init
  8696 ;;		_LCD_Set_Cursor
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           
  8701                           ;psect for function _comandosLCD
  8702  1CEB                     _comandosLCD:	
  8703                           
  8704                           ;incstack = 0
  8705                           ; Regs used in _comandosLCD: [wreg+status,2+status,0+pclath+cstack]
  8706                           ;comandosLCD@x stored from wreg
  8707  1CEB  00F6               	movwf	comandosLCD@x
  8708  1CEC                     l3718:	
  8709                           
  8710                           ;LCD.c: 30:     RE0=0;
  8711  1CEC  1283               	bcf	3,5	;RP0=0, select bank0
  8712  1CED  1303               	bcf	3,6	;RP1=0, select bank0
  8713  1CEE  1009               	bcf	9,0	;volatile
  8714  1CEF                     l3720:	
  8715                           
  8716                           ;LCD.c: 31:     PUERTO(x);
  8717  1CEF  0876               	movf	comandosLCD@x,w
  8718  1CF0  160A  158A  26CF  160A  158A  	fcall	_PUERTO
  8719  1CF5                     l3722:	
  8720                           
  8721                           ;LCD.c: 32:     RE1=1;
  8722  1CF5  1283               	bcf	3,5	;RP0=0, select bank0
  8723  1CF6  1303               	bcf	3,6	;RP1=0, select bank0
  8724  1CF7  1489               	bsf	9,1	;volatile
  8725  1CF8                     l3724:	
  8726                           
  8727                           ;LCD.c: 33:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8728  1CF8  2CF9               	nop2	;2 cycle nop
  8729  1CF9  2CFA               	nop2	;2 cycle nop
  8730  1CFA  0000               	nop
  8731  1CFB                     l3726:	
  8732                           
  8733                           ;LCD.c: 34:     RE1=0;
  8734  1CFB  1283               	bcf	3,5	;RP0=0, select bank0
  8735  1CFC  1303               	bcf	3,6	;RP1=0, select bank0
  8736  1CFD  1089               	bcf	9,1	;volatile
  8737  1CFE                     l3728:	
  8738                           
  8739                           ;LCD.c: 35:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  8740  1CFE  2CFF               	nop2	;2 cycle nop
  8741  1CFF  2D00               	nop2	;2 cycle nop
  8742  1D00  0000               	nop
  8743  1D01                     l3730:	
  8744                           
  8745                           ;LCD.c: 36:     _delay((unsigned long)((2)*(4000000/4000.0)));
  8746  1D01  3003               	movlw	3
  8747  1D02  00F5               	movwf	??_comandosLCD+1
  8748  1D03  3097               	movlw	151
  8749  1D04  00F4               	movwf	??_comandosLCD
  8750  1D05                     u6647:	
  8751  1D05  0BF4               	decfsz	??_comandosLCD,f
  8752  1D06  2D05               	goto	u6647
  8753  1D07  0BF5               	decfsz	??_comandosLCD+1,f
  8754  1D08  2D05               	goto	u6647
  8755  1D09  2D0A               	nop2
  8756  1D0A                     l49:	
  8757  1D0A  0008               	return
  8758  1D0B                     __end_of_comandosLCD:	
  8759                           
  8760                           	psect	text38
  8761  1ECF                     __ptext38:	
  8762 ;; *************** function _PUERTO *****************
  8763 ;; Defined at:
  8764 ;;		line 18 in file "LCD.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  x               1    wreg     unsigned char 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  x               1    3[COMMON] unsigned char 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      void 
  8771 ;; Registers used:
  8772 ;;		wreg
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8778 ;;      Params:         0       0       0       0       0
  8779 ;;      Locals:         1       0       0       0       0
  8780 ;;      Temps:          0       0       0       0       0
  8781 ;;      Totals:         1       0       0       0       0
  8782 ;;Total ram usage:        1 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; Hardware stack levels required when called:    2
  8785 ;; This function calls:
  8786 ;;		Nothing
  8787 ;; This function is called by:
  8788 ;;		_print_LCD_Char
  8789 ;;		_comandosLCD
  8790 ;;		_LCD_Init
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           
  8795                           ;psect for function _PUERTO
  8796  1ECF                     _PUERTO:	
  8797                           
  8798                           ;incstack = 0
  8799                           ; Regs used in _PUERTO: [wreg]
  8800                           ;PUERTO@x stored from wreg
  8801  1ECF  00F3               	movwf	PUERTO@x
  8802  1ED0                     l3522:	
  8803                           
  8804                           ;LCD.c: 19:     if(x & 1){RB0=1;}else{RB0=0;}
  8805  1ED0  1C73               	btfss	PUERTO@x,0
  8806  1ED1  2ED3               	goto	u5031
  8807  1ED2  2ED4               	goto	u5030
  8808  1ED3                     u5031:	
  8809  1ED3  2ED8               	goto	l30
  8810  1ED4                     u5030:	
  8811  1ED4                     l3524:	
  8812  1ED4  1283               	bcf	3,5	;RP0=0, select bank0
  8813  1ED5  1303               	bcf	3,6	;RP1=0, select bank0
  8814  1ED6  1406               	bsf	6,0	;volatile
  8815  1ED7  2EDB               	goto	l31
  8816  1ED8                     l30:	
  8817  1ED8  1283               	bcf	3,5	;RP0=0, select bank0
  8818  1ED9  1303               	bcf	3,6	;RP1=0, select bank0
  8819  1EDA  1006               	bcf	6,0	;volatile
  8820  1EDB                     l31:	
  8821                           
  8822                           ;LCD.c: 20:     if(x & 2){RB1=1;}else{RB1=0;}
  8823  1EDB  1CF3               	btfss	PUERTO@x,1
  8824  1EDC  2EDE               	goto	u5041
  8825  1EDD  2EDF               	goto	u5040
  8826  1EDE                     u5041:	
  8827  1EDE  2EE1               	goto	l32
  8828  1EDF                     u5040:	
  8829  1EDF                     l3526:	
  8830  1EDF  1486               	bsf	6,1	;volatile
  8831  1EE0  2EE2               	goto	l33
  8832  1EE1                     l32:	
  8833  1EE1  1086               	bcf	6,1	;volatile
  8834  1EE2                     l33:	
  8835                           
  8836                           ;LCD.c: 21:     if(x & 4){RB2=1;}else{RB2=0;}
  8837  1EE2  1D73               	btfss	PUERTO@x,2
  8838  1EE3  2EE5               	goto	u5051
  8839  1EE4  2EE6               	goto	u5050
  8840  1EE5                     u5051:	
  8841  1EE5  2EE8               	goto	l34
  8842  1EE6                     u5050:	
  8843  1EE6                     l3528:	
  8844  1EE6  1506               	bsf	6,2	;volatile
  8845  1EE7  2EE9               	goto	l35
  8846  1EE8                     l34:	
  8847  1EE8  1106               	bcf	6,2	;volatile
  8848  1EE9                     l35:	
  8849                           
  8850                           ;LCD.c: 22:     if(x & 8){RB3=1;}else{RB3=0;}
  8851  1EE9  1DF3               	btfss	PUERTO@x,3
  8852  1EEA  2EEC               	goto	u5061
  8853  1EEB  2EED               	goto	u5060
  8854  1EEC                     u5061:	
  8855  1EEC  2EEF               	goto	l36
  8856  1EED                     u5060:	
  8857  1EED                     l3530:	
  8858  1EED  1586               	bsf	6,3	;volatile
  8859  1EEE  2EF0               	goto	l37
  8860  1EEF                     l36:	
  8861  1EEF  1186               	bcf	6,3	;volatile
  8862  1EF0                     l37:	
  8863                           
  8864                           ;LCD.c: 23:     if(x & 16){RB4=1;}else{RB4=0;}
  8865  1EF0  1E73               	btfss	PUERTO@x,4
  8866  1EF1  2EF3               	goto	u5071
  8867  1EF2  2EF4               	goto	u5070
  8868  1EF3                     u5071:	
  8869  1EF3  2EF6               	goto	l38
  8870  1EF4                     u5070:	
  8871  1EF4                     l3532:	
  8872  1EF4  1606               	bsf	6,4	;volatile
  8873  1EF5  2EF7               	goto	l39
  8874  1EF6                     l38:	
  8875  1EF6  1206               	bcf	6,4	;volatile
  8876  1EF7                     l39:	
  8877                           
  8878                           ;LCD.c: 24:     if(x & 32){RB5=1;}else{RB5=0;}
  8879  1EF7  1EF3               	btfss	PUERTO@x,5
  8880  1EF8  2EFA               	goto	u5081
  8881  1EF9  2EFB               	goto	u5080
  8882  1EFA                     u5081:	
  8883  1EFA  2EFD               	goto	l40
  8884  1EFB                     u5080:	
  8885  1EFB                     l3534:	
  8886  1EFB  1686               	bsf	6,5	;volatile
  8887  1EFC  2EFE               	goto	l41
  8888  1EFD                     l40:	
  8889  1EFD  1286               	bcf	6,5	;volatile
  8890  1EFE                     l41:	
  8891                           
  8892                           ;LCD.c: 25:     if(x & 64){RB6=1;}else{RB6=0;}
  8893  1EFE  1F73               	btfss	PUERTO@x,6
  8894  1EFF  2F01               	goto	u5091
  8895  1F00  2F02               	goto	u5090
  8896  1F01                     u5091:	
  8897  1F01  2F04               	goto	l42
  8898  1F02                     u5090:	
  8899  1F02                     l3536:	
  8900  1F02  1706               	bsf	6,6	;volatile
  8901  1F03  2F05               	goto	l43
  8902  1F04                     l42:	
  8903  1F04  1306               	bcf	6,6	;volatile
  8904  1F05                     l43:	
  8905                           
  8906                           ;LCD.c: 26:     if(x & 128){RB7=1;}else{RB7=0;}
  8907  1F05  1FF3               	btfss	PUERTO@x,7
  8908  1F06  2F08               	goto	u5101
  8909  1F07  2F09               	goto	u5100
  8910  1F08                     u5101:	
  8911  1F08  2F0B               	goto	l44
  8912  1F09                     u5100:	
  8913  1F09                     l3538:	
  8914  1F09  1786               	bsf	6,7	;volatile
  8915  1F0A  2F0C               	goto	l46
  8916  1F0B                     l44:	
  8917  1F0B  1386               	bcf	6,7	;volatile
  8918  1F0C                     l46:	
  8919  1F0C  0008               	return
  8920  1F0D                     __end_of_PUERTO:	
  8921                           
  8922                           	psect	text39
  8923  1DFD                     __ptext39:	
  8924 ;; *************** function _ISR *****************
  8925 ;; Defined at:
  8926 ;;		line 51 in file "LAB3.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;		None
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  1    wreg      void 
  8933 ;; Registers used:
  8934 ;;		wreg, status,2, status,0, pclath, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8940 ;;      Params:         0       0       0       0       0
  8941 ;;      Locals:         0       0       0       0       0
  8942 ;;      Temps:          3       0       0       0       0
  8943 ;;      Totals:         3       0       0       0       0
  8944 ;;Total ram usage:        3 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:    1
  8947 ;; This function calls:
  8948 ;;		_Read_USART
  8949 ;; This function is called by:
  8950 ;;		Interrupt level 1
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           
  8955                           ;psect for function _ISR
  8956  1DFD                     _ISR:	
  8957  1DFD                     i1l3386:	
  8958                           
  8959                           ;LAB3.c: 52:     if(RCIF==1){
  8960  1DFD  1283               	bcf	3,5	;RP0=0, select bank0
  8961  1DFE  1303               	bcf	3,6	;RP1=0, select bank0
  8962  1DFF  1E8C               	btfss	12,5	;volatile
  8963  1E00  2E02               	goto	u488_21
  8964  1E01  2E03               	goto	u488_20
  8965  1E02                     u488_21:	
  8966  1E02  2E23               	goto	i1l140
  8967  1E03                     u488_20:	
  8968  1E03                     i1l3388:	
  8969                           
  8970                           ;LAB3.c: 53:         RCIF=0;
  8971  1E03  128C               	bcf	12,5	;volatile
  8972  1E04                     i1l3390:	
  8973                           
  8974                           ;LAB3.c: 54:         lecturaUSART=Read_USART();
  8975  1E04  160A  158A  2486  160A  158A  	fcall	_Read_USART
  8976  1E09  00F0               	movwf	??_ISR
  8977  1E0A  0870               	movf	??_ISR,w
  8978  1E0B  00FA               	movwf	_lecturaUSART
  8979  1E0C                     i1l3392:	
  8980                           
  8981                           ;LAB3.c: 55:         if(lecturaUSART=='+'){contador++;}
  8982  1E0C  302B               	movlw	43
  8983  1E0D  067A               	xorwf	_lecturaUSART,w
  8984  1E0E  1D03               	btfss	3,2
  8985  1E0F  2E11               	goto	u489_21
  8986  1E10  2E12               	goto	u489_20
  8987  1E11                     u489_21:	
  8988  1E11  2E19               	goto	i1l3396
  8989  1E12                     u489_20:	
  8990  1E12                     i1l3394:	
  8991  1E12  3001               	movlw	1
  8992  1E13  00F0               	movwf	??_ISR
  8993  1E14  0870               	movf	??_ISR,w
  8994  1E15  1283               	bcf	3,5	;RP0=0, select bank0
  8995  1E16  1303               	bcf	3,6	;RP1=0, select bank0
  8996  1E17  07ED               	addwf	_contador,f
  8997  1E18  2E23               	goto	i1l140
  8998  1E19                     i1l3396:	
  8999  1E19  302D               	movlw	45
  9000  1E1A  067A               	xorwf	_lecturaUSART,w
  9001  1E1B  1D03               	btfss	3,2
  9002  1E1C  2E1E               	goto	u490_21
  9003  1E1D  2E1F               	goto	u490_20
  9004  1E1E                     u490_21:	
  9005  1E1E  2E23               	goto	i1l140
  9006  1E1F                     u490_20:	
  9007  1E1F                     i1l3398:	
  9008  1E1F  3001               	movlw	1
  9009  1E20  1283               	bcf	3,5	;RP0=0, select bank0
  9010  1E21  1303               	bcf	3,6	;RP1=0, select bank0
  9011  1E22  02ED               	subwf	_contador,f
  9012  1E23                     i1l140:	
  9013  1E23  0872               	movf	??_ISR+2,w
  9014  1E24  008A               	movwf	10
  9015  1E25  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  9016  1E26  0083               	movwf	3
  9017  1E27  0EFE               	swapf	btemp,f
  9018  1E28  0E7E               	swapf	btemp,w
  9019  1E29  0009               	retfie
  9020  1E2A                     __end_of_ISR:	
  9021                           
  9022                           	psect	intentry
  9023  0004                     __pintentry:	
  9024                           ;incstack = 0
  9025                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9026                           
  9027  0004                     interrupt_function:	
  9028  007E                     saved_w	set	btemp
  9029  0004  00FE               	movwf	btemp
  9030  0005  0E03               	swapf	3,w
  9031  0006  00F1               	movwf	??_ISR+1
  9032  0007  080A               	movf	10,w
  9033  0008  00F2               	movwf	??_ISR+2
  9034  0009  160A  158A  2DFD   	ljmp	_ISR
  9035                           
  9036                           	psect	text40
  9037  1C86                     __ptext40:	
  9038 ;; *************** function _Read_USART *****************
  9039 ;; Defined at:
  9040 ;;		line 40 in file "USART.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;		None
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;		None
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  1    wreg      unsigned char 
  9047 ;; Registers used:
  9048 ;;		wreg
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9054 ;;      Params:         0       0       0       0       0
  9055 ;;      Locals:         0       0       0       0       0
  9056 ;;      Temps:          0       0       0       0       0
  9057 ;;      Totals:         0       0       0       0       0
  9058 ;;Total ram usage:        0 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; This function calls:
  9061 ;;		Nothing
  9062 ;; This function is called by:
  9063 ;;		_ISR
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           
  9068                           ;psect for function _Read_USART
  9069  1C86                     _Read_USART:	
  9070  1C86                     i1l2980:	
  9071                           ;incstack = 0
  9072                           ; Regs used in _Read_USART: [wreg]
  9073                           
  9074  1C86                     i1l242:	
  9075                           ;USART.c: 41:   while(!RCIF);
  9076                           
  9077  1C86  1283               	bcf	3,5	;RP0=0, select bank0
  9078  1C87  1303               	bcf	3,6	;RP1=0, select bank0
  9079  1C88  1E8C               	btfss	12,5	;volatile
  9080  1C89  2C8B               	goto	u423_21
  9081  1C8A  2C8C               	goto	u423_20
  9082  1C8B                     u423_21:	
  9083  1C8B  2C86               	goto	i1l242
  9084  1C8C                     u423_20:	
  9085  1C8C                     i1l2982:	
  9086                           
  9087                           ;USART.c: 42:   return RCREG;
  9088  1C8C  081A               	movf	26,w	;volatile
  9089  1C8D                     i1l245:	
  9090  1C8D  0008               	return
  9091  1C8E                     __end_of_Read_USART:	
  9092  007E                     btemp	set	126	;btemp
  9093  007E                     wtemp0	set	126
  9094                           
  9095                           	psect	text1_split_1
  9096  0021                     u6200:	
  9097  0021                     l4070:	
  9098  0021  1683               	bsf	3,5	;RP0=1, select bank1
  9099  0022  1303               	bcf	3,6	;RP1=0, select bank1
  9100  0023  083A               	movf	(sprintf@fval+2)^(0+128),w
  9101  0024  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  9102  0025  0438               	iorwf	sprintf@fval^(0+128),w
  9103  0026  1903               	skipnz
  9104  0027  2829               	goto	u6211
  9105  0028  282A               	goto	u6210
  9106  0029                     u6211:	
  9107  0029  28BA               	goto	l4090
  9108  002A                     u6210:	
  9109  002A                     l4072:	
  9110  002A  0838               	movf	sprintf@fval^(0+128),w
  9111  002B  1283               	bcf	3,5	;RP0=0, select bank0
  9112  002C  1303               	bcf	3,6	;RP1=0, select bank0
  9113  002D  00C6               	movwf	___fttol@f1
  9114  002E  1683               	bsf	3,5	;RP0=1, select bank1
  9115  002F  1303               	bcf	3,6	;RP1=0, select bank1
  9116  0030  0839               	movf	(sprintf@fval+1)^(0+128),w
  9117  0031  1283               	bcf	3,5	;RP0=0, select bank0
  9118  0032  1303               	bcf	3,6	;RP1=0, select bank0
  9119  0033  00C7               	movwf	___fttol@f1+1
  9120  0034  1683               	bsf	3,5	;RP0=1, select bank1
  9121  0035  1303               	bcf	3,6	;RP1=0, select bank1
  9122  0036  083A               	movf	(sprintf@fval+2)^(0+128),w
  9123  0037  1283               	bcf	3,5	;RP0=0, select bank0
  9124  0038  1303               	bcf	3,6	;RP1=0, select bank0
  9125  0039  00C8               	movwf	___fttol@f1+2
  9126  003A  160A  118A  2261  120A  118A  	fcall	___fttol
  9127  003F  1283               	bcf	3,5	;RP0=0, select bank0
  9128  0040  1303               	bcf	3,6	;RP1=0, select bank0
  9129  0041  0849               	movf	?___fttol+3,w
  9130  0042  0448               	iorwf	?___fttol+2,w
  9131  0043  0447               	iorwf	?___fttol+1,w
  9132  0044  0446               	iorwf	?___fttol,w
  9133  0045  1D03               	skipz
  9134  0046  2848               	goto	u6221
  9135  0047  2849               	goto	u6220
  9136  0048                     u6221:	
  9137  0048  28BA               	goto	l4090
  9138  0049                     u6220:	
  9139  0049                     l4074:	
  9140  0049  1683               	bsf	3,5	;RP0=1, select bank1
  9141  004A  1303               	bcf	3,6	;RP1=0, select bank1
  9142  004B  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9143  004C  3A80               	xorlw	128
  9144  004D  00FF               	movwf	btemp+1
  9145  004E  3080               	movlw	128
  9146  004F  027F               	subwf	btemp+1,w
  9147  0050  1D03               	skipz
  9148  0051  2854               	goto	u6235
  9149  0052  3002               	movlw	2
  9150  0053  0236               	subwf	sprintf@eexp^(0+128),w
  9151  0054                     u6235:	
  9152  0054  1C03               	skipc
  9153  0055  2857               	goto	u6231
  9154  0056  2858               	goto	u6230
  9155  0057                     u6231:	
  9156  0057  28BA               	goto	l4090
  9157  0058                     u6230:	
  9158  0058                     l4076:	
  9159                           
  9160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  9161  0058  1683               	bsf	3,5	;RP0=1, select bank1
  9162  0059  1303               	bcf	3,6	;RP1=0, select bank1
  9163  005A  082E               	movf	sprintf@tmpval^(0+128),w
  9164  005B  00F3               	movwf	___ftge@ff1
  9165  005C  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9166  005D  00F4               	movwf	___ftge@ff1+1
  9167  005E  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9168  005F  00F5               	movwf	___ftge@ff1+2
  9169  0060  3070               	movlw	112
  9170  0061  00F6               	movwf	___ftge@ff2
  9171  0062  3089               	movlw	137
  9172  0063  00F7               	movwf	___ftge@ff2+1
  9173  0064  3040               	movlw	64
  9174  0065  00F8               	movwf	___ftge@ff2+2
  9175  0066  160A  158A  265D  120A  118A  	fcall	___ftge
  9176  006B  1803               	btfsc	3,0
  9177  006C  286E               	goto	u6241
  9178  006D  286F               	goto	u6240
  9179  006E                     u6241:	
  9180  006E  2878               	goto	l4080
  9181  006F                     u6240:	
  9182  006F                     l4078:	
  9183                           
  9184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  9185  006F  30F7               	movlw	247
  9186  0070  1683               	bsf	3,5	;RP0=1, select bank1
  9187  0071  1303               	bcf	3,6	;RP1=0, select bank1
  9188  0072  07B6               	addwf	sprintf@eexp^(0+128),f
  9189  0073  1803               	skipnc
  9190  0074  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9191  0075  30FF               	movlw	255
  9192  0076  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9193                           
  9194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  9195  0077  2880               	goto	l4082
  9196  0078                     l4080:	
  9197                           
  9198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  9199  0078  30F8               	movlw	248
  9200  0079  1683               	bsf	3,5	;RP0=1, select bank1
  9201  007A  1303               	bcf	3,6	;RP1=0, select bank1
  9202  007B  07B6               	addwf	sprintf@eexp^(0+128),f
  9203  007C  1803               	skipnc
  9204  007D  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9205  007E  30FF               	movlw	255
  9206  007F  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9207  0080                     l4082:	
  9208                           
  9209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1151:      
      +                          tmpval.integ = scale(eexp);
  9210  0080  0836               	movf	sprintf@eexp^(0+128),w
  9211  0081  120A  158A  2545  120A  118A  	fcall	_scale
  9212  0086  1283               	bcf	3,5	;RP0=0, select bank0
  9213  0087  1303               	bcf	3,6	;RP1=0, select bank0
  9214  0088  083D               	movf	?_scale,w
  9215  0089  1683               	bsf	3,5	;RP0=1, select bank1
  9216  008A  1303               	bcf	3,6	;RP1=0, select bank1
  9217  008B  00AE               	movwf	sprintf@tmpval^(0+128)
  9218  008C  1283               	bcf	3,5	;RP0=0, select bank0
  9219  008D  1303               	bcf	3,6	;RP1=0, select bank0
  9220  008E  083E               	movf	?_scale+1,w
  9221  008F  1683               	bsf	3,5	;RP0=1, select bank1
  9222  0090  1303               	bcf	3,6	;RP1=0, select bank1
  9223  0091  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9224  0092  1283               	bcf	3,5	;RP0=0, select bank0
  9225  0093  1303               	bcf	3,6	;RP1=0, select bank0
  9226  0094  083F               	movf	?_scale+2,w
  9227  0095  1683               	bsf	3,5	;RP0=1, select bank1
  9228  0096  1303               	bcf	3,6	;RP1=0, select bank1
  9229  0097  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9230  0098                     l4086:	
  9231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  9232                           
  9233  0098  0838               	movf	sprintf@fval^(0+128),w
  9234  0099  00F3               	movwf	__tdiv_to_l_@f1
  9235  009A  0839               	movf	(sprintf@fval+1)^(0+128),w
  9236  009B  00F4               	movwf	__tdiv_to_l_@f1+1
  9237  009C  083A               	movf	(sprintf@fval+2)^(0+128),w
  9238  009D  00F5               	movwf	__tdiv_to_l_@f1+2
  9239  009E  082E               	movf	sprintf@tmpval^(0+128),w
  9240  009F  00F6               	movwf	__tdiv_to_l_@f2
  9241  00A0  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9242  00A1  00F7               	movwf	__tdiv_to_l_@f2+1
  9243  00A2  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9244  00A3  00F8               	movwf	__tdiv_to_l_@f2+2
  9245  00A4  160A  118A  238A  120A  118A  	fcall	__tdiv_to_l_
  9246  00A9  0876               	movf	?__tdiv_to_l_+3,w
  9247  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  9248  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  9249  00AC  00B5               	movwf	(sprintf@val+3)^(0+128)
  9250  00AD  0875               	movf	?__tdiv_to_l_+2,w
  9251  00AE  00B4               	movwf	(sprintf@val+2)^(0+128)
  9252  00AF  0874               	movf	?__tdiv_to_l_+1,w
  9253  00B0  00B3               	movwf	(sprintf@val+1)^(0+128)
  9254  00B1  0873               	movf	?__tdiv_to_l_,w
  9255  00B2  00B2               	movwf	sprintf@val^(0+128)
  9256  00B3                     l4088:	
  9257                           
  9258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  9259  00B3  3000               	movlw	0
  9260  00B4  00B8               	movwf	sprintf@fval^(0+128)
  9261  00B5  3000               	movlw	0
  9262  00B6  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9263  00B7  3000               	movlw	0
  9264  00B8  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9265                           
  9266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  9267  00B9  2937               	goto	l4094
  9268  00BA                     l4090:	
  9269                           
  9270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  9271  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  9272  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  9273  00BC  0838               	movf	sprintf@fval^(0+128),w
  9274  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  9275  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  9276  00BF  00C6               	movwf	___fttol@f1
  9277  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  9278  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  9279  00C2  0839               	movf	(sprintf@fval+1)^(0+128),w
  9280  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  9281  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  9282  00C5  00C7               	movwf	___fttol@f1+1
  9283  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  9284  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  9285  00C8  083A               	movf	(sprintf@fval+2)^(0+128),w
  9286  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  9287  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  9288  00CB  00C8               	movwf	___fttol@f1+2
  9289  00CC  160A  118A  2261  120A  118A  	fcall	___fttol
  9290  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  9291  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  9292  00D3  0849               	movf	?___fttol+3,w
  9293  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  9294  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  9295  00D6  00B5               	movwf	(sprintf@val+3)^(0+128)
  9296  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  9297  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  9298  00D9  0848               	movf	?___fttol+2,w
  9299  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  9300  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  9301  00DC  00B4               	movwf	(sprintf@val+2)^(0+128)
  9302  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  9303  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  9304  00DF  0847               	movf	?___fttol+1,w
  9305  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  9306  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  9307  00E2  00B3               	movwf	(sprintf@val+1)^(0+128)
  9308  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  9309  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  9310  00E5  0846               	movf	?___fttol,w
  9311  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  9312  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  9313  00E8  00B2               	movwf	sprintf@val^(0+128)
  9314                           
  9315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  9316  00E9  0835               	movf	(sprintf@val+3)^(0+128),w
  9317  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  9318  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  9319  00EC  00A6               	movwf	___lltoft@c+3
  9320  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  9321  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  9322  00EF  0834               	movf	(sprintf@val+2)^(0+128),w
  9323  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  9324  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  9325  00F2  00A5               	movwf	___lltoft@c+2
  9326  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  9327  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  9328  00F5  0833               	movf	(sprintf@val+1)^(0+128),w
  9329  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  9330  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  9331  00F8  00A4               	movwf	___lltoft@c+1
  9332  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  9333  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  9334  00FB  0832               	movf	sprintf@val^(0+128),w
  9335  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  9336  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  9337  00FE  00A3               	movwf	___lltoft@c
  9338  00FF  160A  158A  262A  120A  118A  	fcall	___lltoft
  9339  0104  1283               	bcf	3,5	;RP0=0, select bank0
  9340  0105  1303               	bcf	3,6	;RP1=0, select bank0
  9341  0106  0823               	movf	?___lltoft,w
  9342  0107  00DA               	movwf	___ftsub@f2
  9343  0108  0824               	movf	?___lltoft+1,w
  9344  0109  00DB               	movwf	___ftsub@f2+1
  9345  010A  0825               	movf	?___lltoft+2,w
  9346  010B  00DC               	movwf	___ftsub@f2+2
  9347  010C  1683               	bsf	3,5	;RP0=1, select bank1
  9348  010D  1303               	bcf	3,6	;RP1=0, select bank1
  9349  010E  0838               	movf	sprintf@fval^(0+128),w
  9350  010F  1283               	bcf	3,5	;RP0=0, select bank0
  9351  0110  1303               	bcf	3,6	;RP1=0, select bank0
  9352  0111  00DD               	movwf	___ftsub@f1
  9353  0112  1683               	bsf	3,5	;RP0=1, select bank1
  9354  0113  1303               	bcf	3,6	;RP1=0, select bank1
  9355  0114  0839               	movf	(sprintf@fval+1)^(0+128),w
  9356  0115  1283               	bcf	3,5	;RP0=0, select bank0
  9357  0116  1303               	bcf	3,6	;RP1=0, select bank0
  9358  0117  00DE               	movwf	___ftsub@f1+1
  9359  0118  1683               	bsf	3,5	;RP0=1, select bank1
  9360  0119  1303               	bcf	3,6	;RP1=0, select bank1
  9361  011A  083A               	movf	(sprintf@fval+2)^(0+128),w
  9362  011B  1283               	bcf	3,5	;RP0=0, select bank0
  9363  011C  1303               	bcf	3,6	;RP1=0, select bank0
  9364  011D  00DF               	movwf	___ftsub@f1+2
  9365  011E  160A  158A  250B  120A  118A  	fcall	___ftsub
  9366  0123  1283               	bcf	3,5	;RP0=0, select bank0
  9367  0124  1303               	bcf	3,6	;RP1=0, select bank0
  9368  0125  085A               	movf	?___ftsub,w
  9369  0126  1683               	bsf	3,5	;RP0=1, select bank1
  9370  0127  1303               	bcf	3,6	;RP1=0, select bank1
  9371  0128  00B8               	movwf	sprintf@fval^(0+128)
  9372  0129  1283               	bcf	3,5	;RP0=0, select bank0
  9373  012A  1303               	bcf	3,6	;RP1=0, select bank0
  9374  012B  085B               	movf	?___ftsub+1,w
  9375  012C  1683               	bsf	3,5	;RP0=1, select bank1
  9376  012D  1303               	bcf	3,6	;RP1=0, select bank1
  9377  012E  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9378  012F  1283               	bcf	3,5	;RP0=0, select bank0
  9379  0130  1303               	bcf	3,6	;RP1=0, select bank0
  9380  0131  085C               	movf	?___ftsub+2,w
  9381  0132  1683               	bsf	3,5	;RP0=1, select bank1
  9382  0133  1303               	bcf	3,6	;RP1=0, select bank1
  9383  0134  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9384  0135                     l4092:	
  9385                           
  9386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  9387  0135  01B6               	clrf	sprintf@eexp^(0+128)
  9388  0136  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  9389  0137                     l4094:	
  9390                           
  9391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9392  0137  01BE               	clrf	sprintf@c^(0+128)
  9393  0138  0ABE               	incf	sprintf@c^(0+128),f
  9394  0139                     l4100:	
  9395                           
  9396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  9397  0139  083E               	movf	sprintf@c^(0+128),w
  9398  013A  00A0               	movwf	??_sprintf^(0+128)
  9399  013B  3001               	movlw	1
  9400  013C                     u6255:	
  9401  013C  1003               	clrc
  9402  013D  0DA0               	rlf	??_sprintf^(0+128),f
  9403  013E  3EFF               	addlw	-1
  9404  013F  1D03               	skipz
  9405  0140  293C               	goto	u6255
  9406  0141  1003               	clrc
  9407  0142  0D20               	rlf	??_sprintf^(0+128),w
  9408  0143  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9409  0144  0084               	movwf	4
  9410  0145  160A  118A  200A  120A  118A  	fcall	stringdir
  9411  014A  00A1               	movwf	(??_sprintf+1)^(0+128)
  9412  014B  160A  118A  200A  120A  118A  	fcall	stringdir
  9413  0150  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  9414  0151  160A  118A  200A  120A  118A  	fcall	stringdir
  9415  0156  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  9416  0157  160A  118A  200A  120A  118A  	fcall	stringdir
  9417  015C  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  9418  015D  0824               	movf	(??_sprintf+4)^(0+128),w
  9419  015E  0235               	subwf	(sprintf@val+3)^(0+128),w
  9420  015F  1D03               	skipz
  9421  0160  296B               	goto	u6265
  9422  0161  0823               	movf	(??_sprintf+3)^(0+128),w
  9423  0162  0234               	subwf	(sprintf@val+2)^(0+128),w
  9424  0163  1D03               	skipz
  9425  0164  296B               	goto	u6265
  9426  0165  0822               	movf	(??_sprintf+2)^(0+128),w
  9427  0166  0233               	subwf	(sprintf@val+1)^(0+128),w
  9428  0167  1D03               	skipz
  9429  0168  296B               	goto	u6265
  9430  0169  0821               	movf	(??_sprintf+1)^(0+128),w
  9431  016A  0232               	subwf	sprintf@val^(0+128),w
  9432  016B                     u6265:	
  9433  016B  1803               	skipnc
  9434  016C  296E               	goto	u6261
  9435  016D  296F               	goto	u6260
  9436  016E                     u6261:	
  9437  016E  2970               	goto	l4104
  9438  016F                     u6260:	
  9439  016F  297A               	goto	l4106
  9440  0170                     l4104:	
  9441  0170  3001               	movlw	1
  9442  0171  00A0               	movwf	??_sprintf^(0+128)
  9443  0172  0820               	movf	??_sprintf^(0+128),w
  9444  0173  07BE               	addwf	sprintf@c^(0+128),f
  9445  0174  300A               	movlw	10
  9446  0175  063E               	xorwf	sprintf@c^(0+128),w
  9447  0176  1D03               	btfss	3,2
  9448  0177  2979               	goto	u6271
  9449  0178  297A               	goto	u6270
  9450  0179                     u6271:	
  9451  0179  2939               	goto	l4100
  9452  017A                     u6270:	
  9453  017A                     l4106:	
  9454                           
  9455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1168:     w
      +                          idth -= prec + c + eexp;
  9456  017A  083E               	movf	sprintf@c^(0+128),w
  9457  017B  073C               	addwf	sprintf@prec^(0+128),w
  9458  017C  00A0               	movwf	??_sprintf^(0+128)
  9459  017D  083D               	movf	(sprintf@prec+1)^(0+128),w
  9460  017E  1803               	skipnc
  9461  017F  0A3D               	incf	(sprintf@prec+1)^(0+128),w
  9462  0180  00A1               	movwf	(??_sprintf^(0+128)+1)
  9463  0181  0836               	movf	sprintf@eexp^(0+128),w
  9464  0182  0720               	addwf	??_sprintf^(0+128),w
  9465  0183  00A2               	movwf	(??_sprintf+2)^(0+128)
  9466  0184  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9467  0185  1803               	skipnc
  9468  0186  0A37               	incf	(sprintf@eexp+1)^(0+128),w
  9469  0187  0721               	addwf	(??_sprintf+1)^(0+128),w
  9470  0188  00A3               	movwf	(??_sprintf+3)^(0+128)
  9471  0189  0822               	movf	(??_sprintf+2)^(0+128),w
  9472  018A  02AC               	subwf	sprintf@width^(0+128),f
  9473  018B  0823               	movf	(??_sprintf+3)^(0+128),w
  9474  018C  1C03               	skipc
  9475  018D  03AD               	decf	(sprintf@width+1)^(0+128),f
  9476  018E  02AD               	subwf	(sprintf@width+1)^(0+128),f
  9477                           
  9478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1169:     i
      +                          f(
  9479  018F  083C               	movf	sprintf@prec^(0+128),w
  9480  0190  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  9481  0191  1903               	btfsc	3,2
  9482  0192  2994               	goto	u6281
  9483  0193  2995               	goto	u6280
  9484  0194                     u6281:	
  9485  0194  299B               	goto	l4110
  9486  0195                     u6280:	
  9487  0195                     l4108:	
  9488                           
  9489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1174:      
      +                          width--;
  9490  0195  30FF               	movlw	255
  9491  0196  07AC               	addwf	sprintf@width^(0+128),f
  9492  0197  1803               	skipnc
  9493  0198  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9494  0199  30FF               	movlw	255
  9495  019A  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9496  019B                     l4110:	
  9497                           
  9498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1175:     i
      +                          f(flag & 0x03)
  9499  019B  3003               	movlw	3
  9500  019C  052A               	andwf	sprintf@flag^(0+128),w
  9501  019D  00A0               	movwf	??_sprintf^(0+128)
  9502  019E  3000               	movlw	0
  9503  019F  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9504  01A0  00A1               	movwf	(??_sprintf+1)^(0+128)
  9505  01A1  0820               	movf	??_sprintf^(0+128),w
  9506  01A2  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9507  01A3  1903               	btfsc	3,2
  9508  01A4  29A6               	goto	u6291
  9509  01A5  29A7               	goto	u6290
  9510  01A6                     u6291:	
  9511  01A6  29BC               	goto	l4120
  9512  01A7                     u6290:	
  9513  01A7                     l4112:	
  9514                           
  9515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1176:      
      +                          width--;
  9516  01A7  30FF               	movlw	255
  9517  01A8  07AC               	addwf	sprintf@width^(0+128),f
  9518  01A9  1803               	skipnc
  9519  01AA  0AAD               	incf	(sprintf@width+1)^(0+128),f
  9520  01AB  30FF               	movlw	255
  9521  01AC  07AD               	addwf	(sprintf@width+1)^(0+128),f
  9522  01AD  29BC               	goto	l4120
  9523  01AE                     l4114:	
  9524                           
  9525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1207:      
      +                           ((*sp++ = (' ')));
  9526  01AE  3020               	movlw	32
  9527  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  9528  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  9529  01B1  00A0               	movwf	??_sprintf^(0+128)
  9530  01B2  083B               	movf	sprintf@sp^(0+128),w
  9531  01B3  0084               	movwf	4
  9532  01B4  0820               	movf	??_sprintf^(0+128),w
  9533  01B5  1383               	bcf	3,7	;select IRP bank0
  9534  01B6  0080               	movwf	0
  9535  01B7                     l4116:	
  9536  01B7  3001               	movlw	1
  9537  01B8  00A0               	movwf	??_sprintf^(0+128)
  9538  01B9  0820               	movf	??_sprintf^(0+128),w
  9539  01BA  07BB               	addwf	sprintf@sp^(0+128),f
  9540  01BB  29A7               	goto	l4112
  9541  01BC                     l4120:	
  9542                           
  9543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1206:      
      +                          while(width > 0) {
  9544  01BC  082D               	movf	(sprintf@width+1)^(0+128),w
  9545  01BD  3A80               	xorlw	128
  9546  01BE  00FF               	movwf	btemp+1
  9547  01BF  3080               	movlw	128
  9548  01C0  027F               	subwf	btemp+1,w
  9549  01C1  1D03               	skipz
  9550  01C2  29C5               	goto	u6305
  9551  01C3  3001               	movlw	1
  9552  01C4  022C               	subwf	sprintf@width^(0+128),w
  9553  01C5                     u6305:	
  9554  01C5  1803               	skipnc
  9555  01C6  29C8               	goto	u6301
  9556  01C7  29C9               	goto	u6300
  9557  01C8                     u6301:	
  9558  01C8  29AE               	goto	l4114
  9559  01C9                     u6300:	
  9560  01C9                     l4122:	
  9561                           
  9562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  9563  01C9  3003               	movlw	3
  9564  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  9565  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  9566  01CC  052A               	andwf	sprintf@flag^(0+128),w
  9567  01CD  00A0               	movwf	??_sprintf^(0+128)
  9568  01CE  3000               	movlw	0
  9569  01CF  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9570  01D0  00A1               	movwf	(??_sprintf+1)^(0+128)
  9571  01D1  0820               	movf	??_sprintf^(0+128),w
  9572  01D2  0421               	iorwf	(??_sprintf^(0+128)+1),w
  9573  01D3  1903               	btfsc	3,2
  9574  01D4  29D6               	goto	u6311
  9575  01D5  29D7               	goto	u6310
  9576  01D6                     u6311:	
  9577  01D6  2A89               	goto	l409
  9578  01D7                     u6310:	
  9579  01D7                     l4124:	
  9580                           
  9581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  9582  01D7  302D               	movlw	45
  9583  01D8  00A0               	movwf	??_sprintf^(0+128)
  9584  01D9  083B               	movf	sprintf@sp^(0+128),w
  9585  01DA  0084               	movwf	4
  9586  01DB  0820               	movf	??_sprintf^(0+128),w
  9587  01DC  1383               	bcf	3,7	;select IRP bank0
  9588  01DD  0080               	movwf	0
  9589  01DE                     l4126:	
  9590  01DE  3001               	movlw	1
  9591  01DF  00A0               	movwf	??_sprintf^(0+128)
  9592  01E0  0820               	movf	??_sprintf^(0+128),w
  9593  01E1  07BB               	addwf	sprintf@sp^(0+128),f
  9594  01E2  2A89               	goto	l409
  9595  01E3                     l4128:	
  9596                           
  9597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  9598  01E3  083E               	movf	sprintf@c^(0+128),w
  9599  01E4  00A0               	movwf	??_sprintf^(0+128)
  9600  01E5  3001               	movlw	1
  9601  01E6                     u6325:	
  9602  01E6  1003               	clrc
  9603  01E7  0DA0               	rlf	??_sprintf^(0+128),f
  9604  01E8  3EFF               	addlw	-1
  9605  01E9  1D03               	skipz
  9606  01EA  29E6               	goto	u6325
  9607  01EB  1003               	clrc
  9608  01EC  0D20               	rlf	??_sprintf^(0+128),w
  9609  01ED  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9610  01EE  0084               	movwf	4
  9611  01EF  160A  118A  200A  120A  118A  	fcall	stringdir
  9612  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  9613  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  9614  01F6  00A0               	movwf	___lldiv@divisor
  9615  01F7  160A  118A  200A  120A  118A  	fcall	stringdir
  9616  01FC  00A1               	movwf	___lldiv@divisor+1
  9617  01FD  160A  118A  200A  120A  118A  	fcall	stringdir
  9618  0202  00A2               	movwf	___lldiv@divisor+2
  9619  0203  160A  118A  200A  120A  118A  	fcall	stringdir
  9620  0208  00A3               	movwf	___lldiv@divisor+3
  9621  0209  1683               	bsf	3,5	;RP0=1, select bank1
  9622  020A  1303               	bcf	3,6	;RP1=0, select bank1
  9623  020B  0835               	movf	(sprintf@val+3)^(0+128),w
  9624  020C  1283               	bcf	3,5	;RP0=0, select bank0
  9625  020D  1303               	bcf	3,6	;RP1=0, select bank0
  9626  020E  00A7               	movwf	___lldiv@dividend+3
  9627  020F  1683               	bsf	3,5	;RP0=1, select bank1
  9628  0210  1303               	bcf	3,6	;RP1=0, select bank1
  9629  0211  0834               	movf	(sprintf@val+2)^(0+128),w
  9630  0212  1283               	bcf	3,5	;RP0=0, select bank0
  9631  0213  1303               	bcf	3,6	;RP1=0, select bank0
  9632  0214  00A6               	movwf	___lldiv@dividend+2
  9633  0215  1683               	bsf	3,5	;RP0=1, select bank1
  9634  0216  1303               	bcf	3,6	;RP1=0, select bank1
  9635  0217  0833               	movf	(sprintf@val+1)^(0+128),w
  9636  0218  1283               	bcf	3,5	;RP0=0, select bank0
  9637  0219  1303               	bcf	3,6	;RP1=0, select bank0
  9638  021A  00A5               	movwf	___lldiv@dividend+1
  9639  021B  1683               	bsf	3,5	;RP0=1, select bank1
  9640  021C  1303               	bcf	3,6	;RP1=0, select bank1
  9641  021D  0832               	movf	sprintf@val^(0+128),w
  9642  021E  1283               	bcf	3,5	;RP0=0, select bank0
  9643  021F  1303               	bcf	3,6	;RP1=0, select bank0
  9644  0220  00A4               	movwf	___lldiv@dividend
  9645  0221  160A  118A  210E  120A  118A  	fcall	___lldiv
  9646  0226  1283               	bcf	3,5	;RP0=0, select bank0
  9647  0227  1303               	bcf	3,6	;RP1=0, select bank0
  9648  0228  0823               	movf	?___lldiv+3,w
  9649  0229  1683               	bsf	3,5	;RP0=1, select bank1
  9650  022A  1303               	bcf	3,6	;RP1=0, select bank1
  9651  022B  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9652  022C  1283               	bcf	3,5	;RP0=0, select bank0
  9653  022D  1303               	bcf	3,6	;RP1=0, select bank0
  9654  022E  0822               	movf	?___lldiv+2,w
  9655  022F  1683               	bsf	3,5	;RP0=1, select bank1
  9656  0230  1303               	bcf	3,6	;RP1=0, select bank1
  9657  0231  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9658  0232  1283               	bcf	3,5	;RP0=0, select bank0
  9659  0233  1303               	bcf	3,6	;RP1=0, select bank0
  9660  0234  0821               	movf	?___lldiv+1,w
  9661  0235  1683               	bsf	3,5	;RP0=1, select bank1
  9662  0236  1303               	bcf	3,6	;RP1=0, select bank1
  9663  0237  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9664  0238  1283               	bcf	3,5	;RP0=0, select bank0
  9665  0239  1303               	bcf	3,6	;RP1=0, select bank0
  9666  023A  0820               	movf	?___lldiv,w
  9667  023B  1683               	bsf	3,5	;RP0=1, select bank1
  9668  023C  1303               	bcf	3,6	;RP1=0, select bank1
  9669  023D  00AE               	movwf	sprintf@tmpval^(0+128)
  9670  023E                     l4130:	
  9671                           
  9672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  9673  023E  3000               	movlw	0
  9674  023F  1283               	bcf	3,5	;RP0=0, select bank0
  9675  0240  1303               	bcf	3,6	;RP1=0, select bank0
  9676  0241  00AB               	movwf	___llmod@divisor+3
  9677  0242  3000               	movlw	0
  9678  0243  00AA               	movwf	___llmod@divisor+2
  9679  0244  3000               	movlw	0
  9680  0245  00A9               	movwf	___llmod@divisor+1
  9681  0246  300A               	movlw	10
  9682  0247  00A8               	movwf	___llmod@divisor
  9683  0248  1683               	bsf	3,5	;RP0=1, select bank1
  9684  0249  1303               	bcf	3,6	;RP1=0, select bank1
  9685  024A  0831               	movf	(sprintf@tmpval+3)^(0+128),w
  9686  024B  1283               	bcf	3,5	;RP0=0, select bank0
  9687  024C  1303               	bcf	3,6	;RP1=0, select bank0
  9688  024D  00AF               	movwf	___llmod@dividend+3
  9689  024E  1683               	bsf	3,5	;RP0=1, select bank1
  9690  024F  1303               	bcf	3,6	;RP1=0, select bank1
  9691  0250  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9692  0251  1283               	bcf	3,5	;RP0=0, select bank0
  9693  0252  1303               	bcf	3,6	;RP1=0, select bank0
  9694  0253  00AE               	movwf	___llmod@dividend+2
  9695  0254  1683               	bsf	3,5	;RP0=1, select bank1
  9696  0255  1303               	bcf	3,6	;RP1=0, select bank1
  9697  0256  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9698  0257  1283               	bcf	3,5	;RP0=0, select bank0
  9699  0258  1303               	bcf	3,6	;RP1=0, select bank0
  9700  0259  00AD               	movwf	___llmod@dividend+1
  9701  025A  1683               	bsf	3,5	;RP0=1, select bank1
  9702  025B  1303               	bcf	3,6	;RP1=0, select bank1
  9703  025C  082E               	movf	sprintf@tmpval^(0+128),w
  9704  025D  1283               	bcf	3,5	;RP0=0, select bank0
  9705  025E  1303               	bcf	3,6	;RP1=0, select bank0
  9706  025F  00AC               	movwf	___llmod@dividend
  9707  0260  160A  158A  2751  120A  118A  	fcall	___llmod
  9708  0265  1283               	bcf	3,5	;RP0=0, select bank0
  9709  0266  1303               	bcf	3,6	;RP1=0, select bank0
  9710  0267  082B               	movf	?___llmod+3,w
  9711  0268  1683               	bsf	3,5	;RP0=1, select bank1
  9712  0269  1303               	bcf	3,6	;RP1=0, select bank1
  9713  026A  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
  9714  026B  1283               	bcf	3,5	;RP0=0, select bank0
  9715  026C  1303               	bcf	3,6	;RP1=0, select bank0
  9716  026D  082A               	movf	?___llmod+2,w
  9717  026E  1683               	bsf	3,5	;RP0=1, select bank1
  9718  026F  1303               	bcf	3,6	;RP1=0, select bank1
  9719  0270  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9720  0271  1283               	bcf	3,5	;RP0=0, select bank0
  9721  0272  1303               	bcf	3,6	;RP1=0, select bank0
  9722  0273  0829               	movf	?___llmod+1,w
  9723  0274  1683               	bsf	3,5	;RP0=1, select bank1
  9724  0275  1303               	bcf	3,6	;RP1=0, select bank1
  9725  0276  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9726  0277  1283               	bcf	3,5	;RP0=0, select bank0
  9727  0278  1303               	bcf	3,6	;RP1=0, select bank0
  9728  0279  0828               	movf	?___llmod,w
  9729  027A  1683               	bsf	3,5	;RP0=1, select bank1
  9730  027B  1303               	bcf	3,6	;RP1=0, select bank1
  9731  027C  00AE               	movwf	sprintf@tmpval^(0+128)
  9732  027D                     l4132:	
  9733                           
  9734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  9735  027D  082E               	movf	sprintf@tmpval^(0+128),w
  9736  027E  3E30               	addlw	48
  9737  027F  00A0               	movwf	??_sprintf^(0+128)
  9738  0280  083B               	movf	sprintf@sp^(0+128),w
  9739  0281  0084               	movwf	4
  9740  0282  0820               	movf	??_sprintf^(0+128),w
  9741  0283  1383               	bcf	3,7	;select IRP bank0
  9742  0284  0080               	movwf	0
  9743  0285  3001               	movlw	1
  9744  0286  00A0               	movwf	??_sprintf^(0+128)
  9745  0287  0820               	movf	??_sprintf^(0+128),w
  9746  0288  07BB               	addwf	sprintf@sp^(0+128),f
  9747  0289                     l409:	
  9748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  9749                           
  9750                           
  9751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  9752  0289  3001               	movlw	1
  9753  028A  02BE               	subwf	sprintf@c^(0+128),f
  9754  028B  0A3E               	incf	sprintf@c^(0+128),w
  9755  028C  1D03               	btfss	3,2
  9756  028D  2A8F               	goto	u6331
  9757  028E  2A90               	goto	u6330
  9758  028F                     u6331:	
  9759  028F  29E3               	goto	l4128
  9760  0290                     u6330:	
  9761  0290  2AA4               	goto	l4140
  9762  0291                     l4134:	
  9763                           
  9764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  9765  0291  3030               	movlw	48
  9766  0292  1683               	bsf	3,5	;RP0=1, select bank1
  9767  0293  1303               	bcf	3,6	;RP1=0, select bank1
  9768  0294  00A0               	movwf	??_sprintf^(0+128)
  9769  0295  083B               	movf	sprintf@sp^(0+128),w
  9770  0296  0084               	movwf	4
  9771  0297  0820               	movf	??_sprintf^(0+128),w
  9772  0298  1383               	bcf	3,7	;select IRP bank0
  9773  0299  0080               	movwf	0
  9774  029A                     l4136:	
  9775  029A  3001               	movlw	1
  9776  029B  00A0               	movwf	??_sprintf^(0+128)
  9777  029C  0820               	movf	??_sprintf^(0+128),w
  9778  029D  07BB               	addwf	sprintf@sp^(0+128),f
  9779  029E                     l4138:	
  9780                           
  9781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  9782  029E  30FF               	movlw	255
  9783  029F  07B6               	addwf	sprintf@eexp^(0+128),f
  9784  02A0  1803               	skipnc
  9785  02A1  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9786  02A2  30FF               	movlw	255
  9787  02A3  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9788  02A4                     l4140:	
  9789                           
  9790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  9791  02A4  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9792  02A5  3A80               	xorlw	128
  9793  02A6  00FF               	movwf	btemp+1
  9794  02A7  3080               	movlw	128
  9795  02A8  027F               	subwf	btemp+1,w
  9796  02A9  1D03               	skipz
  9797  02AA  2AAD               	goto	u6345
  9798  02AB  3001               	movlw	1
  9799  02AC  0236               	subwf	sprintf@eexp^(0+128),w
  9800  02AD                     u6345:	
  9801  02AD  1803               	skipnc
  9802  02AE  2AB0               	goto	u6341
  9803  02AF  2AB1               	goto	u6340
  9804  02B0                     u6341:	
  9805  02B0  2A91               	goto	l4134
  9806  02B1                     u6340:	
  9807  02B1                     l4142:	
  9808                           
  9809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9810  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  9811  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  9812  02B3  083D               	movf	(sprintf@prec+1)^(0+128),w
  9813  02B4  3A80               	xorlw	128
  9814  02B5  00FF               	movwf	btemp+1
  9815  02B6  3080               	movlw	128
  9816  02B7  027F               	subwf	btemp+1,w
  9817  02B8  1D03               	skipz
  9818  02B9  2ABC               	goto	u6355
  9819  02BA  3009               	movlw	9
  9820  02BB  023C               	subwf	sprintf@prec^(0+128),w
  9821  02BC                     u6355:	
  9822  02BC  1C03               	skipc
  9823  02BD  2ABF               	goto	u6351
  9824  02BE  2AC0               	goto	u6350
  9825  02BF                     u6351:	
  9826  02BF  2AC7               	goto	l4146
  9827  02C0                     u6350:	
  9828  02C0                     l4144:	
  9829                           
  9830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  9831  02C0  3008               	movlw	8
  9832  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  9833  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  9834  02C3  00A0               	movwf	??_sprintf^(0+128)
  9835  02C4  0820               	movf	??_sprintf^(0+128),w
  9836  02C5  00BE               	movwf	sprintf@c^(0+128)
  9837  02C6  2ACD               	goto	l416
  9838  02C7                     l4146:	
  9839                           
  9840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  9841  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  9842  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  9843  02C9  083C               	movf	sprintf@prec^(0+128),w
  9844  02CA  00A0               	movwf	??_sprintf^(0+128)
  9845  02CB  0820               	movf	??_sprintf^(0+128),w
  9846  02CC  00BE               	movwf	sprintf@c^(0+128)
  9847  02CD                     l416:	
  9848                           
  9849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  9850  02CD  083E               	movf	sprintf@c^(0+128),w
  9851  02CE  00A0               	movwf	??_sprintf^(0+128)
  9852  02CF  01A1               	clrf	(??_sprintf^(0+128)+1)
  9853  02D0  0820               	movf	??_sprintf^(0+128),w
  9854  02D1  02BC               	subwf	sprintf@prec^(0+128),f
  9855  02D2  0821               	movf	(??_sprintf+1)^(0+128),w
  9856  02D3  1C03               	skipc
  9857  02D4  03BD               	decf	(sprintf@prec+1)^(0+128),f
  9858  02D5  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  9859  02D6                     l4148:	
  9860                           
  9861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  9862  02D6  083E               	movf	sprintf@c^(0+128),w
  9863  02D7  1903               	btfsc	3,2
  9864  02D8  2ADA               	goto	u6361
  9865  02D9  2ADB               	goto	u6360
  9866  02DA                     u6361:	
  9867  02DA  2AE6               	goto	l4154
  9868  02DB                     u6360:	
  9869  02DB                     l4150:	
  9870                           
  9871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  9872  02DB  302E               	movlw	46
  9873  02DC  00A0               	movwf	??_sprintf^(0+128)
  9874  02DD  083B               	movf	sprintf@sp^(0+128),w
  9875  02DE  0084               	movwf	4
  9876  02DF  0820               	movf	??_sprintf^(0+128),w
  9877  02E0  1383               	bcf	3,7	;select IRP bank0
  9878  02E1  0080               	movwf	0
  9879  02E2                     l4152:	
  9880  02E2  3001               	movlw	1
  9881  02E3  00A0               	movwf	??_sprintf^(0+128)
  9882  02E4  0820               	movf	??_sprintf^(0+128),w
  9883  02E5  07BB               	addwf	sprintf@sp^(0+128),f
  9884  02E6                     l4154:	
  9885                           
  9886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  9887  02E6  083E               	movf	sprintf@c^(0+128),w
  9888  02E7  120A  158A  2545  120A  118A  	fcall	_scale
  9889  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  9890  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  9891  02EE  083D               	movf	?_scale,w
  9892  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  9893  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  9894  02F1  00A6               	movwf	_sprintf$1067^(0+128)
  9895  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  9896  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  9897  02F4  083E               	movf	?_scale+1,w
  9898  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  9899  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  9900  02F7  00A7               	movwf	(_sprintf$1067+1)^(0+128)
  9901  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  9902  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  9903  02FA  083F               	movf	?_scale+2,w
  9904  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  9905  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  9906  02FD  00A8               	movwf	(_sprintf$1067+2)^(0+128)
  9907  02FE                     l4156:	
  9908                           
  9909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  9910  02FE  0826               	movf	_sprintf$1067^(0+128),w
  9911  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  9912  0300  1303               	bcf	3,6	;RP1=0, select bank0
  9913  0301  00B0               	movwf	___ftmul@f2
  9914  0302  1683               	bsf	3,5	;RP0=1, select bank1
  9915  0303  1303               	bcf	3,6	;RP1=0, select bank1
  9916  0304  0827               	movf	(_sprintf$1067+1)^(0+128),w
  9917  0305  1283               	bcf	3,5	;RP0=0, select bank0
  9918  0306  1303               	bcf	3,6	;RP1=0, select bank0
  9919  0307  00B1               	movwf	___ftmul@f2+1
  9920  0308  1683               	bsf	3,5	;RP0=1, select bank1
  9921  0309  1303               	bcf	3,6	;RP1=0, select bank1
  9922  030A  0828               	movf	(_sprintf$1067+2)^(0+128),w
  9923  030B  1283               	bcf	3,5	;RP0=0, select bank0
  9924  030C  1303               	bcf	3,6	;RP1=0, select bank0
  9925  030D  00B2               	movwf	___ftmul@f2+2
  9926  030E  1683               	bsf	3,5	;RP0=1, select bank1
  9927  030F  1303               	bcf	3,6	;RP1=0, select bank1
  9928  0310  0838               	movf	sprintf@fval^(0+128),w
  9929  0311  1283               	bcf	3,5	;RP0=0, select bank0
  9930  0312  1303               	bcf	3,6	;RP1=0, select bank0
  9931  0313  00AD               	movwf	___ftmul@f1
  9932  0314  1683               	bsf	3,5	;RP0=1, select bank1
  9933  0315  1303               	bcf	3,6	;RP1=0, select bank1
  9934  0316  0839               	movf	(sprintf@fval+1)^(0+128),w
  9935  0317  1283               	bcf	3,5	;RP0=0, select bank0
  9936  0318  1303               	bcf	3,6	;RP1=0, select bank0
  9937  0319  00AE               	movwf	___ftmul@f1+1
  9938  031A  1683               	bsf	3,5	;RP0=1, select bank1
  9939  031B  1303               	bcf	3,6	;RP1=0, select bank1
  9940  031C  083A               	movf	(sprintf@fval+2)^(0+128),w
  9941  031D  1283               	bcf	3,5	;RP0=0, select bank0
  9942  031E  1303               	bcf	3,6	;RP1=0, select bank0
  9943  031F  00AF               	movwf	___ftmul@f1+2
  9944  0320  160A  118A  2524  120A  118A  	fcall	___ftmul
  9945  0325  1283               	bcf	3,5	;RP0=0, select bank0
  9946  0326  1303               	bcf	3,6	;RP1=0, select bank0
  9947  0327  082D               	movf	?___ftmul,w
  9948  0328  00C6               	movwf	___fttol@f1
  9949  0329  082E               	movf	?___ftmul+1,w
  9950  032A  00C7               	movwf	___fttol@f1+1
  9951  032B  082F               	movf	?___ftmul+2,w
  9952  032C  00C8               	movwf	___fttol@f1+2
  9953  032D  160A  118A  2261  120A  118A  	fcall	___fttol
  9954  0332  1283               	bcf	3,5	;RP0=0, select bank0
  9955  0333  1303               	bcf	3,6	;RP1=0, select bank0
  9956  0334  0849               	movf	?___fttol+3,w
  9957  0335  1683               	bsf	3,5	;RP0=1, select bank1
  9958  0336  1303               	bcf	3,6	;RP1=0, select bank1
  9959  0337  00B5               	movwf	(sprintf@val+3)^(0+128)
  9960  0338  1283               	bcf	3,5	;RP0=0, select bank0
  9961  0339  1303               	bcf	3,6	;RP1=0, select bank0
  9962  033A  0848               	movf	?___fttol+2,w
  9963  033B  1683               	bsf	3,5	;RP0=1, select bank1
  9964  033C  1303               	bcf	3,6	;RP1=0, select bank1
  9965  033D  00B4               	movwf	(sprintf@val+2)^(0+128)
  9966  033E  1283               	bcf	3,5	;RP0=0, select bank0
  9967  033F  1303               	bcf	3,6	;RP1=0, select bank0
  9968  0340  0847               	movf	?___fttol+1,w
  9969  0341  1683               	bsf	3,5	;RP0=1, select bank1
  9970  0342  1303               	bcf	3,6	;RP1=0, select bank1
  9971  0343  00B3               	movwf	(sprintf@val+1)^(0+128)
  9972  0344  1283               	bcf	3,5	;RP0=0, select bank0
  9973  0345  1303               	bcf	3,6	;RP1=0, select bank0
  9974  0346  0846               	movf	?___fttol,w
  9975  0347  1683               	bsf	3,5	;RP0=1, select bank1
  9976  0348  1303               	bcf	3,6	;RP1=0, select bank1
  9977  0349  00B2               	movwf	sprintf@val^(0+128)
  9978                           
  9979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  9980  034A  2C4C               	goto	l4166
  9981  034B                     l4158:	
  9982                           
  9983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  9984  034B  083E               	movf	sprintf@c^(0+128),w
  9985  034C  00A0               	movwf	??_sprintf^(0+128)
  9986  034D  3001               	movlw	1
  9987  034E                     u6375:	
  9988  034E  1003               	clrc
  9989  034F  0DA0               	rlf	??_sprintf^(0+128),f
  9990  0350  3EFF               	addlw	-1
  9991  0351  1D03               	skipz
  9992  0352  2B4E               	goto	u6375
  9993  0353  1003               	clrc
  9994  0354  0D20               	rlf	??_sprintf^(0+128),w
  9995  0355  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9996  0356  0084               	movwf	4
  9997  0357  160A  118A  200A  120A  118A  	fcall	stringdir
  9998  035C  1283               	bcf	3,5	;RP0=0, select bank0
  9999  035D  1303               	bcf	3,6	;RP1=0, select bank0
 10000  035E  00A0               	movwf	___lldiv@divisor
 10001  035F  160A  118A  200A  120A  118A  	fcall	stringdir
 10002  0364  00A1               	movwf	___lldiv@divisor+1
 10003  0365  160A  118A  200A  120A  118A  	fcall	stringdir
 10004  036A  00A2               	movwf	___lldiv@divisor+2
 10005  036B  160A  118A  200A  120A  118A  	fcall	stringdir
 10006  0370  00A3               	movwf	___lldiv@divisor+3
 10007  0371  1683               	bsf	3,5	;RP0=1, select bank1
 10008  0372  1303               	bcf	3,6	;RP1=0, select bank1
 10009  0373  0835               	movf	(sprintf@val+3)^(0+128),w
 10010  0374  1283               	bcf	3,5	;RP0=0, select bank0
 10011  0375  1303               	bcf	3,6	;RP1=0, select bank0
 10012  0376  00A7               	movwf	___lldiv@dividend+3
 10013  0377  1683               	bsf	3,5	;RP0=1, select bank1
 10014  0378  1303               	bcf	3,6	;RP1=0, select bank1
 10015  0379  0834               	movf	(sprintf@val+2)^(0+128),w
 10016  037A  1283               	bcf	3,5	;RP0=0, select bank0
 10017  037B  1303               	bcf	3,6	;RP1=0, select bank0
 10018  037C  00A6               	movwf	___lldiv@dividend+2
 10019  037D  1683               	bsf	3,5	;RP0=1, select bank1
 10020  037E  1303               	bcf	3,6	;RP1=0, select bank1
 10021  037F  0833               	movf	(sprintf@val+1)^(0+128),w
 10022  0380  1283               	bcf	3,5	;RP0=0, select bank0
 10023  0381  1303               	bcf	3,6	;RP1=0, select bank0
 10024  0382  00A5               	movwf	___lldiv@dividend+1
 10025  0383  1683               	bsf	3,5	;RP0=1, select bank1
 10026  0384  1303               	bcf	3,6	;RP1=0, select bank1
 10027  0385  0832               	movf	sprintf@val^(0+128),w
 10028  0386  1283               	bcf	3,5	;RP0=0, select bank0
 10029  0387  1303               	bcf	3,6	;RP1=0, select bank0
 10030  0388  00A4               	movwf	___lldiv@dividend
 10031  0389  160A  118A  210E  120A  118A  	fcall	___lldiv
 10032  038E  1283               	bcf	3,5	;RP0=0, select bank0
 10033  038F  1303               	bcf	3,6	;RP1=0, select bank0
 10034  0390  0823               	movf	?___lldiv+3,w
 10035  0391  1683               	bsf	3,5	;RP0=1, select bank1
 10036  0392  1303               	bcf	3,6	;RP1=0, select bank1
 10037  0393  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10038  0394  1283               	bcf	3,5	;RP0=0, select bank0
 10039  0395  1303               	bcf	3,6	;RP1=0, select bank0
 10040  0396  0822               	movf	?___lldiv+2,w
 10041  0397  1683               	bsf	3,5	;RP0=1, select bank1
 10042  0398  1303               	bcf	3,6	;RP1=0, select bank1
 10043  0399  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10044  039A  1283               	bcf	3,5	;RP0=0, select bank0
 10045  039B  1303               	bcf	3,6	;RP1=0, select bank0
 10046  039C  0821               	movf	?___lldiv+1,w
 10047  039D  1683               	bsf	3,5	;RP0=1, select bank1
 10048  039E  1303               	bcf	3,6	;RP1=0, select bank1
 10049  039F  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10050  03A0  1283               	bcf	3,5	;RP0=0, select bank0
 10051  03A1  1303               	bcf	3,6	;RP1=0, select bank0
 10052  03A2  0820               	movf	?___lldiv,w
 10053  03A3  1683               	bsf	3,5	;RP0=1, select bank1
 10054  03A4  1303               	bcf	3,6	;RP1=0, select bank1
 10055  03A5  00AE               	movwf	sprintf@tmpval^(0+128)
 10056  03A6                     l4160:	
 10057                           
 10058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
 10059  03A6  3000               	movlw	0
 10060  03A7  1283               	bcf	3,5	;RP0=0, select bank0
 10061  03A8  1303               	bcf	3,6	;RP1=0, select bank0
 10062  03A9  00AB               	movwf	___llmod@divisor+3
 10063  03AA  3000               	movlw	0
 10064  03AB  00AA               	movwf	___llmod@divisor+2
 10065  03AC  3000               	movlw	0
 10066  03AD  00A9               	movwf	___llmod@divisor+1
 10067  03AE  300A               	movlw	10
 10068  03AF  00A8               	movwf	___llmod@divisor
 10069  03B0  1683               	bsf	3,5	;RP0=1, select bank1
 10070  03B1  1303               	bcf	3,6	;RP1=0, select bank1
 10071  03B2  0831               	movf	(sprintf@tmpval+3)^(0+128),w
 10072  03B3  1283               	bcf	3,5	;RP0=0, select bank0
 10073  03B4  1303               	bcf	3,6	;RP1=0, select bank0
 10074  03B5  00AF               	movwf	___llmod@dividend+3
 10075  03B6  1683               	bsf	3,5	;RP0=1, select bank1
 10076  03B7  1303               	bcf	3,6	;RP1=0, select bank1
 10077  03B8  0830               	movf	(sprintf@tmpval+2)^(0+128),w
 10078  03B9  1283               	bcf	3,5	;RP0=0, select bank0
 10079  03BA  1303               	bcf	3,6	;RP1=0, select bank0
 10080  03BB  00AE               	movwf	___llmod@dividend+2
 10081  03BC  1683               	bsf	3,5	;RP0=1, select bank1
 10082  03BD  1303               	bcf	3,6	;RP1=0, select bank1
 10083  03BE  082F               	movf	(sprintf@tmpval+1)^(0+128),w
 10084  03BF  1283               	bcf	3,5	;RP0=0, select bank0
 10085  03C0  1303               	bcf	3,6	;RP1=0, select bank0
 10086  03C1  00AD               	movwf	___llmod@dividend+1
 10087  03C2  1683               	bsf	3,5	;RP0=1, select bank1
 10088  03C3  1303               	bcf	3,6	;RP1=0, select bank1
 10089  03C4  082E               	movf	sprintf@tmpval^(0+128),w
 10090  03C5  1283               	bcf	3,5	;RP0=0, select bank0
 10091  03C6  1303               	bcf	3,6	;RP1=0, select bank0
 10092  03C7  00AC               	movwf	___llmod@dividend
 10093  03C8  160A  158A  2751  120A  118A  	fcall	___llmod
 10094  03CD  1283               	bcf	3,5	;RP0=0, select bank0
 10095  03CE  1303               	bcf	3,6	;RP1=0, select bank0
 10096  03CF  082B               	movf	?___llmod+3,w
 10097  03D0  1683               	bsf	3,5	;RP0=1, select bank1
 10098  03D1  1303               	bcf	3,6	;RP1=0, select bank1
 10099  03D2  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10100  03D3  1283               	bcf	3,5	;RP0=0, select bank0
 10101  03D4  1303               	bcf	3,6	;RP1=0, select bank0
 10102  03D5  082A               	movf	?___llmod+2,w
 10103  03D6  1683               	bsf	3,5	;RP0=1, select bank1
 10104  03D7  1303               	bcf	3,6	;RP1=0, select bank1
 10105  03D8  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10106  03D9  1283               	bcf	3,5	;RP0=0, select bank0
 10107  03DA  1303               	bcf	3,6	;RP1=0, select bank0
 10108  03DB  0829               	movf	?___llmod+1,w
 10109  03DC  1683               	bsf	3,5	;RP0=1, select bank1
 10110  03DD  1303               	bcf	3,6	;RP1=0, select bank1
 10111  03DE  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10112  03DF  1283               	bcf	3,5	;RP0=0, select bank0
 10113  03E0  1303               	bcf	3,6	;RP1=0, select bank0
 10114  03E1  0828               	movf	?___llmod,w
 10115  03E2  1683               	bsf	3,5	;RP0=1, select bank1
 10116  03E3  1303               	bcf	3,6	;RP1=0, select bank1
 10117  03E4  00AE               	movwf	sprintf@tmpval^(0+128)
 10118  03E5                     l4162:	
 10119                           
 10120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
 10121  03E5  082E               	movf	sprintf@tmpval^(0+128),w
 10122  03E6  3E30               	addlw	48
 10123  03E7  00A0               	movwf	??_sprintf^(0+128)
 10124  03E8  083B               	movf	sprintf@sp^(0+128),w
 10125  03E9  0084               	movwf	4
 10126  03EA  0820               	movf	??_sprintf^(0+128),w
 10127  03EB  1383               	bcf	3,7	;select IRP bank0
 10128  03EC  0080               	movwf	0
 10129  03ED  3001               	movlw	1
 10130  03EE  00A0               	movwf	??_sprintf^(0+128)
 10131  03EF  0820               	movf	??_sprintf^(0+128),w
 10132  03F0  07BB               	addwf	sprintf@sp^(0+128),f
 10133  03F1                     l4164:	
 10134                           
 10135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
 10136  03F1  083E               	movf	sprintf@c^(0+128),w
 10137  03F2  00A0               	movwf	??_sprintf^(0+128)
 10138  03F3  3001               	movlw	1
 10139  03F4                     u6385:	
 10140  03F4  1003               	clrc
 10141  03F5  0DA0               	rlf	??_sprintf^(0+128),f
 10142  03F6  3EFF               	addlw	-1
 10143  03F7  1D03               	skipz
 10144  03F8  2BF4               	goto	u6385
 10145  03F9  1003               	clrc
 10146  03FA  0D20               	rlf	??_sprintf^(0+128),w
 10147  03FB  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10148  03FC  0084               	movwf	4
 10149  03FD  160A  118A  200A  120A  118A  	fcall	stringdir
 10150  0402  1283               	bcf	3,5	;RP0=0, select bank0
 10151  0403  1303               	bcf	3,6	;RP1=0, select bank0
 10152  0404  00A8               	movwf	___llmod@divisor
 10153  0405  160A  118A  200A  120A  118A  	fcall	stringdir
 10154  040A  00A9               	movwf	___llmod@divisor+1
 10155  040B  160A  118A  200A  120A  118A  	fcall	stringdir
 10156  0410  00AA               	movwf	___llmod@divisor+2
 10157  0411  160A  118A  200A  120A  118A  	fcall	stringdir
 10158  0416  00AB               	movwf	___llmod@divisor+3
 10159  0417  1683               	bsf	3,5	;RP0=1, select bank1
 10160  0418  1303               	bcf	3,6	;RP1=0, select bank1
 10161  0419  0835               	movf	(sprintf@val+3)^(0+128),w
 10162  041A  1283               	bcf	3,5	;RP0=0, select bank0
 10163  041B  1303               	bcf	3,6	;RP1=0, select bank0
 10164  041C  00AF               	movwf	___llmod@dividend+3
 10165  041D  1683               	bsf	3,5	;RP0=1, select bank1
 10166  041E  1303               	bcf	3,6	;RP1=0, select bank1
 10167  041F  0834               	movf	(sprintf@val+2)^(0+128),w
 10168  0420  1283               	bcf	3,5	;RP0=0, select bank0
 10169  0421  1303               	bcf	3,6	;RP1=0, select bank0
 10170  0422  00AE               	movwf	___llmod@dividend+2
 10171  0423  1683               	bsf	3,5	;RP0=1, select bank1
 10172  0424  1303               	bcf	3,6	;RP1=0, select bank1
 10173  0425  0833               	movf	(sprintf@val+1)^(0+128),w
 10174  0426  1283               	bcf	3,5	;RP0=0, select bank0
 10175  0427  1303               	bcf	3,6	;RP1=0, select bank0
 10176  0428  00AD               	movwf	___llmod@dividend+1
 10177  0429  1683               	bsf	3,5	;RP0=1, select bank1
 10178  042A  1303               	bcf	3,6	;RP1=0, select bank1
 10179  042B  0832               	movf	sprintf@val^(0+128),w
 10180  042C  1283               	bcf	3,5	;RP0=0, select bank0
 10181  042D  1303               	bcf	3,6	;RP1=0, select bank0
 10182  042E  00AC               	movwf	___llmod@dividend
 10183  042F  160A  158A  2751  120A  118A  	fcall	___llmod
 10184  0434  1283               	bcf	3,5	;RP0=0, select bank0
 10185  0435  1303               	bcf	3,6	;RP1=0, select bank0
 10186  0436  082B               	movf	?___llmod+3,w
 10187  0437  1683               	bsf	3,5	;RP0=1, select bank1
 10188  0438  1303               	bcf	3,6	;RP1=0, select bank1
 10189  0439  00B5               	movwf	(sprintf@val+3)^(0+128)
 10190  043A  1283               	bcf	3,5	;RP0=0, select bank0
 10191  043B  1303               	bcf	3,6	;RP1=0, select bank0
 10192  043C  082A               	movf	?___llmod+2,w
 10193  043D  1683               	bsf	3,5	;RP0=1, select bank1
 10194  043E  1303               	bcf	3,6	;RP1=0, select bank1
 10195  043F  00B4               	movwf	(sprintf@val+2)^(0+128)
 10196  0440  1283               	bcf	3,5	;RP0=0, select bank0
 10197  0441  1303               	bcf	3,6	;RP1=0, select bank0
 10198  0442  0829               	movf	?___llmod+1,w
 10199  0443  1683               	bsf	3,5	;RP0=1, select bank1
 10200  0444  1303               	bcf	3,6	;RP1=0, select bank1
 10201  0445  00B3               	movwf	(sprintf@val+1)^(0+128)
 10202  0446  1283               	bcf	3,5	;RP0=0, select bank0
 10203  0447  1303               	bcf	3,6	;RP1=0, select bank0
 10204  0448  0828               	movf	?___llmod,w
 10205  0449  1683               	bsf	3,5	;RP0=1, select bank1
 10206  044A  1303               	bcf	3,6	;RP1=0, select bank1
 10207  044B  00B2               	movwf	sprintf@val^(0+128)
 10208  044C                     l4166:	
 10209                           
 10210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
 10211  044C  3001               	movlw	1
 10212  044D  02BE               	subwf	sprintf@c^(0+128),f
 10213  044E  0A3E               	incf	sprintf@c^(0+128),w
 10214  044F  1D03               	btfss	3,2
 10215  0450  2C52               	goto	u6391
 10216  0451  2C53               	goto	u6390
 10217  0452                     u6391:	
 10218  0452  2B4B               	goto	l4158
 10219  0453                     u6390:	
 10220  0453  2C65               	goto	l4174
 10221  0454                     l4168:	
 10222                           
 10223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
 10224  0454  3030               	movlw	48
 10225  0455  00A0               	movwf	??_sprintf^(0+128)
 10226  0456  083B               	movf	sprintf@sp^(0+128),w
 10227  0457  0084               	movwf	4
 10228  0458  0820               	movf	??_sprintf^(0+128),w
 10229  0459  1383               	bcf	3,7	;select IRP bank0
 10230  045A  0080               	movwf	0
 10231  045B                     l4170:	
 10232  045B  3001               	movlw	1
 10233  045C  00A0               	movwf	??_sprintf^(0+128)
 10234  045D  0820               	movf	??_sprintf^(0+128),w
 10235  045E  07BB               	addwf	sprintf@sp^(0+128),f
 10236  045F                     l4172:	
 10237                           
 10238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
 10239  045F  30FF               	movlw	255
 10240  0460  07BC               	addwf	sprintf@prec^(0+128),f
 10241  0461  1803               	skipnc
 10242  0462  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10243  0463  30FF               	movlw	255
 10244  0464  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10245  0465                     l4174:	
 10246                           
 10247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
 10248  0465  083C               	movf	sprintf@prec^(0+128),w
 10249  0466  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10250  0467  1D03               	btfss	3,2
 10251  0468  2C6A               	goto	u6401
 10252  0469  2C6B               	goto	u6400
 10253  046A                     u6401:	
 10254  046A  2C54               	goto	l4168
 10255  046B                     u6400:	
 10256  046B  2E1B               	goto	l4254
 10257  046C                     l4176:	
 10258                           
 10259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10260  046C  0829               	movf	sprintf@ap^(0+128),w
 10261  046D  0084               	movwf	4
 10262  046E  1383               	bcf	3,7	;select IRP bank0
 10263  046F  0800               	movf	0,w
 10264  0470  00A0               	movwf	??_sprintf^(0+128)
 10265  0471  0A84               	incf	4,f
 10266  0472  0800               	movf	0,w
 10267  0473  00A1               	movwf	(??_sprintf^(0+128)+1)
 10268  0474  0820               	movf	??_sprintf^(0+128),w
 10269  0475  00B2               	movwf	sprintf@val^(0+128)
 10270  0476  0821               	movf	(??_sprintf+1)^(0+128),w
 10271  0477  00B3               	movwf	(sprintf@val+1)^(0+128)
 10272  0478  3000               	movlw	0
 10273  0479  1BB3               	btfsc	(sprintf@val+1)^(0+128),7
 10274  047A  30FF               	movlw	255
 10275  047B  00B4               	movwf	(sprintf@val+2)^(0+128)
 10276  047C  00B5               	movwf	(sprintf@val+3)^(0+128)
 10277  047D                     l4178:	
 10278  047D  3002               	movlw	2
 10279  047E  00A0               	movwf	??_sprintf^(0+128)
 10280  047F  0820               	movf	??_sprintf^(0+128),w
 10281  0480  07A9               	addwf	sprintf@ap^(0+128),f
 10282  0481                     l4180:	
 10283                           
 10284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((long)val < 0) {
 10285  0481  1FB5               	btfss	(sprintf@val+3)^(0+128),7
 10286  0482  2C84               	goto	u6411
 10287  0483  2C85               	goto	u6410
 10288  0484                     u6411:	
 10289  0484  2C94               	goto	l4186
 10290  0485                     u6410:	
 10291  0485                     l4182:	
 10292                           
 10293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
 10294  0485  3003               	movlw	3
 10295  0486  04AA               	iorwf	sprintf@flag^(0+128),f
 10296  0487  3000               	movlw	0
 10297  0488  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
 10298  0489                     l4184:	
 10299                           
 10300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
 10301  0489  09B2               	comf	sprintf@val^(0+128),f
 10302  048A  09B3               	comf	(sprintf@val+1)^(0+128),f
 10303  048B  09B4               	comf	(sprintf@val+2)^(0+128),f
 10304  048C  09B5               	comf	(sprintf@val+3)^(0+128),f
 10305  048D  0AB2               	incf	sprintf@val^(0+128),f
 10306  048E  1903               	skipnz
 10307  048F  0AB3               	incf	(sprintf@val+1)^(0+128),f
 10308  0490  1903               	skipnz
 10309  0491  0AB4               	incf	(sprintf@val+2)^(0+128),f
 10310  0492  1903               	skipnz
 10311  0493  0AB5               	incf	(sprintf@val+3)^(0+128),f
 10312  0494                     l4186:	
 10313                           
 10314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(pr
      +                          ec == 0 && val == 0)
 10315  0494  083C               	movf	sprintf@prec^(0+128),w
 10316  0495  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10317  0496  1D03               	btfss	3,2
 10318  0497  2C99               	goto	u6421
 10319  0498  2C9A               	goto	u6420
 10320  0499                     u6421:	
 10321  0499  2CA8               	goto	l4192
 10322  049A                     u6420:	
 10323  049A                     l4188:	
 10324  049A  0835               	movf	(sprintf@val+3)^(0+128),w
 10325  049B  0434               	iorwf	(sprintf@val+2)^(0+128),w
 10326  049C  0433               	iorwf	(sprintf@val+1)^(0+128),w
 10327  049D  0432               	iorwf	sprintf@val^(0+128),w
 10328  049E  1D03               	skipz
 10329  049F  2CA1               	goto	u6431
 10330  04A0  2CA2               	goto	u6430
 10331  04A1                     u6431:	
 10332  04A1  2CA8               	goto	l4192
 10333  04A2                     u6430:	
 10334  04A2                     l4190:	
 10335                           
 10336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
 10337  04A2  3001               	movlw	1
 10338  04A3  07BC               	addwf	sprintf@prec^(0+128),f
 10339  04A4  1803               	skipnc
 10340  04A5  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10341  04A6  3000               	movlw	0
 10342  04A7  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10343  04A8                     l4192:	
 10344                           
 10345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    fo
      +                          r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10346  04A8  01BE               	clrf	sprintf@c^(0+128)
 10347  04A9  0ABE               	incf	sprintf@c^(0+128),f
 10348  04AA                     l4198:	
 10349                           
 10350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
 10351  04AA  083E               	movf	sprintf@c^(0+128),w
 10352  04AB  00A0               	movwf	??_sprintf^(0+128)
 10353  04AC  3001               	movlw	1
 10354  04AD                     u6445:	
 10355  04AD  1003               	clrc
 10356  04AE  0DA0               	rlf	??_sprintf^(0+128),f
 10357  04AF  3EFF               	addlw	-1
 10358  04B0  1D03               	skipz
 10359  04B1  2CAD               	goto	u6445
 10360  04B2  1003               	clrc
 10361  04B3  0D20               	rlf	??_sprintf^(0+128),w
 10362  04B4  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10363  04B5  0084               	movwf	4
 10364  04B6  160A  118A  200A  120A  118A  	fcall	stringdir
 10365  04BB  00A1               	movwf	(??_sprintf+1)^(0+128)
 10366  04BC  160A  118A  200A  120A  118A  	fcall	stringdir
 10367  04C1  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
 10368  04C2  160A  118A  200A  120A  118A  	fcall	stringdir
 10369  04C7  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
 10370  04C8  160A  118A  200A  120A  118A  	fcall	stringdir
 10371  04CD  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
 10372  04CE  0824               	movf	(??_sprintf+4)^(0+128),w
 10373  04CF  0235               	subwf	(sprintf@val+3)^(0+128),w
 10374  04D0  1D03               	skipz
 10375  04D1  2CDC               	goto	u6455
 10376  04D2  0823               	movf	(??_sprintf+3)^(0+128),w
 10377  04D3  0234               	subwf	(sprintf@val+2)^(0+128),w
 10378  04D4  1D03               	skipz
 10379  04D5  2CDC               	goto	u6455
 10380  04D6  0822               	movf	(??_sprintf+2)^(0+128),w
 10381  04D7  0233               	subwf	(sprintf@val+1)^(0+128),w
 10382  04D8  1D03               	skipz
 10383  04D9  2CDC               	goto	u6455
 10384  04DA  0821               	movf	(??_sprintf+1)^(0+128),w
 10385  04DB  0232               	subwf	sprintf@val^(0+128),w
 10386  04DC                     u6455:	
 10387  04DC  1803               	skipnc
 10388  04DD  2CDF               	goto	u6451
 10389  04DE  2CE0               	goto	u6450
 10390  04DF                     u6451:	
 10391  04DF  2CE1               	goto	l4202
 10392  04E0                     u6450:	
 10393  04E0  2CEB               	goto	l4204
 10394  04E1                     l4202:	
 10395  04E1  3001               	movlw	1
 10396  04E2  00A0               	movwf	??_sprintf^(0+128)
 10397  04E3  0820               	movf	??_sprintf^(0+128),w
 10398  04E4  07BE               	addwf	sprintf@c^(0+128),f
 10399  04E5  300A               	movlw	10
 10400  04E6  063E               	xorwf	sprintf@c^(0+128),w
 10401  04E7  1D03               	btfss	3,2
 10402  04E8  2CEA               	goto	u6461
 10403  04E9  2CEB               	goto	u6460
 10404  04EA                     u6461:	
 10405  04EA  2CAA               	goto	l4198
 10406  04EB                     u6460:	
 10407  04EB                     l4204:	
 10408                           
 10409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
 10410  04EB  083D               	movf	(sprintf@prec+1)^(0+128),w
 10411  04EC  3A80               	xorlw	128
 10412  04ED  3C80               	sublw	128
 10413  04EE  1D03               	skipz
 10414  04EF  2CF2               	goto	u6475
 10415  04F0  083C               	movf	sprintf@prec^(0+128),w
 10416  04F1  023E               	subwf	sprintf@c^(0+128),w
 10417  04F2                     u6475:	
 10418  04F2  1803               	skipnc
 10419  04F3  2CF5               	goto	u6471
 10420  04F4  2CF6               	goto	u6470
 10421  04F5                     u6471:	
 10422  04F5  2CFD               	goto	l4208
 10423  04F6                     u6470:	
 10424  04F6                     l4206:	
 10425                           
 10426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1366:    c 
      +                          = (char)prec;
 10427  04F6  1683               	bsf	3,5	;RP0=1, select bank1
 10428  04F7  1303               	bcf	3,6	;RP1=0, select bank1
 10429  04F8  083C               	movf	sprintf@prec^(0+128),w
 10430  04F9  00A0               	movwf	??_sprintf^(0+128)
 10431  04FA  0820               	movf	??_sprintf^(0+128),w
 10432  04FB  00BE               	movwf	sprintf@c^(0+128)
 10433  04FC  2D15               	goto	l4212
 10434  04FD                     l4208:	
 10435  04FD  1683               	bsf	3,5	;RP0=1, select bank1
 10436  04FE  1303               	bcf	3,6	;RP1=0, select bank1
 10437  04FF  083D               	movf	(sprintf@prec+1)^(0+128),w
 10438  0500  3A80               	xorlw	128
 10439  0501  00A0               	movwf	??_sprintf^(0+128)
 10440  0502  3080               	movlw	128
 10441  0503  0220               	subwf	??_sprintf^(0+128),w
 10442  0504  1D03               	skipz
 10443  0505  2D08               	goto	u6485
 10444  0506  083E               	movf	sprintf@c^(0+128),w
 10445  0507  023C               	subwf	sprintf@prec^(0+128),w
 10446  0508                     u6485:	
 10447  0508  1803               	skipnc
 10448  0509  2D0B               	goto	u6481
 10449  050A  2D0C               	goto	u6480
 10450  050B                     u6481:	
 10451  050B  2D15               	goto	l4212
 10452  050C                     u6480:	
 10453  050C                     l4210:	
 10454                           
 10455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
 10456  050C  1683               	bsf	3,5	;RP0=1, select bank1
 10457  050D  1303               	bcf	3,6	;RP1=0, select bank1
 10458  050E  083E               	movf	sprintf@c^(0+128),w
 10459  050F  00A0               	movwf	??_sprintf^(0+128)
 10460  0510  01A1               	clrf	(??_sprintf^(0+128)+1)
 10461  0511  0820               	movf	??_sprintf^(0+128),w
 10462  0512  00BC               	movwf	sprintf@prec^(0+128)
 10463  0513  0821               	movf	(??_sprintf+1)^(0+128),w
 10464  0514  00BD               	movwf	(sprintf@prec+1)^(0+128)
 10465  0515                     l4212:	
 10466                           
 10467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
 10468  0515  1683               	bsf	3,5	;RP0=1, select bank1
 10469  0516  1303               	bcf	3,6	;RP1=0, select bank1
 10470  0517  082C               	movf	sprintf@width^(0+128),w
 10471  0518  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10472  0519  1903               	btfsc	3,2
 10473  051A  2D1C               	goto	u6491
 10474  051B  2D1D               	goto	u6490
 10475  051C                     u6491:	
 10476  051C  2D2F               	goto	l4218
 10477  051D                     u6490:	
 10478  051D                     l4214:	
 10479  051D  3003               	movlw	3
 10480  051E  052A               	andwf	sprintf@flag^(0+128),w
 10481  051F  00A0               	movwf	??_sprintf^(0+128)
 10482  0520  3000               	movlw	0
 10483  0521  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10484  0522  00A1               	movwf	(??_sprintf+1)^(0+128)
 10485  0523  0820               	movf	??_sprintf^(0+128),w
 10486  0524  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10487  0525  1903               	btfsc	3,2
 10488  0526  2D28               	goto	u6501
 10489  0527  2D29               	goto	u6500
 10490  0528                     u6501:	
 10491  0528  2D2F               	goto	l4218
 10492  0529                     u6500:	
 10493  0529                     l4216:	
 10494                           
 10495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
 10496  0529  30FF               	movlw	255
 10497  052A  07AC               	addwf	sprintf@width^(0+128),f
 10498  052B  1803               	skipnc
 10499  052C  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10500  052D  30FF               	movlw	255
 10501  052E  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10502  052F                     l4218:	
 10503                           
 10504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1374:   if(
      +                          flag & 0x4000) {
 10505  052F  1F2B               	btfss	(sprintf@flag+1)^(0+128),6
 10506  0530  2D32               	goto	u6511
 10507  0531  2D33               	goto	u6510
 10508  0532                     u6511:	
 10509  0532  2D4E               	goto	l4226
 10510  0533                     u6510:	
 10511  0533                     l4220:	
 10512                           
 10513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1375:    if
      +                          (width > prec)
 10514  0533  083D               	movf	(sprintf@prec+1)^(0+128),w
 10515  0534  3A80               	xorlw	128
 10516  0535  00A0               	movwf	??_sprintf^(0+128)
 10517  0536  082D               	movf	(sprintf@width+1)^(0+128),w
 10518  0537  3A80               	xorlw	128
 10519  0538  0220               	subwf	??_sprintf^(0+128),w
 10520  0539  1D03               	skipz
 10521  053A  2D3D               	goto	u6525
 10522  053B  082C               	movf	sprintf@width^(0+128),w
 10523  053C  023C               	subwf	sprintf@prec^(0+128),w
 10524  053D                     u6525:	
 10525  053D  1803               	skipnc
 10526  053E  2D40               	goto	u6521
 10527  053F  2D41               	goto	u6520
 10528  0540                     u6521:	
 10529  0540  2D4A               	goto	l4224
 10530  0541                     u6520:	
 10531  0541                     l4222:	
 10532                           
 10533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1376:     w
      +                          idth -= prec;
 10534  0541  1683               	bsf	3,5	;RP0=1, select bank1
 10535  0542  1303               	bcf	3,6	;RP1=0, select bank1
 10536  0543  083C               	movf	sprintf@prec^(0+128),w
 10537  0544  02AC               	subwf	sprintf@width^(0+128),f
 10538  0545  083D               	movf	(sprintf@prec+1)^(0+128),w
 10539  0546  1C03               	skipc
 10540  0547  03AD               	decf	(sprintf@width+1)^(0+128),f
 10541  0548  02AD               	subwf	(sprintf@width+1)^(0+128),f
 10542  0549  2D4E               	goto	l4226
 10543  054A                     l4224:	
 10544                           
 10545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1378:     w
      +                          idth = 0;
 10546  054A  1683               	bsf	3,5	;RP0=1, select bank1
 10547  054B  1303               	bcf	3,6	;RP1=0, select bank1
 10548  054C  01AC               	clrf	sprintf@width^(0+128)
 10549  054D  01AD               	clrf	(sprintf@width+1)^(0+128)
 10550  054E                     l4226:	
 10551                           
 10552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
 10553  054E  082D               	movf	(sprintf@width+1)^(0+128),w
 10554  054F  3A80               	xorlw	128
 10555  0550  3C80               	sublw	128
 10556  0551  1D03               	skipz
 10557  0552  2D55               	goto	u6535
 10558  0553  082C               	movf	sprintf@width^(0+128),w
 10559  0554  023E               	subwf	sprintf@c^(0+128),w
 10560  0555                     u6535:	
 10561  0555  1803               	skipnc
 10562  0556  2D58               	goto	u6531
 10563  0557  2D59               	goto	u6530
 10564  0558                     u6531:	
 10565  0558  2D65               	goto	l4230
 10566  0559                     u6530:	
 10567  0559                     l4228:	
 10568                           
 10569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
 10570  0559  1683               	bsf	3,5	;RP0=1, select bank1
 10571  055A  1303               	bcf	3,6	;RP1=0, select bank1
 10572  055B  083E               	movf	sprintf@c^(0+128),w
 10573  055C  00A0               	movwf	??_sprintf^(0+128)
 10574  055D  01A1               	clrf	(??_sprintf^(0+128)+1)
 10575  055E  0820               	movf	??_sprintf^(0+128),w
 10576  055F  02AC               	subwf	sprintf@width^(0+128),f
 10577  0560  0821               	movf	(??_sprintf+1)^(0+128),w
 10578  0561  1C03               	skipc
 10579  0562  03AD               	decf	(sprintf@width+1)^(0+128),f
 10580  0563  02AD               	subwf	(sprintf@width+1)^(0+128),f
 10581  0564  2D69               	goto	l4232
 10582  0565                     l4230:	
 10583                           
 10584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
 10585  0565  1683               	bsf	3,5	;RP0=1, select bank1
 10586  0566  1303               	bcf	3,6	;RP1=0, select bank1
 10587  0567  01AC               	clrf	sprintf@width^(0+128)
 10588  0568  01AD               	clrf	(sprintf@width+1)^(0+128)
 10589  0569                     l4232:	
 10590                           
 10591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
 10592  0569  082C               	movf	sprintf@width^(0+128),w
 10593  056A  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10594  056B  1903               	btfsc	3,2
 10595  056C  2D6E               	goto	u6541
 10596  056D  2D6F               	goto	u6540
 10597  056E                     u6541:	
 10598  056E  2D86               	goto	l4240
 10599  056F                     u6540:	
 10600  056F                     l4234:	
 10601                           
 10602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
 10603  056F  3020               	movlw	32
 10604  0570  00A0               	movwf	??_sprintf^(0+128)
 10605  0571  083B               	movf	sprintf@sp^(0+128),w
 10606  0572  0084               	movwf	4
 10607  0573  0820               	movf	??_sprintf^(0+128),w
 10608  0574  1383               	bcf	3,7	;select IRP bank0
 10609  0575  0080               	movwf	0
 10610  0576                     l4236:	
 10611  0576  3001               	movlw	1
 10612  0577  00A0               	movwf	??_sprintf^(0+128)
 10613  0578  0820               	movf	??_sprintf^(0+128),w
 10614  0579  07BB               	addwf	sprintf@sp^(0+128),f
 10615  057A                     l4238:	
 10616  057A  30FF               	movlw	255
 10617  057B  07AC               	addwf	sprintf@width^(0+128),f
 10618  057C  1803               	skipnc
 10619  057D  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10620  057E  30FF               	movlw	255
 10621  057F  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10622  0580  082C               	movf	sprintf@width^(0+128),w
 10623  0581  042D               	iorwf	(sprintf@width+1)^(0+128),w
 10624  0582  1D03               	btfss	3,2
 10625  0583  2D85               	goto	u6551
 10626  0584  2D86               	goto	u6550
 10627  0585                     u6551:	
 10628  0585  2D6F               	goto	l4234
 10629  0586                     u6550:	
 10630  0586                     l4240:	
 10631                           
 10632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
 10633  0586  3003               	movlw	3
 10634  0587  052A               	andwf	sprintf@flag^(0+128),w
 10635  0588  00A0               	movwf	??_sprintf^(0+128)
 10636  0589  3000               	movlw	0
 10637  058A  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10638  058B  00A1               	movwf	(??_sprintf+1)^(0+128)
 10639  058C  0820               	movf	??_sprintf^(0+128),w
 10640  058D  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10641  058E  1903               	btfsc	3,2
 10642  058F  2D91               	goto	u6561
 10643  0590  2D92               	goto	u6560
 10644  0591                     u6561:	
 10645  0591  2E0D               	goto	l4252
 10646  0592                     u6560:	
 10647  0592                     l4242:	
 10648                           
 10649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
 10650  0592  302D               	movlw	45
 10651  0593  00A0               	movwf	??_sprintf^(0+128)
 10652  0594  083B               	movf	sprintf@sp^(0+128),w
 10653  0595  0084               	movwf	4
 10654  0596  0820               	movf	??_sprintf^(0+128),w
 10655  0597  1383               	bcf	3,7	;select IRP bank0
 10656  0598  0080               	movwf	0
 10657  0599                     l4244:	
 10658  0599  3001               	movlw	1
 10659  059A  00A0               	movwf	??_sprintf^(0+128)
 10660  059B  0820               	movf	??_sprintf^(0+128),w
 10661  059C  07BB               	addwf	sprintf@sp^(0+128),f
 10662  059D  2E0D               	goto	l4252
 10663  059E                     l4246:	
 10664                           
 10665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned int)prec]) % 10 + '0';
 10666  059E  3000               	movlw	0
 10667  059F  1283               	bcf	3,5	;RP0=0, select bank0
 10668  05A0  1303               	bcf	3,6	;RP1=0, select bank0
 10669  05A1  00AB               	movwf	___llmod@divisor+3
 10670  05A2  3000               	movlw	0
 10671  05A3  00AA               	movwf	___llmod@divisor+2
 10672  05A4  3000               	movlw	0
 10673  05A5  00A9               	movwf	___llmod@divisor+1
 10674  05A6  300A               	movlw	10
 10675  05A7  00A8               	movwf	___llmod@divisor
 10676  05A8  1683               	bsf	3,5	;RP0=1, select bank1
 10677  05A9  1303               	bcf	3,6	;RP1=0, select bank1
 10678  05AA  083C               	movf	sprintf@prec^(0+128),w
 10679  05AB  00A0               	movwf	??_sprintf^(0+128)
 10680  05AC  3001               	movlw	1
 10681  05AD                     u6575:	
 10682  05AD  1003               	clrc
 10683  05AE  0DA0               	rlf	??_sprintf^(0+128),f
 10684  05AF  3EFF               	addlw	-1
 10685  05B0  1D03               	skipz
 10686  05B1  2DAD               	goto	u6575
 10687  05B2  1003               	clrc
 10688  05B3  0D20               	rlf	??_sprintf^(0+128),w
 10689  05B4  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10690  05B5  0084               	movwf	4
 10691  05B6  160A  118A  200A  120A  118A  	fcall	stringdir
 10692  05BB  1283               	bcf	3,5	;RP0=0, select bank0
 10693  05BC  1303               	bcf	3,6	;RP1=0, select bank0
 10694  05BD  00A0               	movwf	___lldiv@divisor
 10695  05BE  160A  118A  200A  120A  118A  	fcall	stringdir
 10696  05C3  00A1               	movwf	___lldiv@divisor+1
 10697  05C4  160A  118A  200A  120A  118A  	fcall	stringdir
 10698  05C9  00A2               	movwf	___lldiv@divisor+2
 10699  05CA  160A  118A  200A  120A  118A  	fcall	stringdir
 10700  05CF  00A3               	movwf	___lldiv@divisor+3
 10701  05D0  1683               	bsf	3,5	;RP0=1, select bank1
 10702  05D1  1303               	bcf	3,6	;RP1=0, select bank1
 10703  05D2  0835               	movf	(sprintf@val+3)^(0+128),w
 10704  05D3  1283               	bcf	3,5	;RP0=0, select bank0
 10705  05D4  1303               	bcf	3,6	;RP1=0, select bank0
 10706  05D5  00A7               	movwf	___lldiv@dividend+3
 10707  05D6  1683               	bsf	3,5	;RP0=1, select bank1
 10708  05D7  1303               	bcf	3,6	;RP1=0, select bank1
 10709  05D8  0834               	movf	(sprintf@val+2)^(0+128),w
 10710  05D9  1283               	bcf	3,5	;RP0=0, select bank0
 10711  05DA  1303               	bcf	3,6	;RP1=0, select bank0
 10712  05DB  00A6               	movwf	___lldiv@dividend+2
 10713  05DC  1683               	bsf	3,5	;RP0=1, select bank1
 10714  05DD  1303               	bcf	3,6	;RP1=0, select bank1
 10715  05DE  0833               	movf	(sprintf@val+1)^(0+128),w
 10716  05DF  1283               	bcf	3,5	;RP0=0, select bank0
 10717  05E0  1303               	bcf	3,6	;RP1=0, select bank0
 10718  05E1  00A5               	movwf	___lldiv@dividend+1
 10719  05E2  1683               	bsf	3,5	;RP0=1, select bank1
 10720  05E3  1303               	bcf	3,6	;RP1=0, select bank1
 10721  05E4  0832               	movf	sprintf@val^(0+128),w
 10722  05E5  1283               	bcf	3,5	;RP0=0, select bank0
 10723  05E6  1303               	bcf	3,6	;RP1=0, select bank0
 10724  05E7  00A4               	movwf	___lldiv@dividend
 10725  05E8  160A  118A  210E  120A  118A  	fcall	___lldiv
 10726  05ED  1283               	bcf	3,5	;RP0=0, select bank0
 10727  05EE  1303               	bcf	3,6	;RP1=0, select bank0
 10728  05EF  0823               	movf	?___lldiv+3,w
 10729  05F0  00AF               	movwf	___llmod@dividend+3
 10730  05F1  0822               	movf	?___lldiv+2,w
 10731  05F2  00AE               	movwf	___llmod@dividend+2
 10732  05F3  0821               	movf	?___lldiv+1,w
 10733  05F4  00AD               	movwf	___llmod@dividend+1
 10734  05F5  0820               	movf	?___lldiv,w
 10735  05F6  00AC               	movwf	___llmod@dividend
 10736  05F7  160A  158A  2751  120A  118A  	fcall	___llmod
 10737  05FC  1283               	bcf	3,5	;RP0=0, select bank0
 10738  05FD  1303               	bcf	3,6	;RP1=0, select bank0
 10739  05FE  0828               	movf	?___llmod,w
 10740  05FF  3E30               	addlw	48
 10741  0600  1683               	bsf	3,5	;RP0=1, select bank1
 10742  0601  1303               	bcf	3,6	;RP1=0, select bank1
 10743  0602  00A1               	movwf	(??_sprintf+1)^(0+128)
 10744  0603  0821               	movf	(??_sprintf+1)^(0+128),w
 10745  0604  00BE               	movwf	sprintf@c^(0+128)
 10746  0605                     l4248:	
 10747                           
 10748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
 10749  0605  083E               	movf	sprintf@c^(0+128),w
 10750  0606  00A0               	movwf	??_sprintf^(0+128)
 10751  0607  083B               	movf	sprintf@sp^(0+128),w
 10752  0608  0084               	movwf	4
 10753  0609  0820               	movf	??_sprintf^(0+128),w
 10754  060A  1383               	bcf	3,7	;select IRP bank0
 10755  060B  0080               	movwf	0
 10756  060C  2D99               	goto	l4244
 10757  060D                     l4252:	
 10758                           
 10759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
 10760  060D  30FF               	movlw	255
 10761  060E  07BC               	addwf	sprintf@prec^(0+128),f
 10762  060F  1803               	skipnc
 10763  0610  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10764  0611  30FF               	movlw	255
 10765  0612  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10766  0613  0A3C               	incf	sprintf@prec^(0+128),w
 10767  0614  1D03               	skipz
 10768  0615  2E1A               	goto	u6581
 10769  0616  0A3D               	incf	(sprintf@prec+1)^(0+128),w
 10770  0617  1D03               	btfss	3,2
 10771  0618  2E1A               	goto	u6581
 10772  0619  2E1B               	goto	u6580
 10773  061A                     u6581:	
 10774  061A  2D9E               	goto	l4246
 10775  061B                     u6580:	
 10776  061B                     l4254:	
 10777                           
 10778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
 10779  061B  3001               	movlw	1
 10780  061C  1283               	bcf	3,5	;RP0=0, select bank0
 10781  061D  1303               	bcf	3,6	;RP1=0, select bank0
 10782  061E  07E0               	addwf	sprintf@f,f
 10783  061F  30FF               	movlw	-1
 10784  0620  0760               	addwf	sprintf@f,w
 10785  0621  0084               	movwf	4
 10786  0622  160A  118A  200A  120A  118A  	fcall	stringdir
 10787  0627  1683               	bsf	3,5	;RP0=1, select bank1
 10788  0628  1303               	bcf	3,6	;RP1=0, select bank1
 10789  0629  00A0               	movwf	??_sprintf^(0+128)
 10790  062A  0820               	movf	??_sprintf^(0+128),w
 10791  062B  00BE               	movwf	sprintf@c^(0+128)
 10792  062C  083E               	movf	sprintf@c^(0+128),w
 10793  062D  1D03               	btfss	3,2
 10794  062E  2E30               	goto	u6591
 10795  062F  2E33               	goto	u6590
 10796  0630                     u6591:	
 10797  0630  120A  158A  2A95   	goto	l3976
 10798  0633                     u6590:	
 10799  0633                     l4256:	
 10800                           
 10801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
 10802  0633  083B               	movf	sprintf@sp^(0+128),w
 10803  0634  0084               	movwf	4
 10804  0635  1383               	bcf	3,7	;select IRP bank0
 10805  0636  0180               	clrf	0
 10806  0637                     l446:	
 10807  0637  0008               	return
 10808  0638                     __end_of_sprintf:	


Data Sizes:
    Strings     56
    Constant    118
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     76      78
    BANK1            80     31      58
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_2(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> datos(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> datos(BANK1[20]), STR_1(CODE[21]), 

    print_LCD_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[16]), datos(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_print_LCD_String
    _sprintf->___llmod
    _sprintf->___lltoft
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___bmul->___awmod
    ___bmul->___lwdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    _print_LCD_String->_print_LCD_Char
    _print_LCD_Char->_PUERTO
    _conversion->___awtoft
    ___ftmul->___awmod
    ___ftmul->___awtoft
    ___ftmul->___lwdiv
    ___awtoft->___ftpack
    _Write_USART_String->_Write_USART
    _USART_Init->___aldiv
    _LCD_clear->_comandosLCD
    _LCD_Set_Cursor->_comandosLCD
    _LCD_Init->_comandosLCD
    _comandosLCD->_PUERTO

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___bmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _conversion->___ftmul
    ___ftmul->___bmul
    ___awtoft->___ftpack
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   50827
                                             73 BANK0      3     3      0
                           _LCD_Init
                     _LCD_Set_Cursor
                          _LCD_clear
                         _USART_Init
                        _Write_USART
                 _Write_USART_String
                          _configADC
                           _configIO
                         _conversion
                             _lecADC
                   _print_LCD_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    36      9   40283
                                             64 BANK0      9     0      9
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     6      3    8252
                                             29 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1355
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              16    13      3    6643
                                             29 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     477
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     480
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                              9 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              3 COMMON     6     0      6
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              3 COMMON     6     0      6
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1382
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2505
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     752
                                              9 COMMON     1     1      0
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             38 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4049
                                             58 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3823
                                             45 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               6     0      6     560
                                              3 COMMON     6     0      6
 ---------------------------------------------------------------------------------
 (1) _print_LCD_String                                     7     5      2     539
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                     _print_LCD_Char
 ---------------------------------------------------------------------------------
 (2) _print_LCD_Char                                       2     2      0     279
                                              4 COMMON     2     2      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (1) _lecADC                                               3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           6     3      3    7343
                                             29 BANK0      6     3      3
                           ___awtoft
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4776
                                             13 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2536
                                              8 COMMON     2     2      0
                                              3 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2338
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     218
                                              4 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          18    14      4     993
                                              8 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     705
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0     279
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     601
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     527
                                              7 COMMON     2     2      0
                             _PUERTO
                        _comandosLCD
 ---------------------------------------------------------------------------------
 (2) _comandosLCD                                          3     3      0     279
                                              4 COMMON     3     3      0
                             _PUERTO
 ---------------------------------------------------------------------------------
 (3) _PUERTO                                               1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (6) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _PUERTO
     _comandosLCD
       _PUERTO
   _LCD_Set_Cursor
     _comandosLCD
       _PUERTO
   _LCD_clear
     _comandosLCD
       _PUERTO
   _USART_Init
     ___aldiv
   _Write_USART
   _Write_USART_String
     _Write_USART
   _configADC
   _configIO
   _conversion
     ___awtoft
       ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
   _lecADC
   _print_LCD_String
     _print_LCD_Char
       _PUERTO
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      93       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1F      3A       7       72.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      93      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 12 00:40:56 2020

                          pc 0002               ___bmul@product 002B                  __CFG_CP$OFF 0000  
                         l30 1ED8                           l31 1EDB                           l40 1EFD  
                         l32 1EE1                           l41 1EFE                           l33 1EE2  
                         l42 1F04                           l34 1EE8                           l43 1F05  
                         l35 1EE9                           l27 07FC                           l44 1F0B  
                         l36 1EEF                           l52 1C85                           l37 1EF0  
                         l61 1D7A                           l46 1F0C                           l38 1EF6  
                         l39 1EF7                           l55 1DFC                           l49 1D0A  
                         l67 1F50                 ___awdiv@sign 0026                           fsr 0004  
        ___wmul@multiplicand 0075                 ___ftadd@exp1 0059                 ___ftadd@exp2 0058  
       __size_of_Write_USART 000C                 ___ftadd@sign 0057                          l230 1CA1  
                        l151 1CD3                          l233 1CAB                          l154 1DD0  
                        l227 1523                          l180 17EF                          l181 1710  
                        l190 1785                          l182 171D                          l239 1DA5  
                        l175 1C9F                          l191 1792                          l183 172A  
                        l192 179F                          l184 1737                          l416 02CD  
                        l521 1301                          l193 17AC                          l185 1744  
                        l409 0289                          l186 1751                          l450 1D3C  
                        l354 0FFF                 comandosLCD@x 0076                          l531 1389  
                        l195 17FF                          l187 175E                          l179 1705  
                        l347 07E0                          l188 176B                          l700 09AA  
                        l452 1D54                          l197 17FD                          l189 1778  
                        l701 09AF                          l710 0A20                          l446 0637  
                        l376 0B69                          l633 11DE                          l652 0828  
                        l660 0917                          l476 1CEA                          l821 1FA6  
                        l486 1175                          l902 1ECE                          l646 1FFF  
                        l735 1446                          l656 0954                          l736 13B8  
                        l912 1CBD                          l753 1E94                          l770 10C7  
                        l746 1439                          l675 1260                          l667 0947  
                        l659 0904                          l739 1409                          l780 12EC  
                        l829 1E5C                          l686 123A                          l687 1244  
                        l679 121F                          l759 1608                          l688 1260  
                        l696 0A8A                          l776 1D2F                          l699 09A0  
                        l787 12CF                          l892 110D                          _RB0 0030  
                        _RB1 0031                          _RB2 0032                          _RB3 0033  
                        _RB4 0034                          _RB5 0035                          _RE0 0048  
                        _RB6 0036                          _RE1 0049                          _RB7 0037  
               __CFG_CPD$OFF 0000                          _ISR 1DFD                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0079  __size_of_Write_USART_String 002B  
               __CFG_LVP$OFF 0000                         ?_ISR 0070               _LCD_Set_Cursor 1D55  
                       l3030 1716                         l3040 1757                         l3032 1723  
                       l4000 0B14                         l3050 1798                         l3042 1764  
                       l3034 1730                         l3026 1704                         l2330 1FA7  
                       l4010 0B51                         l4002 0B1A                         l3052 17A5  
                       l3044 1771                         l3036 173D                         l3028 170B  
                       l2500 10E4                         l2340 1FB7                         l2332 1FA8  
                       l4100 0139                         l4020 0B8F                         l4004 0B1F  
                       l4012 0B63                         l3054 17B2                         l3046 177E  
                       l3038 174A                         l3062 17BB                         l2502 10F5  
                       l2510 1109                         l2350 1FD0                         l2342 1FBC  
                       l2334 1FAC                         l4110 019B                         l4030 0BB4  
                       l4022 0B9D                         l4014 0B67                         l4006 0B34  
                       l3064 17F0                         l3056 17B9                         l3048 178B  
                       l2280 1CE2                         l2272 1CD7                         l2504 10FB  
                       l2520 1EA5                         l2352 1FD4                         l2344 1FC2  
                       l2360 1FF1                         l2336 1FB1                         l4112 01A7  
                       l4120 01BC                         l4104 0170                         l4040 0BED  
                       l4032 0BC9                         l4024 0BA1                         l4008 0B4B  
                       l3090 1D8E                         l3074 17FE                         l3066 17F5  
                       l2282 1CE9                         l2274 1CD8                         l2506 10FC  
                       l2530 1EC4                         l2522 1EA9                         l2514 1E95  
                       l2362 1FF6                         l2354 1FDE                         l2346 1FC5  
                       l2338 1FB3                         l4210 050C                         l4202 04E1  
                       l4130 023E                         l4122 01C9                         l4114 01AE  
                       l4106 017A                         l4050 0C52                         l4042 0C12  
                       l4034 0BDE                         l4026 0BA5                         l4018 0B6B  
                       l3092 1D92                         l3500 1200                         l3068 17F8  
                       l2700 084C                         l2276 1CDC                         l2508 1103  
                       l2524 1EAD                         l2516 1E9B                         l2532 1ECA  
                       l2364 1FFB                         l2356 1FE4                         l2348 1FCC  
                       l4220 0533                         l4212 0515                         l4204 04EB  
                       l4140 02A4                         l4132 027D                         l4124 01D7  
                       l4116 01B7                         l4108 0195                         l4060 0CC8  
                       l4052 0C58                         l4044 0C18                         l4036 0BE2  
                       l4028 0BB0                         l4300 16E1                         l3086 1D7B  
                       l3510 1230                         l3502 1207                         l2710 08A1  
                       l2278 1CE0                         l2526 1EB7                         l2518 1E9E  
                       l2630 1CAD                         l2358 1FEB                         l4230 0565  
                       l4222 0541                         l4214 051D                         l4206 04F6  
                       l4150 02DB                         l4142 02B1                         l4134 0291  
                       l4126 01DE                         l4070 0021                         l4062 0CDF  
                       l4054 0C71                         l4046 0C2B                         l4038 0BE6  
                       l4302 16E8                         _ADC1 006C                         l3088 1D7D  
                       l3520 125F                         l3512 1234                         l3504 120D  
                       l3600 09A1                         l2720 08E1                         l2712 08A3  
                       l2528 1EBD                         l2632 1CAE                         l4240 0586  
                       l4232 0569                         l4224 054A                         l4216 0529  
                       l4208 04FD                         l4160 03A6                         l4152 02E2  
                       l4144 02C0                         l4136 029A                         l4128 01E3  
                       l4080 0078                         l4072 002A                         l4056 0CAA  
                       l4048 0C4E                         l4064 0CE7                         l4304 16F1  
                       _ADC2 00C5                         l3530 1EED                         l3522 1ED0  
                       l3514 123E                         l3506 1217                         l3610 09B6  
                       l3602 09A5                         l2722 0903                         l2714 08A8  
                       l2706 0865                         l2642 138A                         l2490 10CC  
                       l2634 1CB4                         l4242 0592                         l4234 056F  
                       l4226 054E                         l4218 052F                         l4170 045B  
                       l4162 03E5                         l4154 02E6                         l4146 02C7  
                       l4138 029E                         l4082 0080                         l4074 0049  
                       l4090 00BA                         l4066 0CF6                         l4058 0CBF  
                       l3532 1EF4                         l3524 1ED4                         l2564 1CA1  
                       l3516 1246                         l3508 1226                         l3700 15ED  
                       l3620 09E8                         l3612 09C3                         l3604 09A9  
                       l2740 093C                         l2732 0923                         l2724 0911  
                       l2716 08AC                         l2708 0899                         l2660 13D0  
                       l2644 139D                         l2492 10D2                         l2636 1CBA  
                       l3540 1176                         l4244 0599                         l4252 060D  
                       l4236 0576                         l4228 0559                         l4180 0481  
                       l4172 045F                         l4164 03F1                         l4156 02FE  
                       l4148 02D6                         l4092 0135                         l4076 0058  
                       l4068 0D2F                         l3534 1EFB                         l3526 1EDF  
                       l2566 1CA7                         l3518 125A                         l3710 07EE  
                       l3630 0A0E                         l3614 09CD                         l3622 09EF  
                       l3606 09AE                         l2910 12E4                         l2750 1D36  
                       l2742 094C                         l2726 091B                         l2734 0935  
                       l2718 08B5                         l2670 13FB                         l2662 13D9  
                       l2654 13B9                         l2494 10D5                         l2638 1CBC  
                       l3550 1188                         l3542 1179                         l4246 059E  
                       l4238 057A                         l4190 04A2                         l4182 0485  
                       l4174 0465                         l4158 034B                         l4166 044C  
                       l4094 0137                         l4086 0098                         l4078 006F  
                       l4254 061B                         l4270 1613                         l3536 1F02  
                       l3528 1EE6                         l3720 1CEF                         l3712 07F1  
                       l3704 07E2                         l2840 1E6E                         l3640 0A48  
                       l3632 0A1A                         l3624 09F5                         l3616 09D3  
                       l3608 09B0                         l2904 12C4                         l3800 1130  
                       l2752 1D43                         l2680 1415                         l2672 1403  
                       l2664 13E2                         l2656 13BF                         l2648 13A6  
                       l2496 10DC                         l2488 10C8                         l3560 119C  
                       l3552 118D                         l3544 117D                         l4248 0605  
                       l4192 04A8                         l4184 0489                         l4168 0454  
                       l4088 00B3                         l4176 046C                         l4256 0633  
                       l4280 1644                         l4272 1622                         l3538 1F09  
                       l3730 1D01                         l3722 1CF5                         l3490 11DF  
                       l3714 07F4                         l3706 07E5                         l2850 1E91  
                       l2842 1E72                         l3650 0A6F                         l3642 0A49  
                       l3634 0A24                         l3626 09FF                         l3618 09DC  
                       l2906 12D4                         l3810 115E                         l3802 1134  
                       l2754 1D4A                         l2746 1D30                         l2690 143E  
                       l2674 140D                         l2682 1427                         l2666 13F0  
                       l2658 13CE                         l2498 10E0                         l3570 11C2  
                       l3562 11A3                         l3554 1191                         l3546 1182  
                       l4186 0494                         l4178 047D                         l4290 16BF  
                       l4282 165E                         l4274 1627                         l4266 1609  
                       l3724 1CF8                         l3820 12EE                         l3492 11E4  
                       l3660 153E                         l3716 07F7                         l3708 07EB  
                       l2852 1E93                         l2844 1E7F                         l2836 1E5D  
                       l2860 10C7                         l3644 0A59                         l3636 0A34  
                       l3628 0A05                         l2908 12D9                         l3812 1167  
                       l3804 113D                         l3900 1E2F                         l2756 1D50  
                       l2748 1D32                         l2668 13FA                         l3732 063B  
                       l3580 11DA                         l3572 11C3                         l3564 11A7  
                       l3556 1193                         l3548 1184                         l4188 049A  
                       l4356 0B81                         l4292 16C5                         l4284 1676  
                       l4276 162C                         l4268 160E                         l3726 1CFB  
                       l3718 1CEC                         l3910 1DD1                         l3830 131C  
                       l3822 12F4                         l3494 11EB                         l3670 1584  
                       l3662 154F                         l3654 1524                         l4358 17C3  
                       l2846 1E81                         l2838 1E61                         l3646 0A5D  
                       l3638 0A38                         l3590 0984                         l3806 114F  
                       l3814 116D                         l3902 1E3C                         l2694 0829  
                       l3750 07AD                         l3734 0641                         l3742 071E  
                       l3574 11CA                         l3566 11AB                         l3558 1199  
                       l4198 04AA                         l4294 16CB                         l4286 167F  
                       l4278 1637                         l3728 1CFE                         l3920 1DF0  
                       l3912 1DD5                         l3840 1341                         l3832 1324  
                       l3824 1305                         l3680 1599                         l3672 1585  
                       l3656 1537                         l2848 1E83                         l2856 10BE  
                       l3648 0A6D                         l3584 0955                         l2880 128F  
                       l2872 1261                         l3808 115D                         l3904 1E44  
                       l2696 0843                         l2688 142E                         l3744 0724  
                       l3736 0704                         l3568 11BC                         l3576 11D0  
                       l3760 0D55                         l4296 16D0                         l4288 16B6  
                       l3922 1DF6                         l3914 1DDB                         l3930 1D69  
                       l3842 1353                         l3834 1327                         l3850 1371  
                       l3826 1310                         l3818 12ED                         l3498 11F2  
                       l3690 15C3                         l3682 15A9                         l3674 158B  
                       l3666 1556                         l2858 10C5                         l3594 098B  
                       l3586 0974                         l2890 12A3                         l2882 1290  
                       l2874 1274                         l3746 0793                         l3578 11D5  
                       l3754 0D48                         l4298 16D8                         l3916 1DE4  
                       l3932 1D6F                         l3924 1D58                         l3908 1C7F  
                       l3852 1376                         l3844 1361                         l3836 1334  
                       l3828 1314                         l3860 0803                         l3692 15C7  
                       l3684 15B1                         l3676 1591                         l3668 1583  
                       l3940 1F2C                         l3596 0990                         l3588 097A  
                       l2884 1296                         l3772 0E86                         l3756 0D4C  
                       l3918 1DEA                         l3934 1D74                         l3926 1D5D  
                       l3854 1381                         l3846 1362                         l3838 1338  
                       l3950 1504                         l2990 1CCC                         l3862 0807  
                       l3694 15D7                         l3686 15B9                         l3678 1595  
                       l3942 1F32                         l3598 0996                         l3870 1D0B  
                       l2886 129D                         l2878 127D                         l3790 0FDF  
                       l3766 0E13                         l3758 0D4E                         l3928 1D62  
                       l3848 136B                         l3960 1519                         l3952 1507  
                       l3944 1447                         l2992 1CCF                         l3864 080C  
                       l3696 15DF                         l3688 15BF                         l3936 1F0D  
                       l3872 1D14                         l2896 12AB                         l2888 129F  
                       l3880 1F5B                         l3784 0F6C                         l3768 0E1A  
                       l3776 0EA7                         l3962 151C                         l3954 1511  
                       l3946 14A2                         l2994 1CD2                         l2986 1CBE  
                       l3866 080E                         l3858 0800                         l3698 15E7  
                       l3970 1DA9                         l3938 1F10                         l3874 1D16  
                       l2898 12BD                         l3794 110E                         l3890 1F8F  
                       l3882 1F5E                         l3786 0F73                         l3778 0EAE  
                       l3964 151D                         l3956 1515                         l3948 14AB  
                       l2996 1C96                         l2988 1CCB                         l3796 1120  
                       l3892 1F98                         l3884 1F6B                         l3980 0AA2  
                       l3966 1520                         l3958 1516                         l2998 1C9C  
                       l3798 1123                         l3886 1F6F                         l3894 1F9E  
                       l3878 1F51                         l3990 0AD6                         l3982 0AA7  
                       l3974 0A8E                         l3888 1F81                         l3992 0AED  
                       l3984 0AAB                         l3976 0A95                         l3898 1E2A  
                       l3994 0AF3                         l3986 0ABD                         l3978 0A9B  
                       l3988 0AC1                         l3996 0B03                         l3998 0B11  
                       STR_1 1086                         STR_2 109B                         STR_3 10AE  
                       _BRGH 04C2                         _CREN 00C4                         u4000 1274  
                       u4001 1273                         u4010 1288                         u4020 12A3  
                       u4021 12A2                         u4030 12AA                         u3310 1109  
                       u4031 12A9                         u4015 1284                         u3311 1108  
                       u5000 123E                         u3320 1E9B                         u5001 123D  
                       u3305 10FD                         u3321 1E9A                         u5010 1251  
                       u4050 12BC                         u3250 10D2                         u4051 12BB  
                       u3251 10D1                         u5100 1F09                         u5020 125F  
                       u4060 12C3                         u3340 1EAD                         u5101 1F08  
                       u5021 125E                         u4061 12C2                         u4045 12AC  
                       u3341 1EAC                         u5030 1ED4                         u3510 13F0  
                       u3270 10E4                         u3350 1EB7                         u5110 117D  
                       u5031 1ED3                         u5015 124D                         u3511 13EF  
                       u3271 10E3                         u3351 1EB6                         u3335 1E9F  
                       u5111 117C                         u5040 1EDF                         u4320 17FC  
                       u4080 12D4                         u3600 143E                         u5200 11D5  
                       u5120 1188                         u2800 1FC2                         u5041 1EDE  
                       u6001 1482                         u4321 17FB                         u4081 12D3  
                       u3601 143D                         u3505 13DB                         u3265 10D6  
                       u5201 11D4                         u5121 1187                         u2801 1FC1  
                       u5050 1EE6                         u6010 14AB                         u6002 1483  
                       u4330 1DA5                         u5210 0974                         u4090 12D9  
                       u3610 0843                         u3530 1409                         u3290 10F5  
                       u3370 1ECA                         u5130 1199                         u5051 1EE5  
                       u6011 14AA                         u6003 1488                         u4331 1DA4  
                       u5211 0973                         u4091 12D8                         u4075 12C6  
                       u3611 0842                         u3531 1408                         u3515 13EC  
                       u3291 10F4                         u3371 1EC9                         u3355 1EB3  
                       u5131 1198                         u5060 1EED                         u6020 14B9  
                       u6004 1489                         u3380 1CA7                         u5220 097A  
                       u3700 093B                         u3620 0864                         u3540 140D  
                       u2660 1CDC                         u3460 1CB4                         u2820 1FD4  
                       u6100 0B62                         u5061 1EEC                         u6005 148E  
                       u3381 1CA6                         u5221 0979                         u3701 093A  
                       u3621 0863                         u3541 140C                         u3525 13FC  
                       u2661 1CDB                         u3285 10E5                         u3365 1EBE  
                       u3461 1CB3                         u2821 1FD3                         u6101 0B61  
                       u5070 1EF4                         u6030 14D2                         u6006 148F  
                       u5310 09D3                         u5230 0984                         u3550 1414  
                       u2670 1CE9                         u3470 1CBA                         u5150 11AB  
                       u2830 1FDE                         u6110 0B9D                         u5071 1EF3  
                       u5311 09D2                         u5231 0983                         u3551 1413  
                       u2671 1CE8                         u3295 10F1                         u3471 1CB9  
                       u5151 11AA                         u2831 1FDD                         u2815 1FC6  
                       u6111 0B9A                         u5080 1EFB                         u5400 0A20  
                       u5320 09DB                         u5240 0990                         u3720 094C  
                       u3640 08E1                         u3480 139D                         u6200 0021  
                       u6120 0BA1                         u5081 1EFA                         u6041 14E4  
                       u6025 14B4                         u5401 0A1F                         u5321 09DA  
                       u5305 09C4                         u5241 098F                         u3721 094B  
                       u3641 08E0                         u3481 139C                         u5145 119D  
                       u6201 0D3F                         u6121 0BA0                         u5090 1F02  
                       u6050 1511                         u6042 14E5                         u5410 0A24  
                       u5250 0996                         u3730 1D36                         u3650 0917  
                       u3570 1426                         u3490 13B7                         u5170 11BC  
                       u2850 1FF1                         u6210 002A                         u6130 0BC9  
                       u5091 1F01                         u6051 1510                         u6043 14EA  
                       u6035 14CD                         u5411 0A23                         u5251 0995  
                       u3731 1D35                         u3715 093E                         u3651 0916  
                       u3635 08AE                         u3571 1425                         u3491 13B6  
                       u5171 11BB                         u2851 1FF0                         u2835 1FDA  
                       u6211 0029                         u6131 0BC8                         u6044 14EB  
                       u5420 0A38                         u5340 09EE                         u5260 09A0  
                       u3660 091B                         u3580 142D                         u2860 1FF6  
                       u2780 1FAC                         u6300 01C9                         u6220 0049  
                       u6140 0BED                         u6060 0A9B                         u6045 14F0  
                       u5501 15A2                         u5421 0A37                         u5341 09ED  
                       u5261 099F                         u3661 091A                         u3645 08DD  
                       u3581 142C                         u3565 1416                         u5165 11AC  
                       u2861 1FF5                         u2845 1FE5                         u2781 1FAB  
                       u6301 01C8                         u6221 0048                         u6205 0D3A  
                       u6141 0BEC                         u6061 0A9A                         u6046 14F1  
                       u5502 15A9                         u5350 09F5                         u5270 09A9  
                       u3670 0922                         u5190 11D0                         u2790 1FB7  
                       u6310 01D7                         u6230 0058                         u6150 0C01  
                       u6070 0ABD                         u5431 0A52                         u5351 09F4  
                       u5335 09DD                         u5271 09A8                         u3671 0921  
                       u5191 11CF                         u5175 11B8                         u2791 1FB6  
                       u6311 01D6                         u6231 0057                         u6071 0ABC  
                       u5440 0A5D                         u5432 0A59                         u5280 09AE  
                       u3760 1D50                         u5600 0724                         u6400 046B  
                       u6240 006F                         u6160 0C52                         u6080 0B03  
                       u5441 0A5C                         u5281 09AD                         u3761 1D4F  
                       u3745 1D3D                         u5601 0723                         u5185 11C4  
                       u6401 046A                         u6305 01C5                         u6241 006E  
                       u6161 0C51                         u6081 0B02                         u5530 15BF  
                       u5450 1537                         u5370 0A05                         u5290 09C3  
                       u3690 0934                         u5610 0D4C                         u6410 0485  
                       u6330 0290                         u6170 0CBF                         u6090 0B11  
                       u5531 15BE                         u5515 15AA                         u5451 1536  
                       u5371 0A04                         u5291 09C2                         u3755 1D44  
                       u3691 0933                         u3595 1430                         u5611 0D4B  
                       u6411 0484                         u6331 028F                         u6235 0054  
                       u6171 0CBE                         u6155 0BFC                         u6091 0B10  
                       u5540 15C7                         u5460 154F                         u5380 0A0D  
                       u5700 114F                         u5620 0D55                         u6500 0529  
                       u6420 049A                         u6340 02B1                         u6260 016F  
                       u6180 0CDF                         _RCIF 0065                         u5541 15C6  
                       u5525 15B2                         u5461 154E                         u5381 0A0C  
                       u5365 09F6                         u5701 114E                         u3685 0924  
                       u5621 0D54                         u6501 0528                         u6421 0499  
                       u6341 02B0                         u6325 01E6                         u6261 016E  
                       u6181 0CDE                         u4910 11E4                         u5470 1566  
                       u3950 1E61                         u5630 0E1A                         u6510 0533  
                       u6430 04A2                         u6350 02C0                         u6270 017A  
                       u6190 0CF6                         u4911 11E3                         u5551 15D0  
                       u3951 1E60                         u5631 0E19                         u6511 0532  
                       u6431 04A1                         u6351 02BF                         u6271 0179  
                       u6255 013C                         u6191 0CF5                         u4920 11EB  
                       u5552 15D7                         u5480 1578                         u3960 1E72  
                       u5720 116D                         u5640 0EAE                         u6520 0541  
                       u6360 02DB                         u6280 0195                         u4921 11EA  
                       u3961 1E71                         u5721 116C                         u5705 114B  
                       u5641 0EAD                         u6521 0540                         u6361 02DA  
                       u6345 02AD                         u6281 0194                         u6265 016B  
                       u5810 1371                         u5730 12F4                         u5490 1599  
                       u3970 1E91                         u5650 0F73                         u6530 0559  
                       u6450 04E0                         u6290 01A7                         u5811 1370  
                       u5731 12F3                         u5491 1598                         u5475 1562  
                       u3971 1E90                         u5395 0A0F                         u5715 115F  
                       u5651 0F72                         u6531 0558                         u6451 04DF  
                       u6355 02BC                         u6291 01A6                         u6195 0CF2  
                       u5820 1376                         u5740 1305                         u4940 1206  
                       u5580 15ED                         u3980 10C5                         u5660 1120  
                       u5900 1F9E                         u6540 056F                         u6460 04EB  
                       u5821 1375                         u5805 1363                         u5741 1304  
                       u4941 1205                         u5581 15EC                         u5565 15D8  
                       u5485 1574                         u3981 10C4                         u5661 111F  
                       u5901 1F9D                         u6541 056E                         u6525 053D  
                       u6461 04EA                         u6445 04AD                         u5750 1324  
                       u5830 0807                         u5590 0641                         u6550 0586  
                       u6470 04F6                         u6390 0453                         u5751 1323  
                       u4935 11F9                         u5831 0806                         u5575 15E0  
                       u3975 1E8D                         u5591 0640                         u6551 0585  
                       u6535 0555                         u6471 04F5                         u6455 04DC  
                       u6391 0452                         u6375 034E                         u6607 16F9  
                       u4960 1225                         u5840 1D14                         u5680 1134  
                       u5920 1E44                         u6560 0592                         u6480 050C  
                       u4961 1224                         u6617 07F9                         u5841 1D13  
                       u5681 1133                         u5921 1E43                         u6561 0591  
                       u6481 050B                         u6385 03F4                         u5930 1D5D  
                       u5770 1338                         u5850 1F5B                         u6490 051D  
                       u5931 1D5C                         u5771 1337                         u4955 1218  
                       u6627 17F2                         u5675 1125                         u5851 1F5A  
                       u5915 1E30                         u6491 051C                         u6475 04F2  
                       u5940 1D6F                         u4980 1234                         u6580 061B  
                       u6637 1DDF                         u5941 1D6E                         u5765 1329  
                       u4981 1233                         u6581 061A                         u6485 0508  
                       u5790 1353                         u4990 123A                         u5950 1F1A  
                       u5870 1F6F                         u6590 0633                         u6647 1D05  
                       u5791 1352                         u4991 1239                         u4975 1229  
                       u5695 1136                         u5871 1F6E                         u6591 0630  
                       u6575 05AD                         u5960 1F3E                         u5880 1F81  
                       u5785 133A                         u5881 1F80                         u5865 1F60  
                       u5970 1F50                         u5795 134F                         u5971 1F4F  
                       u5980 1457                         u5885 1F7D                         u5990 1470  
                       u5895 1F90                         u5985 1452                         u5995 146B  
                       _SPEN 00C7                         _TRMT 04C1                         _TXEN 04C5  
                       _SYNC 04C4                 __CFG_WRT$OFF 0000                         _main 1609  
               ___ftpack@arg 0073                 ___ftpack@exp 0076                         btemp 007E  
                       start 000C                __CFG_IESO$OFF 0000           __size_of_LCD_clear 0007  
               _sprintf$1067 00A6            ___bmul@multiplier 002C                 ___ftmul@cntr 003B  
               ___ftmul@sign 003C                        ??_ISR 0070                 ___fttol@exp1 0053  
               ___fttol@lval 004F             __end_of_LCD_Init 1DFD              __end_of___aldiv 138A  
          print_LCD_String@a 0076            print_LCD_String@i 0078                        ?_main 0070  
            __end_of___awdiv 11DF              __end_of___ftadd 0A8B                __CFG_WDTE$OFF 0000  
            __end_of___awmod 2000              __end_of___ftneg 10C8                        _ANSEL 0188  
            __end_of___lldiv 1176              __end_of___ftmul 1609              ___awdiv@divisor 0020  
            __end_of___llmod 1FA7              __end_of___ftsub 1D30              __end_of___fttol 12ED  
            __end_of___lwdiv 110E                        i1l140 1E23                        i1l242 1C86  
                      i1l245 1C8D              __end_of___lwmod 1ECF              ___awdiv@counter 0025  
                      _RCREG 001A                        _SPBRG 0099                        _PORTB 0006  
                      _PORTE 0009                        _TRISA 0085                        _TRISB 0086  
                      _TRISE 0089                        _TXREG 0019                 ___lltoft@exp 0079  
             __CFG_FCMEN$OFF 0000       __end_of_LCD_Set_Cursor 1D7B                        _Volt1 00C2  
                      _Volt2 00BF                ___awtoft@sign 0026                        _datos 00C6  
            __end_of_dpowers 1086                        _scale 0D45              __end_of_isdigit 1CBE  
              ___ftpack@sign 0077             ??_print_LCD_Char 0074                  conversion@b 0042  
             __CFG_BOREN$OFF 0000                        pclath 000A                        status 0003  
                      wtemp0 007E              __end_of_sprintf 0638                  ?_USART_Init 0028  
             __CFG_MCLRE$OFF 0000              __initialization 000F                   _Read_USART 1C86  
               __end_of_main 1703                       ??_main 0069                ___fttol@sign1 004E  
       __size_of__tdiv_to_l_ 00BD            __end_of_LCD_clear 1C86              ?_LCD_Set_Cursor 0077  
                     _ADCON1 009F             ___llmod@dividend 002C                       ?_scale 003D  
                     _ADRESH 001E             ___awdiv@dividend 0022     __end_of_print_LCD_String 1F51  
           __end_of___awtoft 0829             __end_of___ftpack 1261                       _ANSELH 0189  
           __end_of___lltoft 1E5D                       i1l3390 1E04                       i1l3392 1E0C  
                     i1l3394 1E12                       i1l3386 1DFD                       i1l3396 1E19  
                     i1l3388 1E03                       i1l3398 1E1F                       i1l2980 1C86  
                     i1l2982 1C8C                       u423_20 1C8C                       u423_21 1C8B  
                     u490_20 1E1F                       u490_21 1E1E                       u488_20 1E03  
                     u488_21 1E02                       u489_20 1E12                       u489_21 1E11  
                     _PUERTO 1ECF                       _TRISC6 043E                       _TRISC7 043F  
             __CFG_PWRTE$OFF 0000         __size_of_comandosLCD 0020             __end_of__powers_ 1037  
           __end_of_configIO 1CD4                       ___bmul 1CD4                       ___ftge 1E5D  
                  ??___aldiv 0073                       ___wmul 1D30                    ??___awdiv 0024  
                     _lecADC 1703                    ??___ftadd 0053                    ??___awmod 0077  
                  ??___ftneg 0076                    ??___lldiv 0073                    ??___ftmul 0033  
                  ??___llmod 0079                    ??___ftsub 007A                    ??___fttol 004A  
                  ??___lwdiv 0079                    ??___lwmod 0077                       _fround 0638  
           ___awdiv@quotient 0027              ___awmod@divisor 0073              ___awmod@counter 0078  
      ___ftmul@f3_as_product 0038                    ??_isdigit 0073                       saved_w 007E  
        __size_of_USART_Init 00DD                    ??_sprintf 00A0              LCD_Set_Cursor@a 0021  
            LCD_Set_Cursor@x 0020              LCD_Set_Cursor@y 0077      __end_of__initialization 001D  
                  ?_LCD_Init 0070                   ___ftadd@f1 004D                   ___ftadd@f2 0050  
                 ___ftge@ff1 0073                   ___ftge@ff2 0076                   ___ftneg@f1 0073  
                 ___awtoft@c 0023          ___bmul@multiplicand 0029                   ___ftmul@f1 002D  
                 ___ftmul@f2 0030                  ?_Read_USART 0070                   ___ftsub@f1 005D  
                 ___ftsub@f2 005A                   ___fttol@f1 0046               __pcstackCOMMON 0070  
                 ___lltoft@c 0023                __end_of_scale 1000                   __div_to_l_ 0829  
         __size_of_configADC 000A              __div_to_l_@exp1 002D              __div_to_l_@cntr 002C  
                    ??_scale 0040              __div_to_l_@quot 0028                 sprintf@width 00AC  
               Write_USART@a 0073                   __pbssBANK0 006C                   __pbssBANK1 00BF  
                 ??_LCD_Init 0077                      ?_PUERTO 0070                __div_to_l_@f1 0073  
              __div_to_l_@f2 0076                   __pmaintext 1609                      ?___bmul 0029  
                    ?___ftge 0073                      ?___wmul 0073                      PUERTO@x 0073  
                    ?_lecADC 0070                ??_Write_USART 0073                   __pintentry 0004  
                    ?_fround 003D                    ?___awtoft 0023                    ?___ftpack 0073  
                  ?___lltoft 0023   __end_of_Write_USART_String 1DA6          __size_of_Read_USART 0008  
                  ?_configIO 0070                   __stringtab 1000                   _conversion 1DA6  
            __size_of_PUERTO 003E                 ??_USART_Init 002C            __end_of__npowers_ 105E  
                 _scale$1066 0042            __end_of_configADC 1CA0                      ___aldiv 12ED  
            __size_of___bmul 0017              __size_of___ftge 0038                      ___awdiv 1176  
                    ___ftadd 0955                      ___awmod 1FA7                      ___ftneg 10BE  
                    ___lldiv 110E              __size_of___wmul 0025                      ___ftmul 1524  
                    ___llmod 1F51                      ___ftsub 1D0B                      ___fttol 1261  
            __size_of_lecADC 00FD                      ___lwdiv 10C8                      ___lwmod 1E95  
                 ??___awtoft 0078                   ??___ftpack 0020                    _ANSELbits 0188  
            __size_of_fround 01A9                   ??___lltoft 0078             ??_LCD_Set_Cursor 0078  
                    __ptext1 0A8B                      __ptext2 0D45                      __ptext3 1FA7  
                    __ptext4 1176                      __ptext5 1CAC                      __ptext6 0638  
                    __ptext7 1E95                      __ptext8 10C8                      __ptext9 1CD4  
               __size_of_ISR 002D                  ?__div_to_l_ 0073                      lecADC@x 0075  
                    _dpowers 105E          __end_of_Write_USART 1CAC                      _isdigit 1CAC  
           ___awmod@dividend 0075             ___aldiv@dividend 0024           __end_of_USART_Init 1524  
                 ??_configIO 0073                      _sprintf 0A8B                      clrloop0 1C8F  
                  _LCD_clear 1C7F         end_of_initialization 001D            ?_print_LCD_String 0076  
         ??_print_LCD_String 0020              ___lldiv@divisor 0020              ___lldiv@counter 0078  
           ___aldiv@quotient 0076                      psplit$0 C0035               __tdiv_to_l_@f1 0073  
             __tdiv_to_l_@f2 0076                ??__tdiv_to_l_ 0020                    _TRISAbits 0085  
                  _TRISBbits 0086                    _TRISEbits 0089                   ?_LCD_clear 0070  
                ?_conversion 003D                ??_comandosLCD 0074               __end_of_PUERTO 1F0D  
          __size_of_LCD_Init 002C          __size_of__div_to_l_ 012C                 ??_Read_USART 0070  
                ___ftmul@exp 0037      __size_of_print_LCD_Char 001C               __end_of___bmul 1CEB  
             __end_of___ftge 1E95                  _Write_USART 1CA0               __end_of___wmul 1D55  
             __end_of_lecADC 1800            pnum$text1_split_1 0035                  USART_Init@x 0038  
             __end_of_fround 07E1          start_initialization 000F                  __end_of_ISR 1E2A  
        __end_of__tdiv_to_l_ 1447           __end_of_Read_USART 1C8E                     ??_PUERTO 0073  
            ___llmod@divisor 0028                 _lecturaUSART 007A              ___llmod@counter 0030  
   __CFG_FOSC$INTRC_NOCLKOUT 0000                     ??___bmul 002A                     ??___ftge 0079  
        __end_of_comandosLCD 1D0B                     ??___wmul 0077                     ??_lecADC 0073  
                   ??_fround 0040                sprintf@tmpval 00AE          __size_of_conversion 002B  
                 fround@prec 004C            __size_of___awtoft 0029            __size_of___ftpack 0082  
          __size_of___lltoft 0033                  __pbssCOMMON 007A                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00A0                  ??_LCD_clear 0077  
          __size_of_configIO 0016                  sprintf@flag 00AA                  sprintf@eexp 00B6  
                sprintf@fval 00B8           _Write_USART_String 1D7B                  sprintf@prec 00BC  
           ___lwdiv@dividend 0022          ?_Write_USART_String 0074                     ?___aldiv 0020  
                   ?___awdiv 0020                     ?___ftadd 004D                     ?___awmod 0073  
                   ?___ftneg 0073                     ?___lldiv 0020                     ?___ftmul 002D  
                   ?___llmod 0028                     ?___ftsub 005A                    __npowers_ 1037  
                   ?___fttol 0046                     ?___lwdiv 0020                     ?___lwmod 0073  
                  _configADC 1C96                    __pstrings 1000                  __tdiv_to_l_ 138A  
               ??__div_to_l_ 0020                     ?_isdigit 0070         ??_Write_USART_String 0076  
           ___lwdiv@quotient 0024                     ?_sprintf 0060               __size_of_scale 02BB  
            ___aldiv@divisor 0020            interrupt_function 0004              ___aldiv@counter 0074  
                   _LCD_Init 1DD1               ___wmul@product 0077                  _comandosLCD 1CEB  
                  clear_ram0 1C8E                     _PIE1bits 008C               _print_LCD_Char 07E1  
                   _PIR1bits 000C           __end_of__div_to_l_ 0955    __size_of_print_LCD_String 0044  
                 ?_configADC 0070                   _ADCON0bits 001F                  __stringbase 100F  
          ___wmul@multiplier 0073           USART_Init@baudrate 0028                 ??_conversion 0040  
     __end_of_print_LCD_Char 07FD                 ?_Write_USART 0070             __size_of___aldiv 009D  
           __size_of___awdiv 0069             __size_of___ftadd 0136             __size_of___awmod 0059  
           __size_of___ftneg 000A             __size_of___lldiv 0068             __size_of___ftmul 00E5  
           __size_of___llmod 0056             __size_of___ftsub 0025             __size_of___fttol 008C  
           __size_of___lwdiv 0046             __size_of___lwmod 003A                     ___awtoft 0800  
                   ___ftpack 11DF                  _fround$1064 0049                  _fround$1065 0046  
         __end_of__stringtab 1010                     ___lltoft 1E2A                  _isdigit$868 0073  
                 _ANSELHbits 0189                   sprintf@val 00B2           __end_of_conversion 1DD1  
           __size_of_isdigit 0012              ___lwdiv@divisor 0020              ___lwdiv@counter 0026  
                   __ptext10 138A                     __ptext11 0829                     __ptext20 1E5D  
                   __ptext12 1D30                     __ptext21 1F0D                     __ptext13 1E2A  
                   __ptext30 1D7B                     __ptext22 07E1                     __ptext14 1F51  
                   __ptext31 1CA0                     __ptext23 1703                     __ptext15 110E  
                   __ptext40 1C86                     __ptext32 1447                     __ptext24 1DA6  
                   __ptext16 1261                     __ptext33 12ED                     __ptext25 1524  
                   __ptext17 1D0B                     __ptext34 1C7F                     __ptext26 0800  
                   __ptext18 0955                     __ptext35 1D55                     __ptext27 11DF  
                   __ptext19 10BE                     __ptext36 1DD1                     __ptext28 1CBE  
                   __ptext37 1CEB                     __ptext29 1C96                     __ptext38 1ECF  
                   __ptext39 1DFD            __CFG_BOR4V$BOR40V 0000                     __powers_ 1010  
                   _configIO 1CBE      __size_of_LCD_Set_Cursor 0026                     _contador 006D  
           __size_of_sprintf FBAD                __size_of_main 00FA                    pnum$text1 000C  
            ?_print_LCD_Char 0070                  ??_configADC 0073       print_LCD_Char@caracter 0075  
                 _INTCONbits 000B          Write_USART_String@a 0074          Write_USART_String@i 0077  
                   isdigit@c 0074                     scale@scl 0045                     intlevel1 0000  
                  sprintf@ap 00A9             __tdiv_to_l_@exp1 0029             __tdiv_to_l_@cntr 0028  
                  sprintf@sp 00BB             __tdiv_to_l_@quot 0024             ___lwmod@dividend 0075  
           ___lldiv@dividend 0024                    stringcode 100A             _print_LCD_String 1F0D  
               ?__tdiv_to_l_ 0073                     sprintf@c 00BE                     sprintf@f 0060  
           ___lldiv@quotient 0074              ___lwmod@divisor 0073              ___lwmod@counter 0078  
                   stringdir 100A                     stringtab 1000                 ___aldiv@sign 0075  
               ?_comandosLCD 0070                   _USART_Init 1447  
